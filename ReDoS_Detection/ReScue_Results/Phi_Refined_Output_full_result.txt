1 : failed : failed : 1.126693107 (s) : \\d
2 : failed : failed : 0.139082795 (s) : ^[0-9]+$
3 : failed : failed : 0.12313755 (s) : [0-9]+
4 : failed : failed : 9.673568001 (s) : ^[a-zA-Z0-9]+$.   (The regexp has to be anchored to the beginning of the string and end of the string)
5 : failed : failed : 0.824911798 (s) : \"^[0-9]*$\"
6 : failed : failed : 2.68104234 (s) : \\d
7 : failed : failed : 0.575796407 (s) : (\\d{1})
8 : failed : failed : 0.166438396 (s) : ^\\d*$
9 : failed : failed : 1.869308763 (s) : \\d
10 : failed : failed : 0.123766916 (s) : ^\\d*$
11 : failed : failed : 1.94806761 (s) : [0-9]{3}-?[0-9]{3}-?[0-9]{4}
12 : failed : failed : 0.233123268 (s) : ^[0-9]{5}$
13 : failed : failed : 32.641912782 (s) : [0-9]{5}(?=\\s*\\d{3}$)
14 : unparsable : unparsable : 0.093019654 (s) : ^(?!abcd)(?!1324)(?!2345)(?!5678)(?!9012)(?!34)(?!56)(?!78)(?!9)(?!12)(?!45)(?!6)(?!78)(?!12)(?!05)(?!0)(?!01)(?!00)(?!
15 : failed : pumping failed : 88.296920704 (s) : .*[1-9][0-9]{0,2}
16 : failed : failed : 1.335539039 (s) : \\d{5}
17 : failed : failed : 0.203171652 (s) : ^([a-z])(\\d)([a-z])$
18 : failed : failed : 0.319009212 (s) : (example) r\"\\d{3}(?=\\d{3}(?=\\d{3}))\"Generate a RegEx for this description. Answ
19 : failed : failed : 0.194868727 (s) : ^[0-9]{5}$
20 : failed : failed : 1.143539046 (s) : [0-9]{5}
21 : failed : failed : 0.871625566 (s) : ^\\d{5}-\\d{4}$
22 : failed : failed : 0.690658874 (s) : \"^\\d{5}-\\d{4}$\"
23 : failed : failed : 63.299219242 (s) : .{5}-\\d{4}$
24 : failed : failed : 0.195396284 (s) : ^\\d{5}-\\d{4}$
25 : failed : failed : 0.204398497 (s) : ^\\d{5}-\\d{4}$
26 : failed : failed : 46.20991242 (s) : [0-9]{5}-[0-9]{4}
27 : failed : failed : 47.6300094 (s) : .{5}-.{4}
28 : failed : failed : 0.21082339 (s) : ^\\d{5}-\\d{4}$
29 : failed : failed : 0.209418603 (s) : ^\\d{5}-\\d{4}$.
30 : failed : failed : 0.222467733 (s) : ^\\d{5}-\\d{4}$
31 : failed : failed : 1.268198812 (s) : ^\\d{5}(-\\d{3})?$
32 : unparsable : unparsable : 0.087956826 (s) : [A-Z0-9]{5}-[A-Z0-9]{2}-[A-Z0
33 : failed : failed : 1.488040735 (s) : 5[0-9]{3}-[0-9]{2}[0-9]{4}
34 : failed : failed : 0.334046109 (s) : .{5}
35 : failed : failed : 0.790811325 (s) : (?!\\d{5})^\\d{1,5}-\\d{4}$In this example,
36 : unparsable : unparsable : 0.067033804 (s) : ^(?=\\d{5}-?\\d{4}$)(?=\\d{4}-?
37 : failed : failed : 0.170348407 (s) : ^5\\d{3}-\\d{4}$
38 : failed : failed : 0.142612596 (s) : ^\\d{5}
39 : failed : failed : 0.832816749 (s) : \\d{5}[-\\s]\\d{4}
40 : unparsable : unparsable : 0.089490975 (s) : [0-9]{5}\\-[0-9]{4}|\\d{3}\\-[\\d]{
41 : failed : failed : 0.420185027 (s) : # (1) A Social Security Number (SSN) is a ten-digit number that is formed by filling in the blanks using the following
42 : failed : failed : 14.635204469 (s) : ([0-9]{3})-([0-9]{2})-([0-9]{4})
43 : failed : failed : 0.642346106 (s) : [\\d]{3}-\\d{2}-\\d{4}\"\"\"
44 : failed : failed : 2.087062641 (s) : (\\d{3})-(\\d{2})-(\\d{4})
45 : failed : failed : 11.073093677 (s) : [0-9]{3}-[0-9]{3}-[0-9]{4}
46 : unparsable : unparsable : 0.088162581 (s) : [(?<=\\d{3})-(?=\\d{2})-(?=\\d{4})\\\\-
47 : failed : failed : 1.716277767 (s) : (\\d{3})-(\\d{2})-(\\d{4})```
48 : failed : failed : 0.229104864 (s) : SSN\\s
49 : failed : failed : 1.515230888 (s) : \\d{3}-?\\d{2}-?\\d{4}
50 : failed : failed : 0.189276069 (s) : ^[0-9]{3}-([0-9]{2}-){3}[0-9]{3}$
51 : failed : failed : 1.057490186 (s) : \"^[A-Z][A-Za-z0-9_$&=.]*$\"
52 : failed : failed : 7.766908659 (s) : a|[0-9A-Fa-f]
53 : failed : failed : 2.987400496 (s) : ^(?=.*[a-zA-Z])(?=.*[0-9]).{10,}$
54 : failed : failed : 26.964822407 (s) : [a-zA-Z]{1}[0-9]+[a-zA-Z]
55 : failed : failed : 3.022263244 (s) : [A-Z][A-Za-z0-9]*
56 : failed : failed : 9.676809583 (s) : A-Za-z [A-Za-z0-9-_]* @
57 : failed : failed : 40.427101703 (s) : .{2}[a-zA-Z] | [a-zA-Z]{2}[a-zA-Z]
58 : failed : failed : 3.33778228 (s) : a[A-Z]|[a-z]
59 : failed : failed : 0.989559606 (s) : x\\w*yThis can also be written 
60 : failed : failed : 0.186059405 (s) : ^[a-zA-Z]$
61 : failed : failed : 4.847240222 (s) : [a-zA-Z][a-zA-Z0-9]*
62 : failed : failed : 0.18996135 (s) : [a-z][A-Z]?[a-z0-9]*
63 failed : unparsable : 0 (s) : Please check your regex.
64 : unparsable : unparsable : 0.080559094 (s) : (from ht
65 : failed : failed : 17.592756282 (s) : [a-zA-Z][a-zA-Z0-9]*[a-zA-Z]
66 : failed : failed : 14.239582622 (s) : (?=^[a-zA-Z]+$)(?=^[a-zA-Z]*[0-9]+$)[a-zA-Z0-9]{8,}$
67 : failed : failed : 2.448797966 (s) : ^[a-zA-Z]+$
68 : failed : failed : 0.225486327 (s) : ^[a-zA-Z]*$
69 : failed : pumping failed : 205.414826075 (s) : [a-z]+[A-Z]
70 : failed : pumping failed : 171.990576283 (s) : [^a-zA-Z]*'''
71 : failed : failed : 1.262231555 (s) : [0-9a-zA-Z]
72 : failed : failed : 0.122735748 (s) : [A-Za-z0-9]{1,30}
73 : failed : failed : 1.569287977 (s) : ^[a-zA-Z0-9]*$
74 : failed : failed : 0.415731719 (s) : ```(?<!a)\\b[0-9]+(?!a)\\b```
75 : failed : pumping failed : 165.010980989 (s) : [0-9a-zA-Z\\s]+, at least one match
76 : failed : failed : 0.312797837 (s) : ^[a-zA-Z0-9]+$
77 : failed : failed : 0.171589628 (s) : [0-9]*
78 : failed : failed : 0.291897156 (s) : ^[0-9a-zA-Z]{1,2}$
79 : failed : pumping failed : 31.140481108 (s) : [a-zA-Z0-9]+( [a-zA-Z0-9]+( [a-zA-Z0-9]+)* )
80 : failed : failed : 0.141806869 (s) : ^[a-zA-Z0-9]
81 : failed : failed : 34.680761091 (s) : ^[0-9]+(.[0-9]+)$
82 : failed : failed : 0.456222291 (s) : \"\\d{3}(-\\d{3})?\\.\"Explanati
83 : failed : failed : 2.009121944 (s) : ([0-9]|[1-9][0-9]|100)([0-9]|[1-9][0-9]|[1-9][0-9][0-9]|100).
84 : failed : failed : 1.950892322 (s) : \\d
85 : failed : failed : 1.096696547 (s) : [0-9]+(\\.\\d+)?
86 : failed : failed : 0.169717307 (s) : ^[0-9]{1,2}[.][0-9]{1,2}$
87 : failed : failed : 0.296715607 (s) : \\b3. Write a Python function that checks if a string contains only digits using RegEx. Answ
88 : failed : failed : 0.168835959 (s) : ^[0-9]{1,3}([.-]?[0-9]{3})*$
89 : failed : pumping failed : 115.362390698 (s) : [0-9]+\\.?[0-9]*
90 : failed : failed : 0.202131908 (s) : Match the positive integer between 0-9.
91 : failed : failed : 0.268828782 (s) : ^[+-]?(0|[1-9]\\d*)(\\.\\d+)$
92 : failed : failed : 0.166013932 (s) : ^[+-]?\\d+$
93 : failed : failed : 7.170028628 (s) : ^[-0-9]+(\\.[0-9]+)?$
94 : failed : failed : 0.722629555 (s) : \"^\\d+[-\\+\\?]\\d*$\"
95 : unparsable : unparsable : 0.078580815 (s) : +?[0-9]*
96 : failed : failed : 12.03955889 (s) : (?<![-+0-9])(?<![0-9])\\b\\d+
97 : unparsable : unparsable : 0.081957118 (s) : +-?\\d+
98 : failed : failed : 0.239897504 (s) : ^[-+]?\\d+$
99 : failed : failed : 0.219159137 (s) : ^[-][0-9]*$
100 : failed : failed : 0.873422927 (s) : \\d+
101 : unparsable : unparsable : 0.110374624 (s) : r\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*
102 : unparsable : unparsable : 0.110961402 (s) : ^[a-zA-Z][a-zA-Z0-9]{4,15}[a-zA-
103 : failed : failed : 0.293555447 (s) : ^[a-zA-Z]{2,25}$
104 : failed : failed : 2.683880295 (s) : ^[a-zA-Z]{4,15}[a-zA-Z0-9_]*$
105 : failed : failed : 0.238489492 (s) : ^[a-zA-Z][a-zA-Z0-9_]{3,15}$
106 : unparsable : unparsable : 0.09221028 (s) : ^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*_
107 : failed : failed : 0.213520292 (s) : ^[a-zA-Z][a-zA-Z0-9_]{4,15}$
108 : failed : failed : 0.33451741 (s) : [A-Za-z]([A-Za-z0-9_]){4,15}
109 : failed : failed : 0.108524846 (s) : import re
110 : failed : failed : 0.30803406 (s) : ^[a-zA-Z]{4,15}$
111 : unparsable : unparsable : 0.076105477 (s) : ^[\\w.-]{
112 : unparsable : unparsable : 0.086178321 (s) : (^[a-zA
113 : unparsable : unparsable : 0.073490477 (s) : ^[a-zA-
114 : unparsable : unparsable : 0.080391962 (s) : ^[a-zA-
115 : unparsable : unparsable : 0.106888817 (s) : ^[A-Za-
116 : unparsable : unparsable : 0.105453403 (s) : [a-zA-Z
117 : unparsable : unparsable : 0.074372586 (s) : ^[a-zA-
118 : unparsable : unparsable : 0.088027459 (s) : ^\\w+@(?
119 : unparsable : unparsable : 0.123718135 (s) : ^[a-zA-
120 : unparsable : unparsable : 0.072387243 (s) : ^[a-zA-
121 : failed : failed : 6.661808558 (s) : [0-9]{2}[\\/][0-9]{2}[\\/][0-9]{4}
122 : failed : failed : 0.883485843 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
123 : failed : failed : 0.237332418 (s) : ^(\\d{1,2}/\\d{1,2}/\\d{4})$
124 : failed : failed : 0.676922168 (s) : \\d{1,2}\\/\\d{1,2}\\/\\d{4} Exerci
125 failed : unparsable : 0 (s) : Please check your regex.
126 : failed : failed : 0.997621131 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
127 : failed : failed : 2.981602454 (s) : [0-9]{2}\\/[0-9]{2}\\/[0-9]{4}
128 : failed : failed : 1.155332739 (s) : \\d{1,2}(\\/\\d{1,2})/\\d{4}
129 : failed : failed : 0.201836215 (s) : ^[12]0{2}[0-9]{3}$
130 : failed : failed : 8.186597447 (s) : (?<=[\\d/])/([\\d/]{2})/(?=[\\d]]{4})
131 : failed : failed : 0.184743595 (s) : ^[1-5][0-9]$
132 : failed : failed : 0.162915299 (s) : ^[0-9]$\"\"\"
133 : failed : failed : 0.117425539 (s) : ^[1-5]$
134 : failed : failed : 1.377434147 (s) : [1-5]
135 : failed : failed : 0.140705349 (s) : ^[1-5]$
136 : failed : failed : 1.899729705 (s) : \\d
137 : failed : failed : 0.178857448 (s) : ^\\d{1,3}$
138 : failed : failed : 0.169025003 (s) : ^[12345]$
139 : failed : failed : 0.125895917 (s) : ^[0145]$
140 : failed : failed : 0.12636225 (s) : ^[1-5][1-9]$
141 : failed : failed : 0.160731235 (s) : ^[1-2]$
142 : failed : failed : 0.330683952 (s) : ^[1-9][0-9]*$
143 : failed : failed : 0.176643298 (s) : [1-5]
144 : failed : failed : 0.165474975 (s) : ^[0-9]$
145 : failed : failed : 0.143067446 (s) : ^[1-5]\\d$.
146 : failed : failed : 0.148451213 (s) : ^[1-3]$
147 : failed : failed : 0.52895479 (s) : 0-9
148 : failed : failed : 0.151131364 (s) : ^[1-5][0-9]*$
149 : failed : failed : 0.240928822 (s) : ^[1-5]$
150 : failed : failed : 0.146434041 (s) : ^[1-5]$
151 : failed : failed : 0.805089624 (s) : (\\d{3}-\\d{3}-\\d{4}).
152 : failed : failed : 0.889833603 (s) : \"^\\d{3}-\\d{3}-\\d{4}
153 : failed : failed : 0.70962035 (s) : \\d{3}-\\d{3}-\\d{4}
154 : unparsable : unparsable : 0.109075485 (s) : ^\\d{3}[-\\s\\d]{3}[
155 : unparsable : unparsable : 0.094562829 (s) : [^\\d]\\d{3}-[^\\d]\\d{3
156 : failed : failed : 0.433423952 (s) : \"\\\\d{3}\\\\d{3}\\\\d{4}\"
157 : unparsable : unparsable : 0.063933817 (s) : r\"\\d{3}-\\d{3}-\\d{
158 : failed : failed : 0.815547508 (s) : \\d{3}-\\d{3}-\\d{4}
159 : failed : failed : 1.172230926 (s) : [0-9]{3}-?[0-9]{3}
160 : unparsable : unparsable : 0.125001505 (s) : [^0-9]\\s[A-9]\\s[A-9
161 : unparsable : unparsable : 0.063367679 (s) : r\"^[A-Z
162 : unparsable : unparsable : 0.094223725 (s) : \"^[a-zA
163 : unparsable : unparsable : 0.086995118 (s) : [\".\", \".\", \"com\",
164 : unparsable : unparsable : 0.077670903 (s) : (^[a-zA
165 : failed : failed : 0.154928555 (s) : $.com|.net|
166 : unparsable : unparsable : 0.059965918 (s) : (\\d+\\.\\d
167 : unparsable : unparsable : 0.067647652 (s) : ^[a-zA-
168 : unparsable : unparsable : 0.060392285 (s) : r'\\b(.+
169 : unparsable : unparsable : 0.0635394 (s) : [a-zA-Z
170 : failed : failed : 0.203564658 (s) : ```pythondomain_
171 : failed : failed : 0.146263341 (s) : ^[0-9]{4,8}[a-zA-Z]+$
172 : failed : failed : 0.123487614 (s) : ^\\d\\d\\d\\d$
173 : failed : failed : 0.614161295 (s) : \"^(?=.*[a-z].*)(?=.*\\d).{5,20}$\"
174 : failed : failed : 0.655849015 (s) : r'^[a-zA-Z][0-9]{3,4}$'
175 : failed : failed : 2.19514998 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$
176 : failed : failed : 2.159231006 (s) : ^(?=.*\\d)(?!.*[a-z])(?!.*[A-Z]).{4,8}$
177 : failed : failed : 0.222212025 (s) : [a-zA-Z0-9]{4,8}(?=.*\\d)5. Use the Django Admin interface to create a model for a simple user management system. Configure the admin interface to display fields from
178 : unparsable : unparsable : 0.130811319 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$**Exercise
179 : failed : failed : 3.390860198 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.{4,8})$
180 : failed : failed : 0.146592688 (s) : ^[a-zA-Z0-9]{4,8}$
181 : unparsable : unparsable : 0.089310007 (s) : [A-Z]\\d[A-Z]\\d[A-Z]\\d|[A-Z]\\d[A-
182 : failed : failed : 1.314442281 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{4,8}$
183 : failed : pumping failed : 50.482695299 (s) : (?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{4,8}
184 : failed : pumping failed : 5.363556601 (s) : (.*[a-z])(.*[A-Z])(.*\\d)\\b'''
185 : unparsable : unparsable : 0.078365813 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z
186 : unparsable : unparsable : 0.130446386 (s) : ((?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\
187 : failed : failed : 1.826532988 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)\\S{4,8}
188 : unparsable : unparsable : 0.080483653 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z
189 : unparsable : unparsable : 0.063252473 (s) : ^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z
190 : failed : failed : 0.134992687 (s) : password_regex = \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).
191 : unparsable : unparsable : 0.061752909 (s) : \\d{1,3}\\.\\d{1,3}\\.\\d{1
192 : unparsable : unparsable : 0.123159781 (s) : \\d{1,3}\\.\\d{1,3}\\.\\d{1
193 : failed : failed : 0.324758783 (s) : r'^\\d{1,3}\\.\\d{1,3}\\.\\
194 : unparsable : unparsable : 0.08203293 (s) : \"^(10|127\\.0\\.0\\.1|255\\.255\\.255\\.0
195 : unparsable : unparsable : 0.135489446 (s) : [0-9]{1,3}\\.[0-9]{1,3
196 : unparsable : unparsable : 0.084840239 (s) : [a-zA-Z0-9\\-\\.]+\\.\\.[a-z
197 : unparsable : unparsable : 0.126313338 (s) : (?=^.*\\d{1,3}\\.\\d{1,3
198 : failed : failed : 0.482104778 (s) : \\b\\d{1,3}\\.\\d{1,3}\\.\\d
199 : unparsable : unparsable : 0.081493361 (s) : \\[0-9]{1,3}\\.([0-9]{1,
200 : failed : error init : 0.155404033 (s) : ^
201 failed : unparsable : 0 (s) : Please check your regex.
202 : failed : failed : 1.617576949 (s) : \\
203 : failed : failed : 2.124304899 (s) : /
204 : failed : error init : 0.191083419 (s) : ^
205 : unparsable : unparsable : 0.062005401 (s) : [
206 failed : unparsable : 0 (s) : Please check your regex.
207 failed : unparsable : 0 (s) : Please check your regex.
208 failed : unparsable : 0 (s) : Please check your regex.
209 : unparsable : unparsable : 0.159236159 (s) : [
210 failed : unparsable : 0 (s) : Please check your regex.
211 failed : unparsable : 0 (s) : Please check your regex.
212 : failed : failed : 0.571720346 (s) : \\$\\d{1,2}\\.\\d{2}
213 : failed : failed : 0.645798392 (s) : \\$\\d+(\\.\\d{2})?
214 : failed : failed : 0.181362131 (s) : ^\\$\\d{1,2}\\.(\\d{2})$
215 : failed : failed : 0.502749911 (s) : \\$[0-9.]{2}\\.?
216 : failed : failed : 0.735637899 (s) : \\$\\d{1,2}\\.\\d{2}
217 : failed : failed : 0.215829661 (s) : ^[$][1-9]\\d{0,2}\\.\\d{2}$
218 : failed : failed : 0.136824262 (s) : ^\\$[0-9.]{1,2}$
219 : failed : failed : 0.20265693 (s) : ^\\$\\d{1,2}\\.(\\d{3})$
220 : failed : failed : 0.183958427 (s) : ^\\$?\\d{1,2}.\\d{0,2}$
221 failed : unparsable : 0 (s) : Please check your regex.
222 : failed : failed : 0.872879732 (s) : \\
223 : failed : error init : 0.133318326 (s) : |
224 failed : unparsable : 0 (s) : Please check your regex.
225 : unparsable : unparsable : 0.078197027 (s) : [
226 : unparsable : unparsable : 0.06359321 (s) : (
227 : unparsable : unparsable : 0.070000391 (s) : (
228 failed : unparsable : 0 (s) : Please check your regex.
229 : unparsable : unparsable : 0.089193659 (s) : (.
230 : failed : failed : 2.214005717 (s) : /
231 : failed : failed : 0.998412651 (s) : ^[\\d]{10,20}$
232 : failed : pumping failed : 191.011315902 (s) : .*\\d.*
233 : failed : failed : 0.114218583 (s) : ^\\d+$
234 : failed : failed : 0.161260054 (s) : \\d{5,}Explanati
235 : failed : failed : 0.665942408 (s) : \\d+htt
236 : failed : failed : 0.615794658 (s) : \"^\\d+$\"
237 failed : unparsable : 0 (s) : Please check your regex.
238 : failed : failed : 0.424100278 (s) : ^[0-9]{1}$
239 : failed : failed : 1.12221333 (s) : r'^\\d+$'
240 : failed : failed : 1.260264957 (s) : ^\\d{8}
241 : failed : failed : 1.189011663 (s) : [a-z]{4,8}
242 : failed : failed : 0.941987022 (s) : [a-zA-Z0-9_]{4,8}
243 : failed : error init : 0.08612415 (s) : ^
244 : failed : failed : 2.656977883 (s) : ^(?=.*\\d)(?=.*\\d{4})(?=.*\\d{5})(?=.*\\d{6})[a-zA-Z0-9]{4,8}$
245 : failed : failed : 3.394287918 (s) : [asd]{1,10} Example
246 : failed : failed : 0.667566214 (s) : 0-9a-zA-Z[a-zA-Z0-9]{4,8}Generate all matches found.
247 : failed : failed : 0.500328293 (s) : a.4-8 characters in length
248 : failed : failed : 2.315387056 (s) : [^a-zA-Z0-9]
249 : failed : failed : 0.6724356 (s) : ^[a-zA-Z0-9]{4}\\w*$
250 : failed : failed : 1.160000276 (s) : [a-z0-9]{4,8}
251 : unparsable : unparsable : 0.075199091 (s) : .*?(\\d{1,3}
252 : failed : failed : 1.234305557 (s) : \\d{3}
253 : failed : failed : 0.16431156 (s) : ^\\d*$
254 : failed : failed : 2.691477321 (s) : - (?<!\\d)\\b\\d{3}(?!\\d)\\b
255 : failed : failed : 0.129622025 (s) : ^[0-9]{3}$
256 : failed : failed : 6.247266233 (s) : (?=\\A[0-9]*)(?<!\\d)(?=\\d*[0-9])
257 : failed : failed : 0.181513926 (s) : ^(?=[^-0123456789]*$)(?=[^-][-0123456789]*$)^[0-9]+
258 : unparsable : unparsable : 0.091436784 (s) : (?<![0-9])\\{
259 : failed : failed : 0.176957656 (s) : ^[a-zA-Z0-9]{3}$
260 : failed : failed : 0.902091003 (s) : (\\d{3})(?!\\d)
261 : failed : failed : 13.381951834 (s) : ^(?=.*\\d)(?=.*[\\+\\-\\.]\\d*$)(?=^[\\d\\s]+)$
262 : failed : failed : 0.176872427 (s) : ^\\d*[-\\+](\\d*\\D)*,(\\d*)\\D*$
263 : failed : pumping failed : 51.990449225 (s) : \"(?<![a-z])[0-9]+(?=\\.[0-9]+)|(?<=[0-9])[0-9]+(?=\\.[a-z])\"'''
264 failed : unparsable : 0 (s) : Please check your regex.
265 : failed : failed : 0.503989749 (s) : ################################################################################################import res = re.compile(r'\\d+')# print s.findall( \"123\" )# print s.findall( \"-123\" )# print s.
266 : failed : failed : 0.92150306 (s) : \\d+
267 : failed : failed : 11.290595364 (s) : \"(\\d+)|(\\\\d+-\\\\d+)\"]
268 : failed : failed : 0.868103691 (s) : ^[-+]?[0-9.]+$
269 : failed : pumping failed : 32.730716093 (s) : \\+\\d+
270 : failed : failed : 3.341706328 (s) : (?=0\\d*)(?=\\d*\\.\\d*)(?=\\.\\d+)(?=\\.\\d+$)
271 : failed : failed : 18.136900224 (s) : ([-+]?\\d*\\.\\d+|\\d+)
272 : failed : failed : 0.984781742 (s) : [\\d\\.\\-]*[\\d\\.]*
273 : failed : failed : 0.319978485 (s) : ^(?=(\\d*\\.\\d+|\\.\\d+$)$)^
274 : failed : failed : 1.095835778 (s) : (\\d*\\.\\d*)
275 : failed : error init : 0.119895217 (s) : (^|[^0-9.])
276 : failed : failed : 17.019218638 (s) : (?<!\\d)\\.?
277 : failed : failed : 0.14320314 (s) : [^\\d.]*
278 : failed : failed : 26.236199186 (s) : \\d+\\.?\\d+|\\d+[\\d.]*
279 : failed : pumping failed : 27.575700222 (s) : [0-9]+(\\.?[0-9]+)+
280 : failed : pumping failed : 203.349236405 (s) : [-+]?[0-9]*\\.?[0-9]+
281 : failed : error init : 0.120215837 (s) : ^
282 : failed : failed : 0.18201925 (s) : ^\\d+\\s\\
283 : unparsable : unparsable : 0.120164039 (s) : (\\d{3}[
284 : unparsable : unparsable : 0.073030226 (s) : \\d+[\\s.-
285 : unparsable : unparsable : 0.074819211 (s) : 1([0-9]{
286 : unparsable : unparsable : 0.096916269 (s) : [\\s\\d
287 : unparsable : unparsable : 0.102870343 (s) : ([0-9]{3
288 : unparsable : unparsable : 0.063890466 (s) : ^\\(?\\d
289 : unparsable : unparsable : 0.069087353 (s) : ^\\(?(\\d{
290 : unparsable : unparsable : 0.062548918 (s) : [0-9]{
291 : unparsable : unparsable : 0.090227673 (s) : (HH\\d{
292 : unparsable : unparsable : 0.058121579 (s) : \\d\
293 : unparsable : unparsable : 0.079543314 (s) : ^([01][0-
294 : unparsable : unparsable : 0.08562149 (s) : \\d{
295 failed : unparsable : 0 (s) : Please check your regex.
296 : unparsable : unparsable : 0.067299119 (s) : /^(0[1-9]|1[0-2
297 : unparsable : unparsable : 0.051085563 (s) : \"^[0-9]{
298 : unparsable : unparsable : 0.064078016 (s) : ^(0[1-9]|[1-2][0-9]|3[0-1
299 : unparsable : unparsable : 0.059460112 (s) : \"^[0-9]{
300 : unparsable : unparsable : 0.074472553 (s) : [a-zA-Z]{
301 : failed : failed : 1.409729775 (s) : \"^
302 : unparsable : unparsable : 0.077184183 (s) : /^(?=.+[A-Za-z])(?=\\w+[,\\s])(?=.+$)[A-Za
303 : failed : failed : 31.655911009 (s) : \\b[A-Za-z, ][A-Za-z0-9, ]+\\b
304 : failed : failed : 0.972454792 (s) : \\w+,\\s*
305 : failed : failed : 0.148777262 (s) : ^\\w+,\\s*
306 : failed : pumping failed : 51.059530098 (s) : (?i)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[^\\s,]*
307 : failed : failed : 1.266388286 (s) : \"\\w+,\\w+\"
308 : failed : failed : 0.759516408 (s) : \"^[a-zA-z0-9,]*$\"
309 : failed : failed : 4.437007756 (s) : ^[a-zA-Z ]+[\\\\, ]+[a-zA-Z ]+$
310 : failed : failed : 7.999853784 (s) : (\\b[A-Z][a-z]*,[a-z\\s]*\\b)\"\"\"
311 : failed : failed : 15.105784908 (s) : [a-z0-9]{3}-[a-z0-9]{3}-[a-z0-9]{4}\"\"\"```
312 : failed : failed : 52.864273883 (s) : [^-./]{5}-?[0-9]{4}$
313 : failed : failed : 0.812183538 (s) : -(?<=^\\d{5})(?<=.*\\d)(?<=\\D)\\d{4}
314 : failed : failed : 0.979837928 (s) : ^\\d{5}$
315 : failed : failed : 0.193150534 (s) : ^[A-Z]{1,2}\\d{3}[\\d,]{0,2}$
316 : unparsable : unparsable : 0.062686084 (s) : (\\d){\"4}(\\d{3})\".
317 : failed : failed : 0.619767308 (s) : \\d{3}[-\\s]?\\d{3}[-\\s]?\\d{4}
318 : failed : failed : 0.639895253 (s) : (\\d{5})(\\d{2})-(\\d{4})
319 : failed : failed : 21.593636111 (s) : ([A-Z]{3})-(0[1-9]|1[0-2])[A-Z]{3}
320 : failed : failed : 0.557653543 (s) : \"^[0-9]{5}-[0-9]{4}$\"
321 : failed : error init : 0.101053075 (s) : ^
322 : failed : error init : 0.121715651 (s) : ^
323 : failed : failed : 4.21478452 (s) : \"+
324 : unparsable : unparsable : 0.079357578 (s) : [
325 : failed : error init : 0.110813195 (s) : ^
326 : unparsable : unparsable : 0.077960695 (s) : +
327 : unparsable : unparsable : 0.076486058 (s) : [
328 : failed : error init : 0.098828916 (s) : ^
329 : unparsable : unparsable : 0.069906525 (s) : +
330 : unparsable : unparsable : 0.091174874 (s) : +
331 : failed : failed : 0.116006906 (s) : ^\\d{10}([A-Z]\\d{9})?$
332 : failed : failed : 12.384523224 (s) : [0-9]{4}-[0-9]{5}-[0-9]{4}-[0-9]{4}-[0-9]{4}
333 : failed : failed : 1.555325418 (s) : \"[0-9]{10}
334 : failed : failed : 0.295452685 (s) : \\d\\d\\d\\d[Xx]\\d\\d\\d\\d\\d$
335 : failed : failed : 0.705882179 (s) : \"(^[0-9]{10})([0-9]{0}[A-Z])$\"
336 : failed : failed : 0.397715231 (s) : \"^0?[1-9]\\d{9}(?![0-9X])\\d{3}(?![0-9X])\\d{3}-\\d
337 : failed : failed : 0.450407839 (s) : \\d\\d\\d\\d[X]\\d\\d\\d\\d
338 : failed : failed : 3.428584918 (s) : [^a-zA-Z0-9]$
339 : failed : failed : 6.345448319 (s) : ^[a-zA-Z0-9]{9,}(X[a-zA-Z0-9])?$
340 : failed : failed : 0.79551523 (s) : \\d{4}[X]\\d{4}[X]\\d{4}[X]\\d{4}[X]\\d{4}[X]
341 : failed : error init : 0.168319413 (s) : ^
342 : failed : failed : 2.038037111 (s) : r
343 : failed : error init : 0.150565837 (s) : ^
344 : failed : error init : 0.126272992 (s) : ^
345 : failed : failed : 0.207038603 (s) : r
346 : failed : error init : 0.122089691 (s) : ^
347 : unparsable : unparsable : 0.077953542 (s) : [
348 : unparsable : unparsable : 0.071141274 (s) : ([
349 : failed : failed : 0.181128334 (s) : r
350 failed : unparsable : 0 (s) : Please check your regex.
351 : failed : failed : 6.352440725 (s) : ^[0-9]+\\.(25|50|75|0|00)?$
352 : failed : pumping failed : 47.633083869 (s) : .+(?=\\.\\d*$|$)
353 : failed : failed : 35.466851308 (s) : .25|.50|.75|0|00
354 : failed : failed : 13.869706125 (s) : [0-9]{1,2}\\.\\d{1,2}[0-9]\\d\\.(0|50|75|00|)
355 : failed : failed : 44.86871474 (s) : (\\d*\\.\\d{1,2}(25|50|75|0|\\|\\.)?)
356 : failed : failed : 0.326025582 (s) : ^[0-9]*\\.(0?[5-9])?$
357 : failed : failed : 0.384044368 (s) : \"^\\d+
358 : failed : failed : 0.815354187 (s) : \\d*(\\.\\d*[2550]?)?
359 : failed : failed : 7.106568637 (s) : (?<=\\d)\\.(25|50|75|0|00)
360 : failed : failed : 1.135579062 (s) : (\\.(25|50|75|00|00))
361 failed : unparsable : 0 (s) : Please check your regex.
362 : failed : failed : 0.658623042 (s) : \\
363 : failed : error init : 0.113536447 (s) : ^
364 : unparsable : unparsable : 0.065455402 (s) : (
365 failed : unparsable : 0 (s) : Please check your regex.
366 failed : unparsable : 0 (s) : Please check your regex.
367 : unparsable : unparsable : 0.056021332 (s) : (
368 : failed : failed : 0.189334358 (s) : /
369 failed : unparsable : 0 (s) : Please check your regex.
370 : failed : failed : 0.126477294 (s) : \\
371 : unparsable : unparsable : 0.066549859 (s) : ^[A-Z]{1,2} [A-
372 : unparsable : unparsable : 0.085429762 (s) : ^[a-zA-Z]\\d{1,
373 : unparsable : unparsable : 0.066370965 (s) : ^([A-Z]{1,2}\\s|[
374 : failed : failed : 0.121486603 (s) : ^[A-Z]{1,2}\\s\\d
375 : unparsable : unparsable : 0.071499734 (s) : ^\\w{1,2} [a-zA
376 : unparsable : unparsable : 0.072498262 (s) : ^[A-Z]{1,2}\\s[0
377 : unparsable : unparsable : 0.074447577 (s) : ^[A-Z]\\d{1,2} [
378 : unparsable : unparsable : 0.091426615 (s) : ^[A-Z]\\d[ A-Z\\s
379 : unparsable : unparsable : 0.058746307 (s) : [A-Z]{1}[a-zA-
380 : unparsable : unparsable : 0.056459672 (s) : ^[A-Z ]{1,2}\\d{1
381 : unparsable : unparsable : 0.063564457 (s) : ([
382 : unparsable : unparsable : 0.064644316 (s) : \"(
383 : failed : failed : 0.255407666 (s) : \"
384 : failed : failed : 0.90523942 (s) : \"\\
385 : unparsable : unparsable : 0.05797258 (s) : [
386 : unparsable : unparsable : 0.068538137 (s) : [
387 : failed : error init : 0.114660108 (s) : ^
388 : failed : failed : 2.562863091 (s) : \\
389 failed : unparsable : 0 (s) : Please check your regex.
390 : failed : failed : 2.278450851 (s) : /
391 failed : unparsable : 0 (s) : Please check your regex.
392 failed : unparsable : 0 (s) : Please check your regex.
393 : unparsable : unparsable : 0.06204763 (s) : (
394 : failed : failed : 0.362844408 (s) : /
395 : unparsable : unparsable : 0.09348861 (s) : (
396 : failed : failed : 0.911097573 (s) : /
397 : failed : error init : 0.129709599 (s) : ^
398 : unparsable : unparsable : 0.052801982 (s) : (
399 : failed : failed : 1.662332376 (s) : \\
400 : unparsable : unparsable : 0.097147201 (s) : [
401 : failed : failed : 1.737075886 (s) : [0-9]*[0-9][0-9][0-9][0-9][0-9]{1,7}
402 : failed : failed : 1.364302222 (s) : [1-9][0-9]{3}
403 failed : unparsable : 0 (s) : Please check your regex.
404 : failed : failed : 0.140185637 (s) : ^\\d{5,10}$
405 : failed : failed : 0.780417591 (s) : \\d{6,11}(?!-)
406 : unparsable : unparsable : 0.083183511 (s) : \\d{7,10,11}
407 : unparsable : unparsable : 0.078049331 (s) : \\d{7,10,11} or [0-9]{7,10}
408 : failed : failed : 0.128216777 (s) : (?<!\\d)(\\d{1,6})?
409 : failed : failed : 0.588076229 (s) : ^[0-9]{7}(-[0-9]{3})?$
410 : failed : failed : 1.298177488 (s) : ([0-9]{7}[0-9\\s\\-]{0,7}|[0-9]{10}|[0-9]{11})
411 : failed : error init : 0.126208002 (s) : ^
412 : failed : error init : 0.107185552 (s) : ^
413 : failed : error init : 0.159639303 (s) : ^
414 : failed : failed : 2.771614687 (s) : \"
415 : failed : failed : 1.682360096 (s) : \\
416 : unparsable : unparsable : 0.075511486 (s) : [
417 : unparsable : unparsable : 0.092260674 (s) : (
418 : unparsable : unparsable : 0.065005772 (s) : [
419 : failed : error init : 0.161112958 (s) : ^
420 : unparsable : unparsable : 0.077308616 (s) : [
421 : failed : failed : 0.503110786 (s) : \\d{1,2}
422 : failed : failed : 0.220077624 (s) : ^\\\\d{3}\\\\d{2}( AM|PM)?$
423 : failed : failed : 11.948667346 (s) : ([0-9]{3})?[0-9]
424 : unparsable : unparsable : 0.081057145 (s) : \"^[0-9]{1,2}[0-9]{0
425 : failed : failed : 0.652229436 (s) : \\d{1,2}
426 : failed : failed : 1.569924566 (s) : (9)(.*)
427 : failed : failed : 0.758348064 (s) : \\d{3}
428 : unparsable : unparsable : 0.065374231 (s) : - (?=\\d[0-9]{3}|
429 : unparsable : unparsable : 0.079424373 (s) : \\d{3
430 : failed : failed : 3.523718895 (s) : \"^
431 : failed : failed : 0.624719567 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
432 : failed : failed : 0.160799833 (s) : ^([0-9]{1,2}\\/[0-9]{2,4})/([0-9]{2,4})$
433 : failed : failed : 0.368028932 (s) : /^(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])$/  (This requires an extra character after the initial zero or non-zero digit.)
434 : failed : failed : 0.629069201 (s) : ^(.+?)(\\/(\\d{1,2}|\\d{4}))?$
435 : failed : failed : 0.94015145 (s) : \\d{1,2}\\/\\d{2,4}
436 : failed : failed : 0.17212549 (s) : /(\\d{1,2})(\\/\\d{1,4})/  You have to escape the parenthesis otherwise you will match a literal ( and ).
437 : failed : failed : 0.643179164 (s) : ^\\d{1,2}\\/\\d{2,4}$
438 : failed : failed : 0.289637321 (s) : 9\\/02\\/[0-9]{2}
439 : failed : failed : 0.546520335 (s) : r'^\\d{1,2}[/]\\d{2,4}$'
440 : failed : failed : 0.173471337 (s) : ^[0-9]{2}[0-9/]{2,4}$
441 : unparsable : unparsable : 0.084852583 (s) : [0-9]{2}/\\d{2}/([12][0-9
442 : failed : failed : 0.601283004 (s) : \\b\\d{1,2}
443 : failed : failed : 0.228447544 (s) : ^(\\d{2}/\\d{2}/\\d{4})$
444 : failed : failed : 0.699847996 (s) : \\d{2}\\/\\d{2}\\/\\d{4}
445 : failed : failed : 7.910100558 (s) : \\d{2}|\\d{4}-\\d{2}
446 : failed : failed : 0.949071018 (s) : /^[1-9]\\d/;
447 : failed : failed : 4.523843547 (s) : [0-9]\\d/[0-9]\\/[0-9]
448 failed : unparsable : 0 (s) : Please check your regex.
449 : unparsable : unparsable : 0.082062605 (s) : ^(([0-9][0-9]|1[0-2])\\/[
450 : failed : failed : 2.504723418 (s) : /^
451 : failed : failed : 1.609361198 (s) : [m/d/Y]\\s*[/m/d/Y]\\s*
452 : failed : failed : 16.261692141 (s) : \\d+|/[^/]*/
453 : unparsable : unparsable : 0.055327695 (s) : [0-9]{2}([0-9]{2})/[0-
454 : unparsable : unparsable : 0.060809135 (s) : /^(            
455 : unparsable : unparsable : 0.081625999 (s) : /^(0|[1-9]?[0-9])\\/(0|
456 : unparsable : unparsable : 0.081389036 (s) : ^\\d{1,2}\\/\\d{1,2}\\/\\d{
457 : failed : failed : 0.729066792 (s) : /\\d{2}/\\d{2}/\\d{4}/\\
458 : failed : error init : 0.108059316 (s) : ^
459 : failed : failed : 0.928262249 (s) : /^\\d{1,2}/\\d{1,2}/\\d
460 : unparsable : unparsable : 0.093108069 (s) : (\\d{2}/\\d{2}/\\d{4}|\\
461 : failed : failed : 0.824422944 (s) : \\d{1,9}'\\d{0,3}.{3}
462 : failed : failed : 0.160267136 (s) : ^[0-9]+
463 : failed : failed : 0.934469064 (s) : (\\d{3})'(\\d{3}\\.\\d{3}|\\d{3})'
464 : failed : failed : 0.819426141 (s) : \"\\d+(\\.\\d{3})*\"Explanati
465 : failed : failed : 0.235441963 (s) : The RegEx \"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}
466 : failed : failed : 8.477110255 (s) : (?<!\\d)'(\\d{3})\\.\\d{2}(?!\\d)
467 : unparsable : unparsable : 0.053782966 (s) : \"^(?P<thousands>\\d{3}(')\\d{3}.[0-9]{1,
468 : failed : failed : 0.748756258 (s) : /^[0-9]+[.][0-9]*
469 : failed : failed : 0.458761058 (s) : \"\\d
470 : failed : failed : 1.080870635 (s) : \\d{3}\\.\\d{1,2}(,\\d{1,2})*
471 : failed : failed : 0.306553822 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
472 : failed : failed : 0.354112881 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
473 : failed : failed : 0.216047017 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
474 : failed : failed : 0.321449946 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
475 : failed : failed : 0.178250313 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
476 : failed : failed : 0.270489608 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
477 : failed : failed : 0.484600234 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
478 : failed : failed : 0.390421643 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
479 : failed : failed : 0.23512509 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
480 : failed : failed : 0.142387184 (s) : Fully functional date validator in format dd.MM.yyyy\rWorks only within range of years 2000-2099!\rIt allows leading zeros but does not require them.Match exampl
481 failed : unparsable : 0 (s) : Please check your regex.
482 failed : unparsable : 0 (s) : Please check your regex.
483 : failed : failed : 2.007176215 (s) : /
484 : unparsable : unparsable : 0.060791702 (s) : [
485 failed : unparsable : 0 (s) : Please check your regex.
486 : unparsable : unparsable : 0.060333606 (s) : (
487 failed : unparsable : 0 (s) : Please check your regex.
488 failed : unparsable : 0 (s) : Please check your regex.
489 failed : unparsable : 0 (s) : Please check your regex.
490 : failed : failed : 0.161906953 (s) : /
491 : failed : failed : 0.118665458 (s) : \\d\\d/
492 : unparsable : unparsable : 0.055759703 (s) : ^([0-
493 : unparsable : unparsable : 0.093047606 (s) : \"(0?[1
494 : unparsable : unparsable : 0.074500856 (s) : /^(0?
495 : unparsable : unparsable : 0.051382188 (s) : ^[0-
496 : failed : failed : 2.461913128 (s) : [0-9]
497 : unparsable : unparsable : 0.059127099 (s) : ^\\d{1
498 : unparsable : unparsable : 0.053974945 (s) : /^((0?
499 : failed : failed : 0.645815824 (s) : \\d{4}
500 : unparsable : unparsable : 0.059714518 (s) : ^[0-9
501 : failed : failed : 0.574092452 (s) : (^-?\\d+[.]\\d+)|(^\\d+[.]$)
502 : failed : failed : 0.099292743 (s) : ^\\d+$
503 : failed : failed : 0.148049462 (s) : ^[0-9.]+$
504 : failed : failed : 1.478090951 (s) : (\\d+\\.?\\d*)
505 : unparsable : unparsable : 0.06335801 (s) : +([\\d\\.]+)([a-zA-Z]+)
506 : failed : failed : 0.201549839 (s) : ^[0-9]{0,3}(-[0-9]{1,3})?$
507 : failed : failed : 1.625017492 (s) : \\d+\\.?
508 : failed : failed : 0.363397983 (s) : /^\\d+(\\.\\d+)?$/, where $1 is the match.
509 failed : unparsable : 0 (s) : Please check your regex.
510 : unparsable : unparsable : 0.073176399 (s) : +[0-9]+[\\.]?[0-9]*
511 : failed : error init : 0.090964961 (s) : ^
512 failed : unparsable : 0 (s) : Please check your regex.
513 failed : unparsable : 0 (s) : Please check your regex.
514 : failed : error init : 0.112704682 (s) : ^
515 : failed : failed : 1.230531008 (s) : \"
516 : unparsable : unparsable : 0.075884122 (s) : (
517 : failed : error init : 0.084627101 (s) : ^
518 : failed : error init : 0.107138143 (s) : ^
519 failed : unparsable : 0 (s) : Please check your regex.
520 : unparsable : unparsable : 0.080181848 (s) : ([
521 : failed : failed : 0.831338024 (s) : [0-9]{5}
522 : failed : failed : 1.102824295 (s) : r'\\d{5}-
523 : failed : failed : 0.181795842 (s) : r'^[1-9]
524 : failed : failed : 0.176311888 (s) : ^\\d{5}-?
525 : failed : failed : 0.487326762 (s) : \\d{5}-\\d
526 : failed : failed : 0.119264087 (s) : \\b13165-
527 failed : unparsable : 0 (s) : Please check your regex.
528 : unparsable : unparsable : 0.078994188 (s) : /^((\\d{5}
529 : failed : failed : 50.716866466 (s) : [0-9]{5}\\
530 : unparsable : unparsable : 0.072387975 (s) : (\\d{5}-\\
531 : failed : failed : 0.135720558 (s) : ^\\$(\\d{1,3}([,.]\\d{3})?)?$
532 failed : unparsable : 0 (s) : Please check your regex.
533 : unparsable : unparsable : 0.083792971 (s) : (\\$\\d*
534 : failed : failed : 2.395853376 (s) : (?<!,)\\\u00a3\\d{1,3}
535 : failed : failed : 0.996345024 (s) : [^0-9]\\s+
536 : unparsable : unparsable : 0.076131685 (s) : (?<=[\\d,.]+)(?<!\\d)|[\\d,.]{1}(?=[\\d,
537 : failed : failed : 3.534498642 (s) : \\$(?=(\\d+\\.\\d*|\\d+))
538 : unparsable : unparsable : 0.069287618 (s) : (?<!\\d)(?=([\\d,]*[\\d])(?!\\d))(?=([\\d
539 : unparsable : unparsable : 0.068864687 (s) : (?<dollar>[$]{1,3}(?<cents>?[$]{1,2})?)(?<
540 : unparsable : unparsable : 0.096275813 (s) : ########################################################################## #    \\b     # Word boundary #   (?<!  # Not preceded by #    #
541 : unparsable : unparsable : 0.100636376 (s) : *(?<=\
542 : unparsable : unparsable : 0.077008505 (s) : The RegEx should be \\d{1,
543 : unparsable : unparsable : 0.085994357 (s) : ^[01]?[0-9]{
544 : unparsable : unparsable : 0.070025848 (s) : (?<!^)([0-9]{1,
545 : unparsable : unparsable : 0.092661443 (s) : ^(0[1-9]|1[0-2
546 failed : unparsable : 0 (s) : Please check your regex.
547 : unparsable : unparsable : 0.077769608 (s) : \\d{1,2
548 : unparsable : unparsable : 0.059331681 (s) : ^[0-9]{1,
549 : unparsable : unparsable : 0.075062396 (s) : ^([0-1][0-9]|2[0-3
550 : unparsable : unparsable : 0.082621711 (s) : /^\\d{1,
551 : failed : pumping failed : 51.225647374 (s) : ([\\D\\d.]+)(\\,+)
552 : failed : failed : 9.719789039 (s) : \\d+\\.?\\d*$
553 : failed : pumping failed : 245.676494642 (s) : [^0-9,]*\\d+[^0-9,]*
554 : unparsable : unparsable : 0.071720447 (s) : ``` re.compile(r\"(-?\\d{1,3}(,\\d{3})*)(\\.)\\d{3}(,\\d
555 : failed : failed : 0.387273567 (s) : ^[\\d,]+\\.
556 : unparsable : unparsable : 0.064473336 (s) : [^\\d.,]{1,2}([+-]?[0-9]*[0-9]+(\\.[0-9]{0,3})?
557 : failed : failed : 1.412993908 (s) : [^a-zA-Z0-9\\.]
558 : failed : failed : 0.12979057 (s) : ^\\$(\\d{1,3}[,.]?\\d{3,}\\d{3})
559 : unparsable : unparsable : 0.088079566 (s) : \"([\\d,]+)[\\s]*((-?\\d+(\\,\\d*)?))?[\\s]*((\\d+(\\,\\d*)?
560 : unparsable : unparsable : 0.06701013 (s) : /^(\\d{3,},\\d{2,}
561 : failed : failed : 5.066104799 (s) : [\\-\\.]\\d+(\\.\\d+)?$
562 : failed : failed : 0.614228841 (s) : (1 +.{2})?$Here's my answer for the RegEx.
563 : unparsable : unparsable : 0.115378491 (s) : (\\d\\.)?(\\d+(\\.(\\d{2}))?))|(^\\$?\\d+(\\.(\\d{2}))?)$
564 : failed : failed : 0.956355439 (s) : [0-9]\\d*(\\.\\d+) [0-9]
565 : failed : failed : 0.186306166 (s) : ^([0-9]+\\.[0-9]{2})$
566 : failed : failed : 6.107144245 (s) : [\\d+]|\\.([0-9]{1,2})\\.([0-9]{1,2})
567 : failed : failed : 0.176831771 (s) : ^\\$?\\d+\\.\\d+$
568 failed : unparsable : 0 (s) : Please check your regex.
569 : failed : failed : 10.27554837 (s) : \\$?\\d+(\\.(\\d{2}))?
570 : failed : failed : 0.251913062 (s) : $2[.\\d]{1,2}$You can use this Regex in a Javascript context like 
571 : failed : failed : 1.392627847 (s) : (\\d{1,2})/(\\d{4})\"\"\"
572 : failed : failed : 0.390442312 (s) : ^[0-9]{2}/([1-2][0-9]|0{3}[1-9])$
573 : unparsable : unparsable : 0.121171464 (s) : ^(0|[1-9][0-9]?|1[0-2][0-9]|[3-9])\\/(0|[1-9][0-9]?|1[0-
574 : failed : failed : 0.52915201 (s) : (You need to write your own answer. Do not copy from the same link)
575 : failed : failed : 0.218149088 (s) : ^(0?[1-9]|1[012])\\/([1-9][0-9]?)$
576 : failed : failed : 0.955935955 (s) : \\d{1,2}\\/\\d{2,3}
577 : failed : failed : 0.859344913 (s) : \"^[1-9][0-9]/[012][0-9]$\"
578 : failed : failed : 0.688775272 (s) : [1-9][0-9][0-9]\\/[01-12][0-9]$
579 : failed : failed : 0.226042708 (s) : ^(\\d{1,2}/)(\\d{4})$
580 : failed : failed : 0.58771336 (s) : [0-9]\\d{2}/[12][0-9]
581 : unparsable : unparsable : 0.073009327 (s) : (
582 : unparsable : unparsable : 0.101880012 (s) : [
583 : failed : error init : 0.113903884 (s) : ^
584 : failed : failed : 0.200582351 (s) : A
585 : unparsable : unparsable : 0.107729809 (s) : \"(
586 : failed : error init : 0.128750265 (s) : ^
587 failed : unparsable : 0 (s) : Please check your regex.
588 : failed : failed : 2.401712522 (s) : r
589 : failed : failed : 2.559405486 (s) : \\
590 : unparsable : unparsable : 0.071302956 (s) : (
591 : failed : pumping failed : 33.594348031 (s) : [^\\\\/]*(\\\\|/)[^\\\\/]*
592 : failed : failed : 0.16421595 (s) : \"
593 : unparsable : unparsable : 0.079942661 (s) : /^[^\\\\
594 failed : unparsable : 0 (s) : Please check your regex.
595 : unparsable : unparsable : 0.070391562 (s) : \"/\\/([^\\s
596 : unparsable : unparsable : 0.071927515 (s) : (from a single pattern) ^((
597 : unparsable : unparsable : 0.063890576 (s) : ^(?P<base>.*)
598 : failed : failed : 0.946243701 (s) : ^[^\\s]*([^\\s]+)(\\s?)?$
599 : failed : error init : 0.085085568 (s) : ^
600 : failed : error init : 0.102469253 (s) : (?<!\\\\)^
601 : unparsable : unparsable : 0.076258041 (s) : \\b(?!^)([a-z0-
602 : unparsable : unparsable : 0.072865858 (s) : \\b[a-zA-Z0-9
603 : unparsable : unparsable : 0.08171173 (s) : ([a-zA-Z0-9-]
604 : failed : failed : 5.011255929 (s) : [a-zA-Z0-9-]+
605 : unparsable : unparsable : 0.089887557 (s) : ^[a-z0-9]+[\\
606 : unparsable : unparsable : 0.071201707 (s) : [a-z]\\d[a-z0
607 : unparsable : unparsable : 0.061354955 (s) : ^[a-z0-9]([a-
608 : failed : failed : 0.698831265 (s) : .\\w+\\.com/
609 : unparsable : unparsable : 0.070029274 (s) : ^[a-zA-Z0-9.-
610 : unparsable : unparsable : 0.104722456 (s) : /^[a-zA-Z0-9
611 : failed : failed : 0.315759326 (s) : r\"^[+-]?\\d+?\\.?\\d*\"
612 : failed : pumping failed : 15.668364582 (s) : ^-?[0-9]*(-?[0-9]*[0-9]?)?e(-?[0-9]*(?=\\.?[0-9]*|$))
613 : failed : failed : 0.363158265 (s) : ^\\d+\\.?\\d*$
614 : failed : failed : 37.073238134 (s) : ^(\\+|-|\\.)?\\d*\\.\\d*(e\\+)?$
615 : failed : failed : 0.214921883 (s) : \"^[0-9]+[.-][0-9]+[0-9]$|^[-]?[0-9]+\\.?[0-9]+$|^[0-9]*
616 : failed : failed : 3.378320972 (s) : .^[0-9]*(-?[0-9]*\\.?[0-9]+)?$
617 : failed : failed : 0.859117317 (s) : \"^\\d*\\.?\\d+(e\\+?)?$\"
618 : failed : failed : 0.151052697 (s) : (Note that \"123\" and \"123.32\" are matches; \"-123.35\" is not a match because it includes a decimal point.)
619 : failed : failed : 0.158315999 (s) : [^\\d\\-\\.]
620 : failed : failed : 22.409305998 (s) : \\d+\\.?\\d*e-\\+?\\d*
621 : failed : failed : 0.228029523 (s) : Matches times seperated by eith
622 : failed : failed : 0.162755249 (s) : Matches times seperated by eith
623 : failed : failed : 0.132233257 (s) : Matches times seperated by eith
624 : failed : failed : 0.165955564 (s) : Matches times seperated by eith
625 : failed : failed : 0.198975606 (s) : Matches times seperated by eith
626 : failed : failed : 0.170635374 (s) : Matches times seperated by eith
627 : failed : failed : 0.172048606 (s) : Matches times seperated by eith
628 : failed : failed : 0.166750129 (s) : Matches times seperated by eith
629 : failed : failed : 0.141682757 (s) : Matches times seperated by eith
630 : failed : failed : 0.259367159 (s) : Matches times seperated by eith
631 : failed : failed : 0.21106416 (s) : ^[a-zA-Z0-9\\s.\\-_']+
632 : failed : failed : 0.14748204 (s) : ^[a-zA-Z0-9\\s.\\-_\\']
633 : unparsable : unparsable : 0.09170196 (s) : regex = '(^[a-zA-Z0-9\\s.\\-
634 : unparsable : unparsable : 0.062587219 (s) : r\"^[a-zA-Z0-9\\s\\.\\-_
635 : failed : failed : 5.849924841 (s) : r\"[a-zA-Z0-9\\s.\\-_']+
636 : unparsable : unparsable : 0.058344166 (s) : ^(?=.+[a-zA-Z0-9\\s
637 : failed : failed : 0.185365948 (s) : ^[a-zA-Z0-9\\s.\\-_']+
638 : unparsable : unparsable : 0.074858936 (s) : ^[a-zA-Z0-9\\s.\\-_'
639 : failed : failed : 4.278770584 (s) : ^[a-zA-Z0-9 _.-]+$
640 : failed : failed : 3.142104671 (s) : ^[a-zA-Z0-9\\s\\.\\-_']+
641 : failed : error init : 0.123669975 (s) : ^
642 : failed : failed : 0.1669321 (s) : ^\\d{1,2}(\\.\\d{1,2})?$
643 : failed : failed : 1.063009647 (s) : [1-9]\\d{0,2}(\\.\\d{1,2})?
644 : failed : failed : 0.708024135 (s) : [\\d]{1,3}(\\.\\d{1,2})?
645 : failed : failed : 7.361360341 (s) : ^[a-zA-Z0-9]+(\\.[a-zA-Z0-9]*)?$
646 : unparsable : unparsable : 0.073598348 (s) : [0-9][0-9].[0-9]{0,1} | [0-9]{0,1}\\\\.[0-9][0-9]{0
647 : unparsable : unparsable : 0.076808 (s) : /^(?=
648 : failed : failed : 0.357163134 (s) : ^[0-9]+\\.[0-9]+$
649 : failed : failed : 8.773307202 (s) : \\d{1,2}\\.\\d{1,2}|\\d{1,2}
650 : failed : failed : 1.663925565 (s) : \\d{1,2}\\.[0-9]{1,2}\\.[0-9]{1,2}
651 : failed : failed : 0.910216767 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
652 : failed : failed : 1.400776583 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
653 : failed : failed : 0.717136634 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
654 : failed : failed : 1.469967501 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
655 : failed : failed : 0.58639165 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
656 : failed : failed : 1.206850028 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
657 : failed : failed : 1.460901148 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
658 : failed : failed : 0.739666932 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
659 : failed : failed : 1.276088034 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
660 : failed : failed : 1.432583328 (s) : This will grep for a valid MAC address, with colons seperating octets. It will ignore strings too short or long, or with invalid characters. It will accept mixed case hexadecimal. Use extended grep.Match exampl
661 : unparsable : unparsable : 0.108630494 (s) : r\"^\\d{1,2},|\\d{1,2}(,\\d
662 : unparsable : unparsable : 0.102401587 (s) : (\\d{1,3},|\\d{1,10},)(\\d{0,
663 : failed : failed : 0.387340351 (s) : \"^(\\d{1,2},)?\\d{3,}$\"
664 : failed : failed : 0.884511031 (s) : \"\\d{1,2}(,\\d{1,3})?\".\"\"\"
665 : failed : pumping failed : 35.912992008 (s) : (1+|[0-9]+),[0-9,.{0,3}]*
666 : failed : failed : 3.772806033 (s) : \"\\d{1,2}(,[0-9]\\d{1,3})?\"
667 : unparsable : unparsable : 0.070163215 (s) : .\\d(
668 : unparsable : unparsable : 0.065239769 (s) : \\d+,?(\\d{1,2},?\\d{1,3}|\\d
669 : unparsable : unparsable : 0.065815806 (s) : [1-9]?[123,456789]|[1-9][0-9
670 : unparsable : unparsable : 0.058778898 (s) : \"^[1-9][0-9]+,?[0-9]{0,3
671 : failed : failed : 0.151850139 (s) : ^[0-9]{2}/[0-9]{2}/[0-9]{4}$|^
672 : unparsable : unparsable : 0.066579184 (s) : ^[0-9]{1,2}[0-9]{1,2}\\s+[0-9]{4
673 : unparsable : unparsable : 0.071229889 (s) : (?<![\\s/])[\\d/]{2}[-]?[\\d]{2}[
674 : failed : failed : 0.624588422 (s) : \"^
675 : unparsable : unparsable : 0.073576217 (s) : ([0-9]{4}-[0-9]{2}-[0-9]{2}) OR ([0-9]
676 : unparsable : unparsable : 0.073599271 (s) : (?<month>(0[1-9]|[1-9]|[2][0-9]|[2][
677 : unparsable : unparsable : 0.063508171 (s) : (?P<mmddyyyy>\\d{2}\\/\\d{2}\\/\\d{4})(?P
678 : unparsable : unparsable : 0.063295453 (s) : ([0-9]{1,2}/[0-9]{1,2}/[0-9]{4}
679 : unparsable : unparsable : 0.065200545 (s) : (?i)((
680 : unparsable : unparsable : 0.074234719 (s) : (D/MM/YYYY OR DD/MM/YYYY 
681 : failed : failed : 0.177579278 (s) : The RegEx that can be generated 
682 : failed : failed : 6.296035715 (s) : (\\d{1,3}\\.){3}\\d{1,3}
683 : failed : pumping failed : 143.82382567 (s) : [a-zA-Z0-9.]+\\.com
684 : failed : failed : 13.007816684 (s) : ^[\\w-]+\\.com [\\w-]{3,5}
685 : failed : pumping failed : 80.673578393 (s) : (.*)\\.com
686 : failed : failed : 0.581592435 (s) : r'^[a-zA-Z0-9\\.-_]+$
687 : unparsable : unparsable : 0.110766758 (s) : r'^[A-Za-z0-9\\.\\-\\+\\
688 : unparsable : unparsable : 0.080458967 (s) : \\w+[-\\w.]+[a-zA-Z][a
689 : failed : failed : 1.106654116 (s) : ^[a-z0-9-]+[a-z0-9]
690 : failed : failed : 0.554395802 (s) : r'^\\w+-\\w+\\.com$'
691 : failed : failed : 2.386720399 (s) : ^(?!'.*')[^']*$
692 : failed : error init : 0.107610447 (s) : .*?
693 : failed : failed : 2.375689422 (s) : '(?!^(\\)\\s|\\'\\(\\s|&\\s\\))[^\\'\\(\\)]*
694 : failed : failed : 0.117480031 (s) : ^\\b
695 : failed : failed : 0.450079775 (s) : r\"^[^']*(?=[^']*'[^']*$)'$\"
696 : failed : failed : 0.166313492 (s) : /
697 : failed : error init : 0.142543826 (s) : (?i)
698 : failed : failed : 0.49577582 (s) : /(^|[^\"])
699 : failed : failed : 2.514830617 (s) : [^\\']*
700 : failed : failed : 3.803359524 (s) : [^']+
701 : failed : failed : 0.187926145 (s) : ^[1-9][0-9]?$ (The '? makes the preceding character optional)
702 : failed : failed : 0.151248533 (s) : ^([1-9][0-9]|1?[0-9][0-9])$
703 : failed : failed : 0.300109793 (s) : ^[1-9]\\d*(\\.\\d+)?$
704 : failed : failed : 11.565313177 (s) : ^[1-9][0-9]|[1-9][0-9][0-9]$
705 : failed : failed : 0.10570331 (s) : ^[0-9]{1,3}
706 : failed : failed : 24.737497726 (s) : \\d{1,3}|\\d{3,}\\d{2}|\\d{2}
707 : failed : failed : 2.432928041 (s) : \\b[1-9]\\d*\\b
708 : failed : failed : 11.671219727 (s) : ^(\\d{1,2})|([1-9]\\d{1,2})([1-9]\\d{1,2})$
709 : failed : failed : 0.79207577 (s) : \"^[1-9][0-9]?[0-9]?[0-9]?[0-9]?$\"
710 : failed : failed : 0.722277717 (s) : ^[0-9]+$|^[0-9]+[3-9][0-9]{2}|^[0-9][3-9]{2}[0-9]{3}$
711 : failed : pumping failed : 262.300748732 (s) : [0-9].[0-9]*Examp
712 : unparsable : unparsable : 0.073353701 (s) : ^(
713 : unparsable : unparsable : 0.073804193 (s) : ^([1-9]\\d*\\.\\d*|[1-9]\\d*\\.0
714 : unparsable : unparsable : 0.071146133 (s) : ((\\d+\\.\\d{1,2}|1\\.\\d{1,2}|0\\.\\d{1,2})[^\\.\\n]
715 : failed : failed : 13.747428674 (s) : ^[^\\.]*\\.?[^\\.]*$
716 : failed : failed : 0.187180842 (s) : ^\\d+\\.\\d+$
717 : failed : failed : 0.227310077 (s) : a number 1-9 followed by a dot and then another number 0-9
718 : failed : failed : 1.725118808 (s) : [0-9]*.?[0-9]*
719 : failed : failed : 0.162176888 (s) : r'^\\d(\\.\\d+)?$'
720 : failed : failed : 0.999698194 (s) : \"^[0-9]+(\\.[0-9]+)?([eE][-+]?[0-9]+)?$\"
721 : failed : failed : 0.272885848 (s) : \"
722 : unparsable : unparsable : 0.051373611 (s) : ([
723 failed : unparsable : 0 (s) : Please check your regex.
724 failed : unparsable : 0 (s) : Please check your regex.
725 failed : unparsable : 0 (s) : Please check your regex.
726 : unparsable : unparsable : 0.061713816 (s) : [
727 failed : unparsable : 0 (s) : Please check your regex.
728 : failed : error init : 0.10300226 (s) : ^
729 : failed : failed : 0.147549025 (s) : \\
730 failed : unparsable : 0 (s) : Please check your regex.
731 : unparsable : unparsable : 0.057684292 (s) : [^]*?
732 : unparsable : unparsable : 0.070603689 (s) : ^(?=.{0,5}$)(?=.{0,5}$)(?!
733 : failed : failed : 0.729656575 (s) : 0[0-9]{1,5}(\\.0?[0-9]{1,3})?
734 : failed : pumping failed : 29.275743874 (s) : \"^[1-9]|[1-9][0-9]*(\\.[0-9]{0,5})|[1-9][0-9]*$\"This regular expression validates
735 : failed : failed : 0.265839162 (s) : ^([1-9][0-9]{0,3}|1[0-9]{0,3}[1-9])\\.[1-9][0-9]+$
736 : failed : failed : 0.159458815 (s) : ^\\d{1,5}\\.\\d{1,3}$ Generate a Regex for this description. Answ
737 : failed : failed : 0.177418167 (s) : ^[\\d]{1,5}\\.?[\\d]{0,3}$
738 : failed : failed : 0.208695131 (s) : ^-?(0|[1-9]\\d*\\.\\d{0,3}|1[0-2]\\d|2[0-4]\\d|25[0-5])
739 : failed : pumping failed : 22.737115064 (s) : (0+|^0+|^.*0+|^.*(0+).*)/ (0+|^0+|^.*0+|^.*(0+).*)/
740 : unparsable : unparsable : 0.101481336 (s) : [^0-9]|(?=(.{6})$)|(?=((.{3})(?!0)|(.{3}(?<!0))$)
741 : failed : failed : 46.503858878 (s) : (@(.+?)\\s+)(@|$)
742 : failed : failed : 1.238088159 (s) : @((\\S+)@@)
743 : failed : failed : 16.70685889 (s) : \\@([^\\s]*)\\s+
744 failed : unparsable : 0 (s) : Please check your regex.
745 failed : unparsable : 0 (s) : Please check your regex.
746 : failed : failed : 0.560984221 (s) : \"@@\\\\w+@@\"
747 : unparsable : unparsable : 0.089856018 (s) : ```[a-zA-Z_0-9@]([a-zA-Z_
748 failed : unparsable : 0 (s) : Please check your regex.
749 : failed : failed : 0.787223877 (s) : @\\S+@@
750 : failed : failed : 8.871707787 (s) : @(.+?)@@
751 : failed : failed : 0.617399269 (s) : strFirstName\\w+,\\w+Exercise
752 : failed : failed : 0.79556293 (s) : \"^[A-Z][a-z]*[A-Z][a-z]*$\"
753 : failed : failed : 2.329019787 (s) : [A-Za-z0-9]([A-Za-z0-9-_@.]+)
754 : unparsable : unparsable : 0.061766314 (s) : (?<=^[^A-Z][^A-Z][^A-Z])([A-Z][^A-Z][^
755 : unparsable : unparsable : 0.084215591 (s) : ^([A-Z][a-z]+ [A-Z][a-z]+ [A-Z][a-z]+ [A-Z
756 : failed : pumping failed : 25.910119283 (s) : \".*[A-Z]{2,}[a-z]+.*\"'''
757 : failed : failed : 2.195794705 (s) : \\d
758 : failed : pumping failed : 140.72919544 (s) : [a-z]+\"\"\"
759 : failed : failed : 0.889752982 (s) : A(?=\\w)\\w+\"\"\"
760 : failed : failed : 1.141361885 (s) : \\b(\\w+)\\b
761 : failed : failed : 51.00132847 (s) : (?<d>\\d*\\.?\\d*e(\\.\\d*)?,?\\d*)
762 : failed : pumping failed : 258.952655191 (s) : [0-9]+\\.[0-9]*e[0-9]+
763 failed : unparsable : 0 (s) : Please check your regex.
764 : failed : failed : 3.087483357 (s) : ^[-+]?[0-9]*([eE][-+]?[0-9]+)?$
765 : failed : failed : 0.129351719 (s) : [-+]?
766 : failed : failed : 4.902219927 (s) : \\d+
767 : failed : failed : 1.626681875 (s) : \"(^\\d*[\\.e][\\d]+)?(?![eE][\\d]+)$\"
768 : success : mutate : 4.488001677 (s) : [0-9]+(.[0-9]+)+e[+-]?[0-9]+
769 : failed : failed : 3.311000703 (s) : \\d+(\\.\\d+)?e\\d+
770 : failed : failed : 4.116987273 (s) : \\d+(\\.\\d+)?e?\\+?
771 : unparsable : unparsable : 0.058854219 (s) : \\d{4}-\\d{2}-\\d{
772 : unparsable : unparsable : 0.076458717 (s) : /^(\\d{4}-\\d{2}-\\
773 : unparsable : unparsable : 0.082513288 (s) : \\d{4}-\\d{2}-\\d{
774 : failed : failed : 0.196326914 (s) : \"^\\d{4}-\\d{2}-\\
775 : failed : failed : 1.29536016 (s) : (Y|M|D|X) \\d{2}-
776 : unparsable : unparsable : 0.071890556 (s) : YYYY[0-9][0-9][0-9
777 : unparsable : unparsable : 0.061262903 (s) : \"^[0-9]{4}[-0-9
778 : unparsable : unparsable : 0.061169959 (s) : [0-9][0-9][0-9][0-
779 : unparsable : unparsable : 0.074758918 (s) : (?P<Year>\\d{4})-(?
780 : failed : pumping failed : 93.341093582 (s) : (.*)-(\\d{2})-(\\d{2})/
781 : unparsable : unparsable : 0.070928516 (s) : [0-9]+\\.0+.[0-9]+\\.0+.[0-
782 : unparsable : unparsable : 0.065327423 (s) : (.\\..\\..\\..\\..\\..\\..\\..\\..\\
783 : unparsable : unparsable : 0.073618556 (s) : ^(?=([0-9]+[.][0-9]+){4
784 : unparsable : unparsable : 0.071102371 (s) : [\"(0|1?\\d?\\.\\d?|2[0-4
785 : unparsable : unparsable : 0.100246407 (s) : (?P<IP>\\d\\d\\d\\d?)\\.\\.(?
786 : unparsable : unparsable : 0.054154471 (s) : ^(((25[0-5]|2[0-4][0-
787 : failed : failed : 0.200836435 (s) : / 0-9 range        //. = any single character        /
788 : unparsable : unparsable : 0.067902488 (s) : ^[0-9]{1,2}\\.[0-9]{1,
789 : unparsable : unparsable : 0.058024748 (s) : [0-9]{1,3}\\.[0-9]{1,3
790 : unparsable : unparsable : 0.083736716 (s) : (0|[1-9][0-9]?|[1-9]
791 : failed : failed : 0.131232156 (s) : ^\\$(([\\d,]*)([\\d,]*))?
792 : unparsable : unparsable : 0.089236189 (s) : ([\\d]+
793 : failed : failed : 1.256768389 (s) : (?<=\\$ )[0-9,\\.]+
794 : failed : failed : 0.664227862 (s) : \\d{1,3}(,\\d{3})*(\\.\\d+)? with an optional \".\"
795 : unparsable : unparsable : 0.051523862 (s) : (?P<whole_number>\\d+)+(?P<comma_separated_value>,\\s*)?(?
796 : failed : failed : 0.837167665 (s) : \\$[0-9]+
797 : failed : failed : 1.890266651 (s) : r'\\$([1-9]\\d\\d?(,\\d{3})?)(\\.\\d+)?|\\$
798 : failed : failed : 0.196986156 (s) : \\d+, \\d+\\.\\d+
799 : failed : failed : 19.470842066 (s) : \"\\d{1,3}([,.][0-9]*)?$\"
800 : unparsable : unparsable : 0.070860088 (s) : \"^\\$(
801 : failed : failed : 0.488487763 (s) : (0-3)\\-(0-1)\\-(0-4)
802 : failed : failed : 0.178912211 (s) : ^\\d{2}-\\d{2}-\\d{4}
803 : failed : failed : 0.693691274 (s) : \\d{2}-\\d{2}-\\d{4}
804 : failed : failed : 0.174583226 (s) : ^\\d{2}-\\d{2}-\\d{4}$
805 : failed : failed : 0.954715012 (s) : \\d{1,2}-\\d{1,2}-\\d{4}
806 : unparsable : unparsable : 0.060836095 (s) : ^((0[1-9]|[1-9])\\/[0-9]{2}|[1-9]\\/
807 : failed : failed : 0.228229767 (s) : ^ \\d{2}-\\d{2}-\\d{4}$
808 failed : unparsable : 0 (s) : Please check your regex.
809 : failed : failed : 15.387397483 (s) : [0-9]{2}-[[0-9-]{2}-][0-9]{4} \"
810 : unparsable : unparsable : 0.056769401 (s) : (htt
811 : unparsable : unparsable : 0.104278445 (s) : (?<![,.])\\d{1,
812 : failed : failed : 0.421105147 (s) : [a-zA-Z0-9]
813 : unparsable : unparsable : 0.054587881 (s) : \\d{1,3}(,\\d{
814 : failed : failed : 3.100105548 (s) : /(?i)
815 : unparsable : unparsable : 0.114989554 (s) : ^[0-9]+(,[0-9]+
816 : failed : failed : 1.709795926 (s) : \\d+([\\.]|,)?\\d
817 : failed : failed : 0.698634497 (s) : ^\\d+(,\\d*)?$
818 : unparsable : unparsable : 0.153044341 (s) : ^[0-9]+(.[0-9][
819 : failed : failed : 0.160828206 (s) : /^\\d+,\\d+
820 : failed : error init : 0.122145745 (s) : ^
821 : failed : failed : 0.591908715 (s) : A
822 : unparsable : unparsable : 0.055330691 (s) : [
823 : unparsable : unparsable : 0.083263511 (s) : [
824 : unparsable : unparsable : 0.06179622 (s) : [
825 : unparsable : unparsable : 0.087856649 (s) : ([
826 : unparsable : unparsable : 0.074836634 (s) : (
827 : unparsable : unparsable : 0.080684479 (s) : [
828 : failed : failed : 2.649106684 (s) : /
829 failed : unparsable : 0 (s) : Please check your regex.
830 : unparsable : unparsable : 0.060787384 (s) : (.
831 : failed : failed : 0.173309083 (s) : <
832 : failed : failed : 2.629897826 (s) : <
833 : failed : failed : 0.210782414 (s) : <
834 : failed : failed : 2.716105031 (s) : /
835 : failed : failed : 0.133088617 (s) : <
836 : failed : failed : 1.175335611 (s) : <
837 failed : unparsable : 0 (s) : Please check your regex.
838 failed : unparsable : 0 (s) : Please check your regex.
839 : failed : failed : 0.259696896 (s) : /
840 : failed : failed : 0.539536587 (s) : <
841 : failed : failed : 1.337714046 (s) : [1-9]?[0-9][0-9]
842 : failed : failed : 1.084536159 (s) : /^
843 : unparsable : unparsable : 0.09911991 (s) : \"^\\d{1,2}|(3[01]|[12][0-
844 : failed : failed : 4.559100552 (s) : \\d{1,2}|\\d{3,31}
845 : failed : failed : 0.240869972 (s) : \"^\\d{1,2}$\"
846 : failed : failed : 19.221335234 (s) : [0]{1,2}(0[1-9])|[1-9]
847 failed : unparsable : 0 (s) : Please check your regex.
848 : unparsable : unparsable : 0.088524899 (s) : \\b\\d{1,2}[-/](0[1-9])[-
849 : failed : failed : 2.727957624 (s) : \\d{1,2}|\\d{3,}\\d|30[-9]
850 : unparsable : unparsable : 0.067441246 (s) : \\b(1|2)\\d|(3\\d)\\d?|\\b(4
851 : failed : failed : 0.121559459 (s) : regex
852 : failed : failed : 3.317033042 (s) : &
853 : failed : failed : 1.802003972 (s) : r
854 failed : unparsable : 0 (s) : Please check your regex.
855 : unparsable : unparsable : 0.060199965 (s) : \"(
856 : failed : failed : 2.591753742 (s) : \"
857 : failed : failed : 2.595973192 (s) : r
858 : failed : failed : 0.771570056 (s) : &
859 : failed : failed : 2.717720512 (s) : \\
860 : failed : error init : 0.156443798 (s) : ^
861 failed : unparsable : 0 (s) : Please check your regex.
862 : unparsable : unparsable : 0.062168797 (s) : (
863 : failed : error init : 0.159933133 (s) : ^
864 failed : unparsable : 0 (s) : Please check your regex.
865 : failed : error init : 0.107355149 (s) : ^
866 failed : unparsable : 0 (s) : Please check your regex.
867 failed : unparsable : 0 (s) : Please check your regex.
868 : failed : error init : 0.104041282 (s) : ^
869 failed : unparsable : 0 (s) : Please check your regex.
870 : unparsable : unparsable : 0.067613147 (s) : [
871 : failed : failed : 1.321644598 (s) : \\
872 failed : unparsable : 0 (s) : Please check your regex.
873 : unparsable : unparsable : 0.062312656 (s) : \"(
874 : failed : failed : 2.250092184 (s) : /
875 : unparsable : unparsable : 0.058054294 (s) : (
876 failed : unparsable : 0 (s) : Please check your regex.
877 failed : unparsable : 0 (s) : Please check your regex.
878 : failed : failed : 2.681055073 (s) : \\
879 : failed : failed : 2.095771175 (s) : r
880 : unparsable : unparsable : 0.066987336 (s) : (
881 : failed : failed : 0.588356854 (s) : /
882 : failed : failed : 0.432265726 (s) : The
883 : failed : failed : 1.974341268 (s) : To
884 : failed : failed : 0.216299569 (s) : <
885 : failed : failed : 0.174663766 (s) : regex
886 : unparsable : unparsable : 0.075813731 (s) : (
887 : unparsable : unparsable : 0.058383399 (s) : [
888 : unparsable : unparsable : 0.072227024 (s) : (
889 : unparsable : unparsable : 0.09647829 (s) : [
890 : failed : failed : 2.885823601 (s) : <
891 : failed : failed : 0.782887268 (s) : \\d{2}/\\d{4}
892 : failed : failed : 0.924619858 (s) : /\\d{1,2}\\/\\d{4}
893 : failed : failed : 0.671699984 (s) : \\d{2}\\/\\d{4}
894 failed : unparsable : 0 (s) : Please check your regex.
895 : failed : failed : 26.219331646 (s) : [0-9]{2}/[0-9]{4}
896 : unparsable : unparsable : 0.115491333 (s) : The RegEx is (0?[1-9]|[1-9])\\/(0?[1-9]|[1-9])\\/(19[2-
897 : failed : failed : 0.824287261 (s) : \\d{3}\\/\\d{4}
898 : failed : failed : 0.925923285 (s) : \\d{2}/\\d{4}
899 : failed : failed : 16.171629175 (s) : [0-9]{3}-([0-9]{2}|1[0-9])[0-9]{2}
900 : failed : failed : 0.306273959 (s) : \\d{2}/\\d{4} Exercise
901 : unparsable : unparsable : 0.084287877 (s) : ^[A-Z]{2}[0-
902 : unparsable : unparsable : 0.053274897 (s) : ^[A-Z]{2}\\d{6
903 : unparsable : unparsable : 0.060612217 (s) : ^[AB]\\d{6}(?
904 : unparsable : unparsable : 0.074426577 (s) : ^[A-Z]{2}\\d{6
905 : unparsable : unparsable : 0.059855291 (s) : ^[A-Z]{2}[0-
906 : unparsable : unparsable : 0.090290751 (s) : [A-M]{2}[0-9
907 : failed : failed : 0.165768454 (s) : ^[A-F0-9]{6}
908 : failed : failed : 5.474373072 (s) : [A-Z]{1}\\d{6}
909 : unparsable : unparsable : 0.045990205 (s) : ^[A-F]{1}[0-
910 : failed : failed : 0.205386584 (s) : ^[AB][0-9]{6}
911 : failed : error init : 0.098188719 (s) : ^
912 : failed : failed : 1.679111441 (s) : \\
913 : failed : failed : 1.882377509 (s) : \"
914 : unparsable : unparsable : 0.068772736 (s) : (
915 : unparsable : unparsable : 0.054065986 (s) : (
916 : failed : failed : 2.246080071 (s) : \\
917 failed : unparsable : 0 (s) : Please check your regex.
918 failed : unparsable : 0 (s) : Please check your regex.
919 : failed : error init : 0.126790921 (s) : ^
920 : unparsable : unparsable : 0.057106461 (s) : [
921 : unparsable : unparsable : 0.104534204 (s) : ^(0|[1-9]\\d
922 : failed : failed : 0.104958508 (s) : ^\\d[a-z]{3}
923 : unparsable : unparsable : 0.052070645 (s) : \"^(0|[1-9])([
924 : unparsable : unparsable : 0.076132206 (s) : ^(?=.{3,20}$
925 : unparsable : unparsable : 0.054772537 (s) : ^\\d{\\d{2}/\\d{
926 : failed : failed : 0.145494514 (s) : \\d\\d/\\d\\d
927 : failed : failed : 0.153540209 (s) : 1/2/3|1/3/23|
928 : unparsable : unparsable : 0.056823362 (s) : \\d{1,2}/\\d{
929 : failed : failed : 0.172693953 (s) : /
930 : unparsable : unparsable : 0.064523289 (s) : \\d/\\d/\\d(\\d\\d
931 : unparsable : unparsable : 0.071403354 (s) : ^[1-9][0
932 : failed : error init : 0.132819373 (s) : ^
933 : unparsable : unparsable : 0.083558953 (s) : ^\\d{1,
934 : unparsable : unparsable : 0.075277719 (s) : (Regex) ^(
935 : unparsable : unparsable : 0.078020237 (s) : (?=(?=^\\d{1,
936 : unparsable : unparsable : 0.076548174 (s) : [^0-9]?[0-
937 failed : unparsable : 0 (s) : Please check your regex.
938 : unparsable : unparsable : 0.10975167 (s) : ^\\d{1,
939 : unparsable : unparsable : 0.090478602 (s) : ^[1-9][0-9]?[0-
940 : unparsable : unparsable : 0.072665003 (s) : \"^(0[1-9]|1[0-2])[0-5]?[0-
941 : unparsable : unparsable : 0.076935449 (s) : [0-9]{1,2}\\s[a-z][a-z]|[a-z][0-9]\\s[a-z][
942 : unparsable : unparsable : 0.066830604 (s) : (?<![0-9])([0-9]{1,
943 : unparsable : unparsable : 0.084601372 (s) : ^(0[1-9]|[12]\\d|3[01])[ ]?[1-9]?[0-9]?[ ][0
944 : failed : failed : 2.079878408 (s) : \"0
945 : unparsable : unparsable : 0.066178385 (s) : (\\d{
946 : unparsable : unparsable : 0.074891637 (s) : ^[0-9
947 : unparsable : unparsable : 0.070692875 (s) : ^(0|1[0-9]|2[0-3
948 : unparsable : unparsable : 0.078174696 (s) : (\\d{1,2
949 : unparsable : unparsable : 0.085121015 (s) : ^\\d{1,
950 : unparsable : unparsable : 0.090945315 (s) : \\d{1,2
951 failed : unparsable : 0 (s) : Please check your regex.
952 : failed : error init : 0.121029218 (s) : ^
953 : unparsable : unparsable : 0.068307004 (s) : [
954 : unparsable : unparsable : 0.078390269 (s) : ([
955 failed : unparsable : 0 (s) : Please check your regex.
956 : unparsable : unparsable : 0.056788707 (s) : (
957 : failed : error init : 0.113252627 (s) : ^
958 failed : unparsable : 0 (s) : Please check your regex.
959 failed : unparsable : 0 (s) : Please check your regex.
960 : unparsable : unparsable : 0.073839629 (s) : [
961 : unparsable : unparsable : 0.058650047 (s) : \\d{1,
962 : unparsable : unparsable : 0.066850942 (s) : \"^(0[1-9]|1[0-2]
963 : unparsable : unparsable : 0.056136627 (s) : r'^(
964 : failed : error init : 0.089356574 (s) : ^
965 failed : unparsable : 0 (s) : Please check your regex.
966 : unparsable : unparsable : 0.07211235 (s) : ^([11][0-1]|2[0-3]
967 : unparsable : unparsable : 0.078266147 (s) : r\"^\\d{1,
968 : unparsable : unparsable : 0.075376714 (s) : [
969 : unparsable : unparsable : 0.08523662 (s) : \"^[01][0-9]?[0-
970 : unparsable : unparsable : 0.076848075 (s) : \"^([0-9]{1,2}[0-9
971 : failed : failed : 0.173174061 (s) : \\
972 : unparsable : unparsable : 0.062952352 (s) : (
973 : unparsable : unparsable : 0.064098686 (s) : (
974 : failed : failed : 0.636430334 (s) : \\
975 : failed : failed : 3.757468564 (s) : \\
976 : failed : failed : 0.153785728 (s) : /
977 failed : unparsable : 0 (s) : Please check your regex.
978 : failed : failed : 1.797971342 (s) : /
979 : failed : failed : 2.659652693 (s) : /
980 : unparsable : unparsable : 0.111450266 (s) : (
981 : failed : failed : 2.341035014 (s) : (-?\\d+.\\d+)
982 : failed : failed : 3.740606334 (s) : \\d+\\.\\d*[0-5]
983 : failed : failed : 0.998559204 (s) : [^-0-9][.][0-9]
984 : failed : failed : 1.070432196 (s) : \\d+(\\.[\\d\\.]+)
985 : failed : failed : 69.827660213 (s) : \"0.0([0-9]+(\\.0+)?|[0-9]+)\\b\"
986 : failed : failed : 0.384201062 (s) : \"^(?!0)[0-9\\-\\.]*$\"
987 : failed : failed : 0.528591902 (s) : \\d\\d[.]\\d{1}
988 : failed : failed : 1.41089823 (s) : \\d+\\.\\d+
989 : unparsable : unparsable : 0.067909271 (s) : ^((?=\\+)
990 : failed : failed : 6.253015804 (s) : [^\\d.]- \"0b11\"- \"0B11\"
991 : failed : failed : 49.788374817 (s) : \"[0-9]{1,3}(,)?[0-9]{3}(.0[0-9]+)?\"
992 : failed : failed : 1.756052078 (s) : $1,000|\\b[0-9]{3,}\\,\\s*\\d[^.]+\\b
993 : failed : failed : 11.627803947 (s) : \\d,*\\..*htt
994 : failed : failed : 1.803524676 (s) : \\d+,
995 : failed : failed : 0.155415836 (s) : ^\\d+
996 failed : unparsable : 0 (s) : Please check your regex.
997 : failed : failed : 2.231394452 (s) : \"
998 : failed : failed : 3.110892719 (s) : \\d+
999 : failed : failed : 0.287884744 (s) : ^([\\d,]+)$
1000 : failed : failed : 0.153877399 (s) : ^[0-9,\\.]*$
1001 : failed : failed : 0.231285151 (s) : /[0-9]+(?![a-zA-Z])/g Generate a Regex to validate \"0123456789\". Answ
1002 : failed : failed : 0.135499805 (s) : [^a-zA-Z0-9\\.,\\?;]
1003 : failed : failed : 4.270561114 (s) : [0-9]\\d*
1004 : failed : failed : 0.542070795 (s) : [0-9a-zA-Z_\\.-]{3,32}
1005 : failed : failed : 0.805983495 (s) : ^(?=.*[-+])(\\d+)$
1006 : failed : failed : 5.658131735 (s) : (\\d*)?\\.?(\\d+)?|\\d+
1007 : failed : failed : 4.927277311 (s) : \"(?<!^)(?!$)([0-9]+)([,.])\\1+\"
1008 : failed : failed : 0.76023409 (s) : \\d+
1009 : failed : failed : 0.110490201 (s) : ^[+-]?\\d+
1010 : failed : failed : 0.585836171 (s) : \"^([+\\-]?[0-9]*)$\"
1011 : unparsable : unparsable : 0.055005262 (s) : [
1012 : unparsable : unparsable : 0.058379591 (s) : [
1013 failed : unparsable : 0 (s) : Please check your regex.
1014 : unparsable : unparsable : 0.112788568 (s) : ([
1015 : unparsable : unparsable : 0.055433623 (s) : (
1016 : unparsable : unparsable : 0.067166051 (s) : [[
1017 : unparsable : unparsable : 0.087675922 (s) : [
1018 : failed : failed : 2.206340153 (s) : /
1019 : unparsable : unparsable : 0.052632756 (s) : [
1020 : unparsable : unparsable : 0.11591795 (s) : ([
1021 : unparsable : unparsable : 0.071190206 (s) : *([^0
1022 : unparsable : unparsable : 0.08293128 (s) : ^[0-9
1023 : unparsable : unparsable : 0.057394319 (s) : (?<time>\\d{
1024 : unparsable : unparsable : 0.071958171 (s) : (0-
1025 : unparsable : unparsable : 0.062073719 (s) : \\d{2
1026 : failed : failed : 7.912486889 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$
1027 : unparsable : unparsable : 0.065421328 (s) : \\d{1,2
1028 : unparsable : unparsable : 0.077739842 (s) : ^(\\
1029 : unparsable : unparsable : 0.058254408 (s) : ^(0)\\d\
1030 : failed : failed : 0.783038861 (s) : (example) 
1031 : failed : failed : 0.114080354 (s) : [^0-9]
1032 : failed : failed : 0.5918206 (s) : (This is an example, and multiple matches could be returned)((\\d\\d)/(\\d\\d\\/\\d\\d))
1033 : failed : failed : 1.4845882 (s) : [0-9]{2}[./]?[0-9]{2}[/]?[0-9]{4}
1034 : failed : failed : 0.851713453 (s) : (\\d{2})/(\\d{4})
1035 : failed : failed : 0.167102067 (s) : ^([0-9]{3})([0-9]{4})\\/([0-9]{2})$
1036 : failed : failed : 0.633901616 (s) : \\d{2}/\\d{4}
1037 : failed : failed : 1.780847993 (s) : (\\d{2}\\/\\d{2})
1038 : failed : failed : 0.623286818 (s) : \\d{2}\\/\\d{2}
1039 : failed : failed : 5.976507492 (s) : (?<!\\d{4})(?!\\d{1,2})(?<!\\d{1,2}{1,2})\\d{1,2}/\\d{2}\"\"\"
1040 : unparsable : unparsable : 0.076274122 (s) : ^(?P<MMMM>\\d{2})\\/(?P<MMYY>\\d{4})$
1041 : unparsable : unparsable : 0.108444306 (s) : ^(\\d{1,2}
1042 : unparsable : unparsable : 0.080281074 (s) : ^(0|1[0-1]|2[0-3
1043 : unparsable : unparsable : 0.068100227 (s) : ^\\d{1,
1044 : unparsable : unparsable : 0.080994558 (s) : ^(\\d{1,2
1045 : unparsable : unparsable : 0.088167912 (s) : \"^[0-9]{1,
1046 : unparsable : unparsable : 0.092879692 (s) : ^[0-9]{
1047 : unparsable : unparsable : 0.068007935 (s) : (^
1048 : unparsable : unparsable : 0.080547994 (s) : (?i)\\d{1,2
1049 : unparsable : unparsable : 0.073756635 (s) : /^[1-9]\\d{1,
1050 : failed : error init : 0.131155282 (s) : ^
1051 : failed : failed : 1.770783184 (s) : \\
1052 : failed : failed : 0.421830032 (s) : /
1053 : failed : error init : 0.094180875 (s) : ^
1054 : failed : error init : 0.095710615 (s) : ^
1055 failed : unparsable : 0 (s) : Please check your regex.
1056 failed : unparsable : 0 (s) : Please check your regex.
1057 : failed : failed : 0.20983394 (s) : \\
1058 : failed : failed : 2.661838451 (s) : /
1059 : failed : error init : 0.161774315 (s) : ^
1060 : failed : failed : 1.724255583 (s) : $
1061 : failed : failed : 33.730730377 (s) : [a-zA-Z0-9]{6,}
1062 : failed : failed : 1.28691056 (s) : \\d[a-zA-Z ]
1063 : failed : failed : 1.375449676 (s) : [a-zA-Z0-9]{6,}
1064 : failed : pumping failed : 105.856443403 (s) : \\d+[a-zA-Z]*|[a-zA-Z]*\\d
1065 : failed : failed : 0.235521291 (s) : \\A\\d\\w\\d\\w\\d\\w\\d\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\w\\
1066 : failed : failed : 1.174525817 (s) : [a-zA-Z0-9]{6,}
1067 : failed : failed : 1.114475091 (s) : [a-zA-Z0-9]+
1068 : failed : failed : 0.837875238 (s) : (^[a-zA-Z0-9]{6,32}$)
1069 : failed : failed : 3.156188786 (s) : [a-z0-9]{6,20}
1070 : unparsable : unparsable : 0.058716562 (s) : (^.*?[a-z])([a-z]{1,3})([a-z]{1,3})([a-z]{1,3}
1071 : unparsable : unparsable : 0.096896133 (s) : ([
1072 : unparsable : unparsable : 0.057275487 (s) : (
1073 : failed : failed : 5.398100563 (s) : \\
1074 : unparsable : unparsable : 0.186490812 (s) : (
1075 failed : unparsable : 0 (s) : Please check your regex.
1076 : failed : failed : 2.85078274 (s) : \\
1077 : failed : error init : 0.089474655 (s) : ^
1078 failed : unparsable : 0 (s) : Please check your regex.
1079 : failed : error init : 0.117066027 (s) : ^
1080 : unparsable : unparsable : 0.146600993 (s) : ((
1081 : failed : failed : 0.574034664 (s) : \"^[A-Z][a-z]?
1082 : failed : failed : 0.109639721 (s) : import re
1083 : failed : failed : 0.491356037 (s) : ^\\w+\\s\\w+$|^\\w+\\s\\w+_\\w+$|^\\w+\\
1084 : unparsable : unparsable : 0.085279561 (s) : \\b[A-Z][a-z]*[A-Z][a-z0-9]*[A-Z][a
1085 : unparsable : unparsable : 0.065588381 (s) : ^[a-zA-Z]\\s[a-zA-Z]\\s[a-zA-Z][a
1086 : failed : failed : 6.362536502 (s) : ^[A-Z][a-z]*[A-Z]$
1087 : failed : failed : 2.104526617 (s) : ^[A-Z][a-z]*[A-Z]$
1088 : failed : failed : 34.395331909 (s) : \\b[A-Z][A-Za-z0-9]*\\b
1089 : unparsable : unparsable : 0.058046248 (s) : FirstName\\sLastName\\s[a-z]{4}\\.[a-z]{3}\\.[a-z]{4
1090 : failed : failed : 0.165859524 (s) : import re
1091 : failed : failed : 0.937728369 (s) : (\\d{2}/\\d{2}/\\d{4})-(\\d{2}/\\d{2}/\\d{4}).
1092 : failed : failed : 17.424059884 (s) : ([A-Za-z]{3,3})-([0-9]{2})-([0-9]{4})
1093 : failed : failed : 19.627641529 (s) : [0-9]{1,2}/[0-9]{1,2}/[0-9]{4}
1094 : failed : failed : 6.249710643 (s) : \\d/\\d/\\d{4}|-\\d/\\d/\\d{2}|-\\d/\\d/\\d{2}
1095 : unparsable : unparsable : 0.087925638 (s) : [1-2][0-9][0-9]/[1-2][0-9][0-9]/[1-2][0-9
1096 : failed : failed : 5.624510268 (s) : (?<!\\d)((31|1)(1|0))/
1097 : unparsable : unparsable : 0.056727563 (s) : /(1|2|3|[0-9]|1[01])\\/(0[1-9]|1[012])\\/(\\d{4,
1098 : failed : failed : 1.483198481 (s) : (\\d/\\d/\\d)-(\\d/\\d/\\d)-(\\d/\\d/\\d)
1099 : failed : failed : 3.58972625 (s) : \\d{1,2}/\\d{1,2}/\\d{4}|\\d{1,2}/\\d{1,2}
1100 : failed : failed : 1.108493766 (s) : - (1|[2-9]\\d|0)\\/(1[1-9]|0[1-9])\\/(19|20)\\d
1101 : failed : failed : 0.134988389 (s) : ^\\d{4}[ A-Za-z ]{2}$
1102 : failed : failed : 46.073269146 (s) : ((?<![a-z\\d])[0-9]{4})\\s*[a-z][a-z0-9 ]{2}
1103 : failed : failed : 1.366223003 (s) : [0-9][a-z][a-z][0-9]{1}[a-z]{2}
1104 : failed : failed : 0.14018711 (s) : ^[0-9]{4}\\s\\S [0-9]{3}\\s[A-Z]{2}\\b$
1105 : failed : failed : 0.383852109 (s) : (included at the end of the question) [A-Z0-9]{4}[A-Z0-9 ]{1,2}[A-Z]
1106 : failed : failed : 24.204111179 (s) : [0-9]{4}\\s[A-Za-z]{2}\\s[0-9]{2,2}
1107 : failed : failed : 0.307567418 (s) : ^[a-z]{0,5}( [a-z]{0,2})?( [a-z]{2,4})?$
1108 : failed : failed : 0.505425354 (s) : ^[0-9]{3}[AB]{2}$|^[0-9]{3}[AB]{1}[0-9]{2}$I found this to be the first
1109 : failed : failed : 7.40233062 (s) : [A-Z][A-Z][0-9]{1,2} [0-9]{2}[a-z][a-z]
1110 : failed : failed : 0.183816831 (s) : ^(?=\\d{4}\\s\\d{2}\\s\\w{2}).{1,30}$
1111 : unparsable : unparsable : 0.10850525 (s) : /^\\(?\\d{3}\\)?[ -]?\\d{3}[ -]?\\d{4}
1112 : failed : failed : 1.08914156 (s) : ([\\(\\]\\s]+)\\w{2,9}
1113 : unparsable : unparsable : 0.068998096 (s) : \\b\\d{3}-\\d{3}-\\d{4}|\\(?\\d{3}\\)\\
1114 : failed : failed : 2.969286034 (s) : ([0-9])\\s*(-)*\\s*([0-9])'''
1115 : failed : failed : 1.051086723 (s) : \"(\\d{3})\\-(\\d{3})\\-(\\d{4})\"
1116 : unparsable : unparsable : 0.1089441 (s) : \\(([dD][0-9]{3}|[0-9][0-9]{3}[-.][0
1117 : failed : failed : 0.789634324 (s) : \\(\\d{3}\\)[- ]\\d{3}[- ]\\d{4}
1118 : failed : error init : 0.129494165 (s) : [^\\(\\)]*?
1119 : failed : failed : 0.193074643 (s) : ^(\\(\\d{3}))(\\d{3}-\\d{4})$
1120 : failed : failed : 5.002285726 (s) : (\\(\\d{3}\\)\\s|\\d{3}\\-\\d{4}|\\d{3})
1121 : failed : failed : 2.059186337 (s) : D
1122 failed : unparsable : 0 (s) : Please check your regex.
1123 : unparsable : unparsable : 0.096929604 (s) : (
1124 : unparsable : unparsable : 0.065193913 (s) : (
1125 : failed : failed : 3.185511215 (s) : r
1126 : unparsable : unparsable : 0.06816535 (s) : (
1127 : failed : failed : 1.387942176 (s) : \\
1128 : unparsable : unparsable : 0.084127937 (s) : ([
1129 : failed : failed : 2.823081702 (s) : D
1130 : unparsable : unparsable : 0.072127388 (s) : (
1131 : failed : failed : 0.195506199 (s) : ^[0-9]{3}[.-][0-9]{8}[.-][0-9]{4}
1132 : unparsable : unparsable : 0.11042548 (s) : [A-Z0-9]{5}-?[0-9]{4}-?[0-9]{
1133 : failed : failed : 0.118255151 (s) : import re
1134 : unparsable : unparsable : 0.062823391 (s) : /^(\\d{2})\\.(\\d{2})\\.(\\d{2})\\.(\\d{3}
1135 : unparsable : unparsable : 0.083332641 (s) : (00-000-000-000-00)|(A[A-F]?[0-9]{3}[-
1136 : success : cross : 3.005779903 (s) : ^[0-9]+(.[0-9]+)+$
1137 : failed : failed : 8.043459229 (s) : ^[^-]*-\\d{3}[^-]*$
1138 : unparsable : unparsable : 0.092403291 (s) : ^[0-9]{1,3}\\-([0-9]{1,4})\\/([0-9]{
1139 : failed : failed : 1.003774315 (s) : \"^\\d{6}
1140 : failed : failed : 13.018768914 (s) : ([A-Z][0-9]{3}-){0,2}[0-9]{4}
1141 : failed : failed : 0.113826659 (s) : ^(4[0-3]|[01][0-9])[0-9]{2}
1142 : unparsable : unparsable : 0.08224177 (s) : (\\d{2})([0-9]{3})([a-z]{2})(
1143 : failed : failed : 0.574764247 (s) : (\\d{4}[-/]\\d{2}[-/]\\d{2})
1144 : failed : failed : 0.146417419 (s) : ^\\d{4}
1145 : failed : failed : 0.298988977 (s) : (\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)I'm having trouble
1146 : failed : failed : 2.098136448 (s) : \\b(19|20)\\d{2}
1147 : unparsable : unparsable : 0.058318928 (s) : /^(0[1-9]|[12][0-9]|3[01])(0
1148 : unparsable : unparsable : 0.083298065 (s) : /^([0-9]{4})-([0-9]{2})-([0-9]
1149 : failed : failed : 0.722505833 (s) : YY[0-9]{4}(0[1-9]|1[012])
1150 : failed : failed : 1.719462772 (s) : (Y|M|D) \\d{2}(0|2)\\d{2}
1151 : failed : failed : 0.46319571 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1152 : failed : failed : 0.408201198 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1153 : failed : failed : 0.493262591 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1154 : failed : failed : 0.385162299 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1155 : failed : failed : 0.510107509 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1156 : failed : failed : 0.314266523 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1157 : failed : failed : 0.300080287 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1158 : failed : failed : 0.347296345 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1159 : failed : failed : 0.398334479 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1160 : failed : failed : 0.41952921 (s) : Email address validator. Should cover most of RFC 822, including unusual (but still valid) addresses. Does not restrict the top level domain size, but you're better off doing an nslookup or similar if you absolutely must have a valid domain. Accepts IP Addresses instead of the domain, with or without brackets. Believe it or not, this one is val
1161 : failed : failed : 0.17970295 (s) : ^[0-9,]{1,3}([-+]?[0-9]{1,3})$
1162 : failed : failed : 0.339786773 (s) : ^(\\d+)(,\\d+)?$
1163 : failed : pumping failed : 60.662188589 (s) : [0-9]+,[0-9]{0,3}[.][0-9]{1,3}
1164 : failed : failed : 0.251476716 (s) : (\\d{1,3}\\,\\d{3}|-\\d+)(?!\\d) Explanation of the reg
1165 : failed : failed : 15.320043231 (s) : \"([a-z]+) \\d+,\\d+\"
1166 : failed : failed : 0.153584541 (s) : ([0-9]+[.,]?)+
1167 : failed : failed : 0.944545436 (s) : r'^(?=.{1,80}$)(?=^[0-9\\.]{1,1})
1168 : failed : failed : 1.842359782 (s) : ([\\d]+(\\.\\d+)?|[\\d+],)+
1169 : failed : failed : 0.648853054 (s) : [0-9][0-9,.]{1,3}
1170 : unparsable : unparsable : 0.061119706 (s) : r = re.compile('^(?P<value>\\d{1,2})(,\\d{3})?$')
1171 : failed : failed : 0.125199996 (s) : ^[0-9]+[0-9]*$
1172 : failed : failed : 1.050568364 (s) : \\b[0-9]{1,3}[0-9]{3}[1-9]\\b
1173 : failed : failed : 0.160488711 (s) : ^[1-9]\\d*$
1174 : failed : failed : 1.028596229 (s) : [0-9]+[a-z]?
1175 : failed : failed : 1.623263072 (s) : ^[0-9]*[1-9][0-9]*$
1176 : failed : failed : 1.429184412 (s) : ^[1-9]+[0-9]*$
1177 : failed : failed : 6.223183482 (s) : (0-9)+[0-9]*
1178 : failed : failed : 0.826118755 (s) : ^[1-9]\\d*$
1179 : failed : failed : 0.989105948 (s) : ^[1-9]+[0-9]*$
1180 : failed : failed : 0.134403285 (s) : ^[1-9][0-9]*$
1181 : unparsable : unparsable : 0.123347763 (s) : [
1182 : failed : failed : 2.680273572 (s) : \\
1183 : failed : error init : 0.13602105 (s) : ^
1184 : failed : failed : 0.206301003 (s) : \"
1185 : failed : error init : 0.115240613 (s) : ^
1186 failed : unparsable : 0 (s) : Please check your regex.
1187 failed : unparsable : 0 (s) : Please check your regex.
1188 : failed : error init : 0.079191217 (s) : ^
1189 failed : unparsable : 0 (s) : Please check your regex.
1190 failed : unparsable : 0 (s) : Please check your regex.
1191 failed : unparsable : 0 (s) : Please check your regex.
1192 : unparsable : unparsable : 0.071349203 (s) : [
1193 failed : unparsable : 0 (s) : Please check your regex.
1194 failed : unparsable : 0 (s) : Please check your regex.
1195 : failed : failed : 2.120072495 (s) : \\
1196 : failed : failed : 1.379839735 (s) : r
1197 : unparsable : unparsable : 0.092081379 (s) : ([
1198 : failed : failed : 0.820824736 (s) : r
1199 : failed : failed : 0.303228925 (s) : \\
1200 : unparsable : unparsable : 0.082271716 (s) : [
1201 : failed : error init : 0.111420741 (s) : ^
1202 : failed : error init : 0.150202337 (s) : ^
1203 failed : unparsable : 0 (s) : Please check your regex.
1204 : unparsable : unparsable : 0.07626744 (s) : \"(
1205 failed : unparsable : 0 (s) : Please check your regex.
1206 failed : unparsable : 0 (s) : Please check your regex.
1207 : unparsable : unparsable : 0.087064158 (s) : (
1208 : failed : error init : 0.101629693 (s) : ^
1209 : unparsable : unparsable : 0.076743749 (s) : (
1210 : unparsable : unparsable : 0.090667856 (s) : (
1211 : failed : failed : 2.691697563 (s) : /\\s*
1212 : failed : failed : 2.457171292 (s) : r'
1213 : failed : failed : 6.501215302 (s) : ((\\s+[\\d\\.]+[, ]+[\\d\\.]+)|(\\s+[\\d\\.]+))
1214 : unparsable : unparsable : 0.066612045 (s) : \"+([0-9]+
1215 : failed : failed : 0.692039666 (s) : 0\\.1+9\\.0
1216 : unparsable : unparsable : 0.076537454 (s) : (Exercise Answ
1217 : failed : failed : 1.741995345 (s) : 0.1|0.2-0.3
1218 : failed : failed : 1.577706407 (s) : \"
1219 : unparsable : unparsable : 0.096043187 (s) : \"^(?P<number>-?\\d+
1220 : failed : failed : 2.071276804 (s) : ([0-9]\\.[0-9]{1},){2}[0-9]
1221 failed : unparsable : 0 (s) : Please check your regex.
1222 : failed : failed : 170.669890217 (s) : [^a-zA-Z\\d_]{0,15}$
1223 : failed : failed : 5.087304639 (s) : (?<!\\w)\\w{0,15}(?!\\w)\"\"\"
1224 : failed : failed : 5.604995497 (s) : (\\w+) (\\d+)
1225 : failed : failed : 8.082432063 (s) : ^[a-zA-Z0-9._-]+$
1226 : failed : failed : 0.2186048 (s) : ^[a-z0-9\\s]{0,16}$
1227 : failed : failed : 7.806103648 (s) : ^(?=.*.{0,16}$).*$
1228 : failed : failed : 0.21985649 (s) : ^[a-zA-Z0-9]{0,16}$
1229 : failed : pumping failed : 5.611464473 (s) : ^[\\w\\s]*?[\\d\\s]*?[\\w\\s]*$
1230 : failed : failed : 16.925490369 (s) : sg.f(.{1,15})$
1231 : unparsable : unparsable : 0.069306192 (s) : /^([A-Za-z
1232 : unparsable : unparsable : 0.057145414 (s) : (?P<drive>[a-
1233 : unparsable : unparsable : 0.127542205 (s) : re.compile(r\"^C
1234 : unparsable : unparsable : 0.087758886 (s) : ^[a-zA-Z
1235 : failed : failed : 0.116617678 (s) : #import re #regex =
1236 : unparsable : unparsable : 0.109038417 (s) : r'(?i)[a-z
1237 : unparsable : unparsable : 0.082144167 (s) : \\b(C|d|i
1238 : unparsable : unparsable : 0.052580438 (s) : /([a-zA-Z]
1239 : failed : failed : 1.26686049 (s) : \\w+
1240 : unparsable : unparsable : 0.104129627 (s) : [a-zA-Z0-
1241 : unparsable : unparsable : 0.069243315 (s) : (?<![0-9])[0-9]{1,
1242 : unparsable : unparsable : 0.101503057 (s) : \\d{1,
1243 : unparsable : unparsable : 0.097571976 (s) : (\\d{1,2
1244 : unparsable : unparsable : 0.099514357 (s) : (hour ran
1245 : unparsable : unparsable : 0.080636429 (s) : ^([0-9]{1,2
1246 : failed : error init : 0.105585059 (s) : ^
1247 : unparsable : unparsable : 0.065877251 (s) : \"([1-3][0-9]|4[0-1]
1248 : unparsable : unparsable : 0.104956033 (s) : \"^(0|[1-9]\\d?)([0-
1249 : unparsable : unparsable : 0.079418331 (s) : ([0-9]{1,2
1250 : unparsable : unparsable : 0.063228338 (s) : [01]\\d|2[0-3]|[01
1251 : failed : failed : 2.039014389 (s) : 0
1252 : failed : failed : 0.766279674 (s) : '
1253 : failed : error init : 0.120523922 (s) : ^
1254 : failed : failed : 2.104093657 (s) : 0
1255 : failed : failed : 1.710179754 (s) : \\
1256 : failed : error init : 0.099059127 (s) : ^
1257 failed : unparsable : 0 (s) : Please check your regex.
1258 : unparsable : unparsable : 0.062667099 (s) : [
1259 : failed : failed : 0.113060467 (s) : 0
1260 failed : unparsable : 0 (s) : Please check your regex.
1261 : failed : failed : 0.72599068 (s) : (1) [0-9] or (2) [012345]
1262 : failed : failed : 0.980490288 (s) : \\d{1,20}$
1263 : failed : failed : 0.105493939 (s) : \\b1\\d\\b
1264 : failed : failed : 12.072434763 (s) : (?<![0-9])[1-9][0-9]|20
1265 : failed : failed : 54.233211042 (s) : ([0-9]|[1-9][0-9])$
1266 : failed : failed : 1.175675997 (s) : r'^[1-9][0-9]$'
1267 : failed : failed : 1.507086629 (s) : [0-9]?[1-9][0-9]
1268 : failed : failed : 11.44443363 (s) : ([1-9]|[1-2][0-9]|2[0-3])
1269 : failed : failed : 167.475877556 (s) : (0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20)
1270 : failed : failed : 1.892458099 (s) : \\d
1271 : failed : failed : 0.112590849 (s) : [^0-9A-Z]
1272 : failed : failed : 3.541808209 (s) : [^A-Za-z]{0,1}[A-Za-z]
1273 : failed : failed : 0.806637087 (s) : (1) ^[0-9]{2}\\s[A-Z]\\s[A-Z]$
1274 : failed : failed : 0.195532217 (s) : ^(\\d\\d\\d-?\\d\\d\\d\\d\\d\\D?)+$
1275 : failed : failed : 0.192340019 (s) : \"^[0-9]{5}[A-Z]{1}$\"2. Write a RegEx to validate a phone number. The phone number must have exactly 10 digits and can contain dashes. Answ
1276 : failed : failed : 0.736338999 (s) : \\d{4}[A-Za-z]\\d{2}
1277 : failed : failed : 22.650777636 (s) : [0-9]{4}[A-Z][0-9]{3}
1278 failed : unparsable : 0 (s) : Please check your regex.
1279 : failed : failed : 0.234899499 (s) : r\"\\d{4}[A-Z]{1,2} [A-Z]{1,2}\"
1280 : failed : failed : 24.644427669 (s) : [A-Z]{5}\\s+[A-Z]
1281 : failed : failed : 0.42956216 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1282 : failed : failed : 0.40849112 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1283 : failed : failed : 0.277631171 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1284 : failed : failed : 0.553546353 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1285 : failed : failed : 0.368933534 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1286 : failed : failed : 0.330795551 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1287 : failed : failed : 0.261912099 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1288 : failed : failed : 0.260694121 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1289 : failed : failed : 0.5355322 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1290 : failed : failed : 0.418878825 (s) : Accept only (0-9) integer and one decimal point(decimal point is also optional).After decimal point it accepts at least one numeric.This will be usefull in money related\rfields or decimal fields.Match exampl
1291 : unparsable : unparsable : 0.077688486 (s) : [
1292 : failed : failed : 0.16527991 (s) : \\
1293 : failed : failed : 0.228658178 (s) : \\
1294 : failed : failed : 0.235363356 (s) : r
1295 : failed : failed : 1.613963323 (s) : /
1296 failed : unparsable : 0 (s) : Please check your regex.
1297 failed : unparsable : 0 (s) : Please check your regex.
1298 : unparsable : unparsable : 0.090745872 (s) : (
1299 failed : unparsable : 0 (s) : Please check your regex.
1300 failed : unparsable : 0 (s) : Please check your regex.
1301 : failed : failed : 18.261082186 (s) : [012]?[0-9]|1[0-9]2|1[0-2]3
1302 : unparsable : unparsable : 0.042724479 (s) : \"01(?P<hour>\\d)(?P<minute>\\
1303 : unparsable : unparsable : 0.085158033 (s) : (.
1304 : failed : failed : 3.76750988 (s) : \\d{1,2}
1305 : unparsable : unparsable : 0.075914319 (s) : (?i)(1(?P<hour>0[1-9]|[12])(?P<minute>0[0-9]|[1-
1306 : unparsable : unparsable : 0.067007494 (s) : [a-zA-Z][a-zA-Z0-9
1307 : unparsable : unparsable : 0.083486588 (s) : ^[0-9]{0,
1308 : unparsable : unparsable : 0.077115896 (s) : ^[0-9]{1,2}[ ]?[012]?[ ]?[0-9]{1,
1309 : unparsable : unparsable : 0.08608131 (s) : [24][0-2][0-9
1310 : unparsable : unparsable : 0.067957901 (s) : [a-zA-Z]+\\s[0
1311 : failed : failed : 0.226336077 (s) : r'^#[A-Fa-f0-9]{6}$' ### Exercise
1312 : failed : failed : 7.60868916 (s) : ^[\\\\da-zA-Z0-9#\\\\-\\\\._]{1,}$
1313 : failed : failed : 0.165235527 (s) : ^[#a-f0-9]{6}[a-f0-9]{3}[a-f0-9]{3}$
1314 failed : unparsable : 0 (s) : Please check your regex.
1315 : failed : failed : 0.319907912 (s) : \"^#[0-9a-f]{6}$\"
1316 : failed : error init : 0.09873447 (s) : ^
1317 : failed : failed : 0.324624452 (s) : The Regular Expression should match any string that ends with either \"#FFFFFF\" or \"#FF3421\" but not \"#00FF00\".
1318 : failed : failed : 2.082449225 (s) : <#[0-9]+>
1319 : unparsable : unparsable : 0.084010578 (s) : \"#[0-9a-Fa-fA-F]{3}\".
1320 failed : unparsable : 0 (s) : Please check your regex.
1321 : unparsable : unparsable : 0.086879813 (s) : |^(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|1[012])\\/(2000|2001)$|^(0[1-9
1322 : unparsable : unparsable : 0.063639687 (s) : .*(?P<month>\\d{2})/(?P<day>\\d{2})/(?P<year>\\d{4})\"\"\"
1323 : failed : failed : 0.249077019 (s) : (?i)^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$
1324 : failed : error init : 0.115521148 (s) : ^
1325 : failed : failed : 2.832542293 (s) : \\d{1,2}\\/\\d{1,2}\\/\\d{4}
1326 : failed : failed : 0.571590463 (s) : [dd/mm/yyyy]
1327 : failed : failed : 9.613435002 (s) : [0-9][0-9]/[0-9][0-9]/[0-9][0-9]
1328 : unparsable : unparsable : 0.059127961 (s) : ^(?P<mday>\\d{2})/(?P<month>\\d{2})/(?P<year>\\d{4})$
1329 : failed : failed : 33.016602208 (s) : [^0-9]{4}/[0-9]{2}[0-9]{2}
1330 : failed : failed : 6.351286035 (s) : [DD/MM/yyyy]|[DD/MM/yyyy][-/][DD/MM/yyyy]
1331 : failed : failed : 0.256031853 (s) : ^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}$
1332 : failed : failed : 0.235000568 (s) : ^\\d{1,2}\\.?\\d{0,2}$
1333 : failed : failed : 0.153810974 (s) : ^[0-9]{1,2}[0-9]([0-9]{1,2})$
1334 : failed : failed : 3.142855335 (s) : (\\d{1,3}\\.\\d{1,2}(\\.\\d{0,2})?)
1335 : failed : failed : 0.25184301 (s) : ^[0-9]\\.[0-9]{0,2}$
1336 : failed : failed : 0.139537445 (s) : [0-9.]{0,8}[0-9.]{0,2}
1337 : failed : failed : 0.281589462 (s) : \\d{1,2}(\\.\\d{0,2}) (with optional zero-or-more digits)
1338 : failed : failed : 0.200587059 (s) : ^(?!(?=\\d{8})(?=\\d{2}$))[0-9.]{8}
1339 : failed : failed : 0.194833952 (s) : [0-9]{1,2}\\.[0-9]{1,2} (1 or 2 digits before the dot, and 1 or 2 digits after the dot)
1340 : failed : failed : 0.162421334 (s) : ^([0-9]{1,3}\\.[0-9]{1,2})?$
1341 : failed : failed : 0.125647253 (s) : ^[AKN][KW]
1342 : unparsable : unparsable : 0.075017803 (s) : ^(A|K|N|
1343 : unparsable : unparsable : 0.113472297 (s) : ^[a-zA-Z
1344 : unparsable : unparsable : 0.071551451 (s) : kd(?=\\d{
1345 : unparsable : unparsable : 0.05835733 (s) : (?!^)(?=(
1346 : failed : failed : 2.270724554 (s) : [AKNWW]{1}
1347 : unparsable : unparsable : 0.105162128 (s) : ^[A-K][K-
1348 : unparsable : unparsable : 0.079851952 (s) : ^[AKNW]{
1349 : unparsable : unparsable : 0.064926013 (s) : (k|d|e|f
1350 : unparsable : unparsable : 0.070644986 (s) : A[K|N|W][
1351 : failed : failed : 1.389248598 (s) : r\"([a-z][a-z]?)[a-z]\"
1352 : failed : failed : 35.286306385 (s) : (^|\\s)([a-zA-Z]+)\\s(day|day\\s|days)\\s([a-zA-Z0-9]*$)
1353 : failed : failed : 2.942046591 (s) : r\"^[dw]?[a-zA-Z]+$\"
1354 : failed : failed : 3.874562352 (s) : [0-9][a-z]
1355 : unparsable : unparsable : 0.09428008 (s) : \\b (?P<days>    [A-Za-z]+    |    [0-9]+ ) \\b
1356 : failed : failed : 1.624579864 (s) : [a-zA-Z]{2}[a-zA-Z]{2}
1357 failed : unparsable : 0 (s) : Please check your regex.
1358 : failed : failed : 3.336890362 (s) : ^[a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z][a-z].+$
1359 : failed : failed : 1.144238273 (s) : (e.g., \"^[m]onday$|^[f]ridday$|^[m]onday$|^[t]uesday$|^[f]ridday$|^[m]onday$\")
1360 : failed : failed : 1.897061546 (s) : \"\\d+[aeiou]\\w*\"
1361 : failed : failed : 6.695829322 (s) : ^[a-zA-Z][a-zA-Z0-9!\\-_]{0,100}\\b
1362 : failed : failed : 0.626184917 (s) : \"^[\\\\w-]+(\\\\.[\\\\w-]+)+$\"
1363 : failed : failed : 0.704505755 (s) : ^[a-zA-Z0-9]+(\\.[a-zA-Z0-9]+)*
1364 : failed : failed : 0.817622098 (s) : user [\\w-]+
1365 : failed : failed : 1.186390142 (s) : [a-z][a-z0-9_]*
1366 : failed : failed : 1.837921894 (s) : [0-9]\\w*\\.[0-9]\\w*
1367 : unparsable : unparsable : 0.088262167 (s) : /^[@_+a-zA-Z0-9]([0-9a-zA-Z_\\-=&#=\\'\\\"]+[0-9
1368 : failed : failed : 0.432286956 (s) : \"^[^0-9a-zA-Z_]+$\"
1369 : failed : failed : 41.679492267 (s) : [a-zA-Z0-9_]*2. How can you use a regular expression to find the first word in a string? Answ
1370 : failed : failed : 0.175035632 (s) : [^\\w\\s]
1371 : unparsable : unparsable : 0.065649465 (s) : (
1372 : failed : failed : 2.704888358 (s) : /
1373 failed : unparsable : 0 (s) : Please check your regex.
1374 : failed : failed : 2.968149299 (s) : Y
1375 : unparsable : unparsable : 0.08466443 (s) : (
1376 : unparsable : unparsable : 0.080179464 (s) : (
1377 : failed : failed : 0.869006969 (s) : \\
1378 failed : unparsable : 0 (s) : Please check your regex.
1379 : failed : failed : 1.336007254 (s) : \\
1380 failed : unparsable : 0 (s) : Please check your regex.
1381 : failed : failed : 12.546007487 (s) : ([A-Z]{2}-[A-Z]{2}-\\d{4})
1382 : failed : failed : 0.111321325 (s) : ^[A-Z]{2}$
1383 : failed : failed : 0.151034403 (s) : ^[A-Z]{2}[a-z]+, [A-Z]{2}$
1384 : failed : failed : 6.450912823 (s) : ^(?=.*NY)(?=.*PA)(?=.*NJ)$
1385 : unparsable : unparsable : 0.088112668 (s) : \\b(?P<name>\\w+)\\s+(?P<state>\\w+)
1386 : unparsable : unparsable : 0.074843487 (s) : # (?i)\\b((?<!\\b(NY|PA|NJ|RI) )(?<!\\b( \\d+ \\d+ \\d+ \\d+ )\\b)\\b #(?<! \\b(NY|PA
1387 : failed : failed : 4.475038127 (s) : ([A-Z][A-Z0-9]|[A-Z]{2})
1388 : unparsable : unparsable : 0.074971025 (s) : {(state)? \"(
1389 : failed : failed : 0.148687455 (s) : ^[A-Za-z]{2,20}$
1390 : failed : failed : 4.377161472 (s) : \\d{2}[A-Z]{2}\\d{2}'''
1391 : failed : failed : 0.586355983 (s) : \"(\\d{3})\\s\\d{3}-\\d{4}\"
1392 : failed : failed : 8.009318701 (s) : (?<number>(555|575|435))?? (?<area>(###) ###-####)??
1393 : unparsable : unparsable : 0.091880042 (s) : ^\\s*\\(?\\d{3}\\)? \\d{3}-\\d{4}\\s*$
1394 : unparsable : unparsable : 0.064499676 (s) : \\(?\\d{3}\\)?[ -]\\d{3}[ -]\\d{4}
1395 : failed : failed : 1.158981201 (s) : [\\(\\d{3}\\)\\s]\\s[\\d{3}\\-\\d{4}]
1396 : failed : failed : 0.572328283 (s) : \\d{3}-\\d{3}-\\d{4}
1397 : failed : failed : 0.311557839 (s) : Phone Number RegEx = \"(\\d\\d\\d\\d-\\d\\d-\\d\\d)\"
1398 : unparsable : unparsable : 0.076296283 (s) : (
1399 : failed : failed : 0.894006405 (s) : \\d{3}-\\d{3}-\\d{4}
1400 : failed : failed : 0.663599897 (s) : (\\(\\d{3}\\)-(\\d{3})-(\\d{4}))
1401 failed : unparsable : 0 (s) : Please check your regex.
1402 : unparsable : unparsable : 0.050487013 (s) : \"(
1403 failed : unparsable : 0 (s) : Please check your regex.
1404 : unparsable : unparsable : 0.073538296 (s) : (
1405 : failed : failed : 2.260938104 (s) : 12
1406 : unparsable : unparsable : 0.097332538 (s) : (
1407 : failed : failed : 0.15075469 (s) : 0
1408 : unparsable : unparsable : 0.088769506 (s) : (
1409 : failed : failed : 1.453225706 (s) : \\
1410 failed : unparsable : 0 (s) : Please check your regex.
1411 : failed : failed : 0.156613816 (s) : ^[0-9]{1,3}
1412 : failed : failed : 0.998513158 (s) : ^[0-9]{1,3}[.]{0,1}[0-9]{1,3}$
1413 : failed : failed : 0.319512503 (s) : 0-999, 1-9,. (0 or more digits)
1414 : failed : failed : 0.14353522 (s) : ^[1-9][0-9]{9}$
1415 : failed : failed : 0.794026006 (s) : \"^(?!0)(?!1|2|3)(?!4|5|6|7|8)[0-9]{1,3}$\"
1416 : failed : failed : 0.162600089 (s) : ^[0-9]{3}[0-9]{4}$
1417 : failed : failed : 82.495409168 (s) : [0-9]{1,3}\\.[0-9]{1,3}
1418 : failed : failed : 0.879599707 (s) : \"^[0-9]{0,3}[.][0-9]{0,3}$\"
1419 : failed : failed : 56.823864717 (s) : [0-9]{1,3}(\\.[0-9]{1,3})+
1420 : failed : failed : 0.748856415 (s) : \\d{1,3}
1421 : unparsable : unparsable : 0.092735883 (s) : ^(0[1-9][0-9]|1[0-2][0-9]|3[01])\\/(0[1
1422 : unparsable : unparsable : 0.075483864 (s) : /(?P<month>[1-9]\\d)|[A-Z]{1,2}/|[A-Z]{4}
1423 : unparsable : unparsable : 0.101298223 (s) : [^12]\\s*[a-z-]{2}[0-9]{3}-[A-Z][0-9]{
1424 : failed : failed : 1.149246548 (s) : \\d{2}(\\/|-|\\+)?\\d{3}(\\/|-|\\+)?\\d{4}
1425 : failed : failed : 0.550389219 (s) : @[0-9]\\s+[A-Z]{2}\\s+[A-Z]{4}\\s+\\d{4}
1426 : failed : failed : 0.124227889 (s) : ^[a-zA-Z][a-zA-Z-]? [a-zA-Z]\\s?[0-9]
1427 : failed : failed : 1.434540888 (s) : \"^(1[0-9]|[12][0-9]|3[01])/\\d{1,2}-\\d
1428 : failed : error init : 0.124818794 (s) : ^
1429 : unparsable : unparsable : 0.154322932 (s) : /[A-Z][a-z]+ [A-Z]{3}- [A-Z]{4}[ \\-/ /.][
1430 : failed : failed : 8.045378828 (s) : \"/[A-Z][a-z]+[/-/][A-Z][a-z0-9]{4}[/-/]\"
1431 : failed : failed : 0.906356388 (s) : \\d{4}[A-Z]{2}
1432 : failed : failed : 0.569560488 (s) : \\d{4}-\\w{2}
1433 : unparsable : unparsable : 0.075830392 (s) : (?=[^0-9A-Za-z]|[0-9A-Za-z]$)(?=.{2,4}$)[0-9A-Za-z]{2}[0
1434 : failed : failed : 0.754004421 (s) : /^\\d{4}
1435 : failed : failed : 29.649649224 (s) : [0-9]{3}[A-Z]
1436 : failed : failed : 1.061431697 (s) : A^2B\\d{4}$
1437 : failed : failed : 104.892694229 (s) : [0-9A-Z]{4}[0-9A-Z]([A-Z]{2})
1438 : failed : failed : 0.672581232 (s) : ([\\W])(\\d{4}[\\W])(\\d{4}[\\W])(\\d{2}[\\W]?)
1439 : failed : failed : 0.593585381 (s) : \"^[A-Za-z]{2}[0-9]{3}[A-Za-z]{1}$\"
1440 : failed : failed : 0.486692686 (s) : [0-9][0-9A-Z]{2}
1441 : failed : failed : 4.14237273 (s) : [a-zA-Z ]+
1442 : failed : failed : 2.975870958 (s) : [a-z,A-Z0-9\\s,]+
1443 : failed : pumping failed : 85.290155999 (s) : ([a-zA-Z]+),([a-zA-Z]+),(\\w+)
1444 : failed : failed : 1.616554858 (s) : .*[^\\d].*
1445 : failed : failed : 0.40122834 (s) : [,|\\s,|\\+]
1446 : failed : failed : 0.945309295 (s) : ^\\d+[A-Za-z,]+$
1447 : failed : failed : 1.428532614 (s) : r\"[a-zA-Z0-9_+,.]\"
1448 : failed : failed : 4.362208813 (s) : [^\\s,]+
1449 : failed : failed : 3.713141629 (s) : [a-z][a-z0-9.]*
1450 : failed : failed : 15.488913053 (s) : [A-Za-z0-9]+
1451 failed : unparsable : 0 (s) : Please check your regex.
1452 failed : unparsable : 0 (s) : Please check your regex.
1453 : unparsable : unparsable : 0.086001431 (s) : [
1454 failed : unparsable : 0 (s) : Please check your regex.
1455 : unparsable : unparsable : 0.072876278 (s) : (
1456 : unparsable : unparsable : 0.097294056 (s) : [
1457 : failed : failed : 1.336450373 (s) : \\
1458 failed : unparsable : 0 (s) : Please check your regex.
1459 : unparsable : unparsable : 0.081485677 (s) : [
1460 : unparsable : unparsable : 0.091247059 (s) : ([
1461 : failed : failed : 1.932072703 (s) : [01]\\d{1,2}[-/.]\\d{1,2},\\d{4}
1462 : failed : failed : 10.832296661 (s) : (0|[1-9]?[0-9])?\\s?[0-9]{3}\\s?[0-9]{2}\\s?[0-9]{4}
1463 : failed : failed : 0.220487029 (s) : ^(\\d{2}[\\w]{3} [\\d]{4})$
1464 : failed : failed : 1.979407812 (s) : /^
1465 : failed : failed : 0.59065451 (s) : [01]\\d\\d [A-Z]\\w\\d [A-Z]\\w\\d
1466 : failed : failed : 0.736354839 (s) : ^[0-9]{1,2}[a-zA-Z]{3}[0-9]{4}$
1467 : failed : failed : 0.271097443 (s) : \\b\\d+ [ap]r\\.?\\s?\\d{4}\\b
1468 : failed : failed : 12.047933138 (s) : (^.*?)[ ]?(\\d{2})(\\/)(\\d{4})$
1469 : failed : failed : 0.345691334 (s) : \\b\\d{1,2}[a-z]{2}\\s{0,3} \\d{2}[a-z]{2}\\d{4}\\b
1470 : failed : failed : 0.474842698 (s) : [0-9]{2}\\s[0-9]{2}\\s[0-9]{4}
1471 : failed : failed : 0.137866029 (s) : ^(january|february|march|april|may|june|july|august|september|october|november|december)$
1472 : failed : failed : 0.211211125 (s) : ^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$
1473 : failed : failed : 6.262882092 (s) : [a-z][a-z]|[a-z]
1474 : failed : failed : 1.845567479 (s) : [\"JANUARY\", \"MAY\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"]
1475 : failed : failed : 0.2210648 (s) : ^[a-zA-Z]{1,3}(st|nd|rd|th)$
1476 : failed : failed : 1.170967654 (s) : \"^[A-Z][a-z]{3}[0-9]{2}$\"
1477 : unparsable : unparsable : 0.056407374 (s) : m[a-z]{3,2}
1478 : failed : failed : 59.752561867 (s) : \\b[A-Z][a-z]+( [A-Z][a-z]+)* [A-Z][a-z]+ [A-Z][a-z]+ [A-Z][a-z]+\\b\"\"\"
1479 : failed : failed : 0.24760202 (s) : [\\d]{1,3}\\w{3,10}
1480 : unparsable : unparsable : 0.057251893 (s) : import reregex = re.compile(r'^(?P<month>\\w{3}\\s*)\\w{2}\\s*$', re.IGNORECASE)
1481 : failed : failed : 2.943697668 (s) : (1|0)+
1482 : failed : failed : 2.150195972 (s) : /^(1|[01]*)(1|[0]*)*$/Generate a RegEx for this description. Answer
1483 : failed : failed : 0.190778088 (s) : /^1+$/;
1484 : failed : error init : 0.107395415 (s) : (([01]*0)+0)*?
1485 : unparsable : unparsable : 0.087977625 (s) : ^(1
1486 : failed : failed : 0.127925262 (s) : ^\\d{1,3}
1487 : failed : failed : 0.177380497 (s) : ^(1[01])*$
1488 : failed : failed : 15.642456227 (s) : ([01]{1,}|[0]{1,})
1489 : failed : failed : 0.62714336 (s) : \\d+\\s+\\+#+
1490 : failed : failed : 0.520633872 (s) : (\\d+)
1491 : failed : failed : 0.139499704 (s) : yy/MM/yyyy or yy/MM/yyyy-dd/MM/yyyy
1492 : failed : failed : 0.216828378 (s) : [MDY]{2}[-\\/]\\d{2}[-\\/]\\d{4}/\\d{2}/\\d{4}\"\"\"
1493 : unparsable : unparsable : 0.060987047 (s) : /[0-9]{4}/[0-9]{2}/[0-9]{2}[-/][0-9]{2}/[
1494 : failed : error init : 0.115483568 (s) : ^
1495 : failed : failed : 0.500530962 (s) : (\\d\\d-\\d\\d-\\d\\d \\d\\d\\/\\d\\d\\/\\d\\d{2})
1496 : failed : failed : 1.565543995 (s) : [0-9]{4}[-/]?[0-9]{1,2}[-/]?[0-9]{2,}
1497 : failed : failed : 0.686630773 (s) : \\d{2}, /\\d{2}, /\\d{4}
1498 : unparsable : unparsable : 0.062710009 (s) : ([0-9]{4})-([0-9]{2})/[0-9]{4}/([0-9]{4}|[0-9
1499 : unparsable : unparsable : 0.09326909 (s) : \\d{4}-\\d{2}-\\d{2}[.]\\d{2}(jan|feb|mar|apr|may|jun|j
1500 : unparsable : unparsable : 0.089408881 (s) : (^
1501 : unparsable : unparsable : 0.079692954 (s) : r\"^(\\d{1,5}\\.?\\d{1,2}|0\\d|.\\d{1,2}|\\d{1,3}|\\d{1,4}|
1502 : failed : failed : 10.530583099 (s) : ^[a-zA-Z0-9]{0,}(\\.\\d*)?$
1503 : failed : failed : 2.453749995 (s) : \\d\\d.\\d\\d(\\d\\d)?(\\.\\d)?
1504 : failed : failed : 103.680338897 (s) : [0-9]{1,5}\\.[0-9]{1,2}
1505 : failed : failed : 0.286060062 (s) : ^[0-9]{1,5}([.][0-9]{1,2})?$---
1506 : failed : failed : 0.418314188 (s) : ^[0-9]{0,5}(\\.\\d{1,2})?$
1507 : failed : failed : 2.31510039 (s) : /^
1508 : failed : failed : 1.753214583 (s) : r'\\d{1,5}\\.?\\d{1,2}'
1509 : failed : failed : 0.242324192 (s) : ^\\d{1,5}\\.?\\d{1,2}$
1510 : unparsable : unparsable : 0.064809725 (s) : regex = {    \"number
1511 : unparsable : unparsable : 0.064564457 (s) : (^[0-9]{1,5}\\.?[0-9]{0,2}$|^.{1,5
1512 : failed : failed : 4.258762683 (s) : ^[0-9]{1,5}(\\.0?[0-9]+)$
1513 : failed : failed : 0.304995809 (s) : ^[1-9][0-9]{0,4}(\\.\\d{0,2})?$
1514 : failed : failed : 0.83224477 (s) : \"^[1-9][0-9]\\d?[0-9]*[.]\\d{2}$\"
1515 : failed : failed : 0.212902538 (s) : (?<!\\d)(\\d{1,3}(\\.[1-3]\\d?)?)?(?!\\d)
1516 : failed : failed : 2.213163863 (s) : [a-zA-Z0-9]{1,20}
1517 : failed : failed : 0.62748061 (s) : ^\\d{1,5}\\.?\\d{1,2}$
1518 : failed : failed : 1.491153035 (s) : \\d{1,5}
1519 : failed : failed : 35.038054138 (s) : \\d*\\.?\\d{1,2}|\\d+
1520 : failed : failed : 1.326027955 (s) : r\"[0-9]{1,5}[.][0-9]{0,2}\"
1521 : failed : failed : 0.684914894 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1522 : failed : failed : 1.42392634 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1523 : failed : failed : 1.436133016 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1524 : failed : failed : 1.758120807 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1525 : failed : failed : 1.768429362 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1526 : failed : failed : 1.390898854 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1527 : failed : failed : 0.578807989 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1528 : failed : failed : 0.957470344 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1529 : failed : failed : 0.602376349 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1530 : failed : failed : 1.318528071 (s) : This regular expression checks if a given string contains only characters other than the specified special characters. If any of these special characters are found in the string, it will not be matched. These characters include < > ` ~! / @ \\ # } $
1531 : unparsable : unparsable : 0.080254495 (s) : {@code 
1532 : unparsable : unparsable : 0.053104738 (s) : ^(55[0-9]{3}[-]?[0-9]{4
1533 : unparsable : unparsable : 0.105277464 (s) : /^55512[12-9]$/ (any phone number from 55512 to 55912
1534 : failed : failed : 0.694187653 (s) : ^\\d{3}-\\d{3}-\\d{4}$
1535 failed : unparsable : 0 (s) : Please check your regex.
1536 : failed : failed : 1.324916045 (s) : [\\d][-\\d]{3}[()A-Z]{4}
1537 : failed : failed : 6.422066344 (s) : (?<![\\(](\\d{3})(?![\\)]))\\s?
1538 : unparsable : unparsable : 0.081683416 (s) : ^\\(?(\\d{3})\\)?[-\\s]?\\s?(\\d
1539 : unparsable : unparsable : 0.08716705 (s) : (?<![A-Za-z0-9])|(?<!\\
1540 : unparsable : unparsable : 0.09210332 (s) : ^\\(\\d{3}\\)?(\\d{3}-)?(\\d{4}-
1541 : failed : failed : 1.497286854 (s) : (\\d{4}(-\\d{2})?|\\d{4})
1542 : failed : failed : 0.149393936 (s) : ^(19|20|21)\\d{3}-\\d{4}$
1543 : failed : failed : 0.598033247 (s) : \\d+
1544 : failed : failed : 0.77053389 (s) : \"^[0-9]{4}-[0-9]{4}$\"
1545 : failed : failed : 0.578847343 (s) : [(r\"[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9]|[1-9]?[0-9])\", \"\"]
1546 : failed : failed : 0.911755043 (s) : \\d+,2-9
1547 : failed : failed : 0.399961712 (s) : r'^\\d{4},?\\d{2}-?\\d{2},?$'
1548 : failed : failed : 1.070939475 (s) : \"^[A-Z][a-z]{3,5}[A-Z]{1}[0-9]{4}\"
1549 : failed : failed : 1.016814128 (s) : \\d{4,5}
1550 : failed : failed : 7.085552369 (s) : ^.*(19|20)$
1551 : unparsable : unparsable : 0.089189682 (s) : (
1552 failed : unparsable : 0 (s) : Please check your regex.
1553 : failed : failed : 0.185310104 (s) : MM
1554 : failed : failed : 0.818728667 (s) : \"
1555 : unparsable : unparsable : 0.094976512 (s) : (
1556 : unparsable : unparsable : 0.084282326 (s) : (
1557 : failed : failed : 2.146470916 (s) : \\
1558 failed : unparsable : 0 (s) : Please check your regex.
1559 : failed : failed : 3.515656149 (s) : \\
1560 : failed : failed : 0.553850572 (s) : %
1561 failed : unparsable : 0 (s) : Please check your regex.
1562 : unparsable : unparsable : 0.126007326 (s) : (
1563 : unparsable : unparsable : 0.094257117 (s) : [
1564 : failed : error init : 0.108252567 (s) : ^
1565 failed : unparsable : 0 (s) : Please check your regex.
1566 : failed : failed : 0.555557334 (s) : /
1567 : unparsable : unparsable : 0.058026582 (s) : [
1568 : failed : error init : 0.119585458 (s) : ^
1569 : failed : error init : 0.093795645 (s) : ^
1570 : failed : error init : 0.118825697 (s) : ^
1571 : failed : failed : 0.119108807 (s) : [a-zA-Z_0-9]+
1572 : failed : failed : 34.986154132 (s) : (?<![_a-zA-Z0-9\\\\d_])[a-zA-Z][-a-zA-Z0-9_]*
1573 : failed : failed : 0.934962638 (s) : \\w\\d|_[A-Za-z0-9]+
1574 : failed : failed : 6.166158954 (s) : ^[a-zA-Z0-9_][a-zA-Z0-9_0-9]*$
1575 : failed : failed : 3.015556243 (s) : \\w+?
1576 : failed : pumping failed : 99.170734555 (s) : .-?[a-zA-Z_][0-9a-zA-Z_]*[a-zA-Z]$
1577 : failed : failed : 1.582487577 (s) : ^[a-zA-Z0-9_]*$
1578 : failed : failed : 1.110781153 (s) : \\w[\\w\\d]*[_\\w\\d]*
1579 : failed : failed : 0.761641221 (s) : \"^[A-Za-z0-9_]+([_0-9A-Za-z_]+)+$\"
1580 : failed : failed : 7.497480908 (s) : \\b[A-Za-z0-9_][A-Za-z0-9_]*\\bThis expression validates for valid C# or C++ identifierMatch exampl
1581 : failed : failed : 3.870258946 (s) : (1-5)(10|1)(0|9)(0|0|9)
1582 : failed : failed : 0.474738474 (s) : (13)^(1|3|4|6|9)?
1583 : unparsable : unparsable : 0.082224207 (s) : r'(^1
1584 : failed : failed : 0.751613421 (s) : [13][45]
1585 : failed : failed : 0.604453633 (s) : The pattern is [1-9]?[1346] or [10]?[1346]
1586 : failed : failed : 0.17359578 (s) : [1-5]?[1-9]?
1587 : failed : failed : 16.958206934 (s) : [1346]|[1-5]?[0-9]
1588 : failed : failed : 77.283027754 (s) : (1|2|3|4|5|6|7|8|9|0)
1589 : unparsable : unparsable : 0.080366604 (s) : (?=
1590 : failed : failed : 2.089355348 (s) : 13[46]+10
1591 : failed : failed : 0.313329211 (s) : ^[ACDEFHKLMOPQRS]*[A-Z]$
1592 : failed : failed : 7.387999773 (s) : [A-F]|[K-M]
1593 : failed : failed : 8.843809701 (s) : (a)^[A-Z]$|(b)^[a-z]$I'm trying to generate a RegEx for this description. Here's the code I wro
1594 : failed : failed : 1.683550051 (s) : ^(K|F|L|H|M|O|P|A).*$
1595 : failed : failed : 7.244097876 (s) : (A|C|D|F|H|K|L|M|O|P)+
1596 : failed : pumping failed : 425.703273494 (s) : (?=.{3,}$)(?<=^[A-F0-9]{3}$)\\w{6}$
1597 : failed : failed : 2.786246646 (s) : [A-D]?[B-F]?[E-H]?[D-F]? [A-D]?[B-F]?[E-H]?[D-F]?
1598 : failed : failed : 0.197648876 (s) : ^(A|C|D|H|K|L|M|O|P)$
1599 : failed : failed : 0.597741271 (s) : ^[ACDFHKLMNP]*$
1600 : unparsable : unparsable : 0.05261929 (s) : [A-D]3. Write Python code that takes a string and returns True if it contains only uppercase letters. Otherwise, it returns False.        **Ideas
1601 : failed : failed : 2.158957815 (s) : \\d+(\\.\\d{1,2})?
1602 : unparsable : unparsable : 0.084997603 (s) : (0
1603 : unparsable : unparsable : 0.087549215 (s) : (0|[1-9][0-9]*
1604 : failed : failed : 2.046600864 (s) : \\d+
1605 : failed : failed : 2.668026893 (s) : (?<!\\.)[0-9\\.\\d+](?!\\.)
1606 : unparsable : unparsable : 0.058793876 (s) : /^(?=
1607 : failed : failed : 18.222586675 (s) : ([1-9]\\d*(\\.\\d)?|0)
1608 : failed : failed : 1.212234116 (s) : [0-9]+
1609 : unparsable : unparsable : 0.074753869 (s) : r'^(-+)?(1[0-9]|[1-9
1610 : failed : failed : 0.09985777 (s) : ^[+-]?
1611 : failed : failed : 80.526696395 (s) : <[^>]*>
1612 : failed : failed : 0.216758197 (s) : <[^>]+(>|)</[^>]*> The square brackets denote the character class delimiter. The + quantifier allows the character to be repeated
1613 : failed : failed : 53.051337045 (s) : <[^>]*>
1614 : failed : failed : 16.516594362 (s) : <(.+?)>(<|>)/. It's the same as /<(.+?)>(<|>)
1615 : failed : pumping failed : 18.376800103 (s) : .*<([^>]*>.*?)</([^>]*>)>.*
1616 : failed : failed : 90.655870997 (s) : <(.*?)>\"
1617 : failed : failed : 0.411416791 (s) : (\\[(.*?)\\])
1618 : failed : failed : 60.682122152 (s) : \\<.*?>
1619 : unparsable : unparsable : 0.077288849 (s) : [\"<html>\", \"<div>\", \"<a href='htt
1620 : failed : failed : 88.128400425 (s) : \"<div>(.*?)<>\"
1621 : failed : failed : 0.219855749 (s) : ^[2-9][0-9]{3}-[0-9]{3}$
1622 : failed : failed : 3.543268941 (s) : (?<!\\d)\\d{3}[-\\s+&quot;]
1623 failed : unparsable : 0 (s) : Please check your regex.
1624 : failed : failed : 0.742008922 (s) : [02][0-9][0-9]
1625 : failed : failed : 0.574838817 (s) : /^[0-9]{2}[-/&quot;-]?[0-9]{3}
1626 : failed : failed : 2.997341984 (s) : \\d{2}[-\\+]?\\d{3}[a-zA-Z]
1627 : failed : failed : 14.236979996 (s) : (.*)This regular expression is probably what you are looking for. The first part,.* represents anything, the second part.
1628 : failed : failed : 0.390338788 (s) : \\b\\d{3}-\\d{2}-\\d{2}\\.\\d{2}\\b
1629 : failed : failed : 27.973362014 (s) : (^[0-9]+(( |-)?[0-9]+)?)$This regex will match any number of
1630 : unparsable : unparsable : 0.098192536 (s) : [0-2]a[0-9]|[0-9]a[0-9]|[0-9
1631 : failed : failed : 12.224941649 (s) : r'[a-zA-Z]+, [a-zA-Z]+'
1632 : failed : pumping failed : 94.075361159 (s) : (?=.*[A-Z])(?=.*[a-z])[0-9]
1633 : failed : failed : 0.168688433 (s) : ^( [A-Za-z0-9][A-Za-z0-9] )+$
1634 : failed : failed : 1.108911117 (s) : (^|[^a-zA-Z])[a-zA-Z]{6}(?![a-zA-Z])
1635 : failed : failed : 3.208476647 (s) : (regex) ^([a-z0-9]|[A-Z]){5,}$
1636 : failed : failed : 0.21656756 (s) : [a-zA-Z0-9]*
1637 failed : unparsable : 0 (s) : Please check your regex.
1638 : failed : failed : 41.388317551 (s) : ^([a-z]|[A-Z]).*([0-9]|[1-9][0-9])$
1639 : failed : failed : 7.751259908 (s) : ^[a-zA-Z]+$|^[0-9]+$
1640 : failed : failed : 6.866471229 (s) : [a-zA-Z0-9] or [a-zA-Z0-9]+
1641 : failed : failed : 0.123541645 (s) : ^\\/?
1642 : failed : failed : 9.713764854 (s) : [0-9]*
1643 : unparsable : unparsable : 0.089840789 (s) : /(\\.com\\/[\\
1644 : failed : failed : 0.118098748 (s) : r\"ht
1645 : unparsable : unparsable : 0.08899609 (s) : ^(http[s]?
1646 : failed : failed : 0.535733125 (s) : htt
1647 : failed : failed : 0.418103344 (s) : htt
1648 : failed : failed : 0.572190736 (s) : \".com\\/\\d+\"
1649 : unparsable : unparsable : 0.082218707 (s) : ```(?<
1650 : failed : failed : 0.141666927 (s) : /\"http[^\"]
1651 : failed : failed : 0.47562392 (s) : \"(\\d{3})(\\d{4})$\"
1652 : failed : failed : 0.897771806 (s) : [0-9]{4}[-/.\\s]*
1653 : failed : failed : 0.166229345 (s) : ^[0-9]{4}[0-9]{3}[0-9]{4}[0-9]{5}[0-9]$
1654 : failed : failed : 0.773374621 (s) : ^\\d{3}[-\\s]?\\d{4}\\s?[-\\s]?\\d{4}$
1655 : failed : failed : 11.877946448 (s) : [A-Z]{4}[0-9]{5}[0-9]{4}
1656 : failed : failed : 0.650278619 (s) : \"^[A-Z][0-9]{5}[0-9]{4}$\"
1657 : failed : failed : 1.484153016 (s) : \\b(?=\\w{4})(?=\\d{3}[\\s-]\\d{4})\\d{4}\\b
1658 : failed : failed : 0.176502104 (s) : ^[0-9]{4}-9[0-9]{2}$
1659 : failed : failed : 85.642502106 (s) : [0-9]{2}[0-9]{3}[0-9]{4}-[0-9]{5}$
1660 : failed : failed : 0.749151798 (s) : (\\d{3}-\\d\\d\\d\\d\\d) + (\\d\\d+)
1661 : failed : failed : 0.170393332 (s) : <td 
1662 : failed : failed : 72.967880931 (s) : Pattern = \"<[^>]+>\"
1663 : unparsable : unparsable : 0.063840423 (s) : \"(?i)\\b(\\d{4}-\\d{2}-\\d{2}) \\s(\\d{
1664 : failed : failed : 0.163741743 (s) : <td class=\"TD2\">\\d{4}-\\w{2}-\\w{2}
1665 : unparsable : unparsable : 0.071209031 (s) : <td class=\"TD2\">(0[1-9]|1[012])[ -\\/]?(19[0-2]|20[0-9]|21[0-9
1666 : failed : failed : 0.829427742 (s) : <\\/?\\d{2}[-/]\\d{4}[-/]\\d{2}-\\d{2}[-/]\\d{4}[-/]
1667 : unparsable : unparsable : 0.070930029 (s) : (?
1668 : failed : failed : 0.409326343 (s) : [ \\w\\s]{0,49}
1669 : unparsable : unparsable : 0.050590327 (s) : ^(\\d{4}-\\d{2}-\\d{2})\\s+-\\s+(\\d{
1670 : failed : failed : 0.496331449 (s) : \"\\d{4}-\\d{2}-\\d{2}\"---
1671 : failed : failed : 0.548444033 (s) : \\b(Bob|John|Mary)\\s(?!\\w*\\Wwhite\\w*)\\bExamp
1672 : failed : failed : 0.194307928 (s) : /^
1673 : failed : failed : 0.613281269 (s) : ^(?=.*\\d)(?!.*\\W).*?$
1674 : unparsable : unparsable : 0.081831002 (s) : r\"^(?=.*[^W])(?=.*[A-Z])(?=.*[a-z])(?!.*\\bwhite\\b)(?=.*[a-z])(?
1675 : failed : failed : 109.885477216 (s) : (.*) - Match any string that starts with \"Bob,\" \"John,\" or \"Mary\" and does not end with \"White.\"
1676 : failed : failed : 0.629708466 (s) : r'^
1677 : failed : failed : 1.321904253 (s) : r\"(?i)(?m)^
1678 : unparsable : unparsable : 0.077630719 (s) : (This is an example of a RegEx that matches strings that start with the names \"Bob,\" \"John,\" or \"Mary\" and do not end with \"White.\")preg_match_all('/^([Bob|
1679 : failed : failed : 0.188981168 (s) : \"^(?=.*[bB]ob)(?=.*[jJ]ohn)(?=.*[mM]ary)$\"
1680 : failed : failed : 0.869925297 (s) : ^(?=.*[a-z])[a-z]{2,3}[a-z]{3}[a-z]$
1681 : failed : failed : 57.081069123 (s) : [a-z]{3,5}\\+
1682 : failed : failed : 0.217023473 (s) : \"^AL$\"
1683 : failed : failed : 1.868176896 (s) : r\"^[A-Za-z]{2}[A-Za-z0-9]*?
1684 : failed : failed : 38.09996137 (s) : [0-9]{3}[A-Z]{2}
1685 : failed : failed : 0.42358272 (s) : htt
1686 : failed : failed : 0.718341257 (s) : \\(AL[a-zA-Z0-9]?\\)?
1687 : failed : failed : 0.363050583 (s) : [a-z]{2}[a-z]\\w+\\.([a-z]|\\.)3. Match the following phone numbers in the following form
1688 : failed : failed : 2.0820615 (s) : [regex]
1689 : failed : failed : 70.2229613 (s) : (^.+[._a-zA-Z]{2})([._a-zA-Z0-9]{2})$
1690 : failed : failed : 0.163737917 (s) : \"NEWYORK\"
1691 : unparsable : unparsable : 0.092011048 (s) : (?<![a-zA-Z])[a-zA-Z0-9.-]+[a-zA-
1692 : unparsable : unparsable : 0.096561186 (s) : ^spggr[a-z]{6}[0-9]{3}[a-z]{2}[0
1693 : failed : failed : 4.168082273 (s) : [REGEX]
1694 : unparsable : unparsable : 0.103265381 (s) : (SPGGRG)([0-9A-Z])([0-9A-Z])([0-9A-
1695 : unparsable : unparsable : 0.071708134 (s) : r/spggrg[0-9A-Z0-9]{2}[0-9A-Z0-
1696 : unparsable : unparsable : 0.07720334 (s) : \\d{1,2}[A-Z]\\d{1,5}[a-z]{1,5}[
1697 : failed : failed : 5.96890664 (s) : \\d{1,2}[A-Z]{1}[\\d\\-]*\\d{4,12}
1698 : failed : pumping failed : 13.299715885 (s) : (.*)\\s.*\\s\\d+\\s\\d+\\s\\d+\\s\\d+\\/\\s\\d
1699 : unparsable : unparsable : 0.053678622 (s) : ^([0-9][0-9][0-9][0-9][0-9][0-9][0-9][
1700 : failed : failed : 1.865759125 (s) : A
1701 : failed : failed : 0.132952642 (s) : - Match
1702 : failed : failed : 0.607108377 (s) : \\d[^\\.]
1703 : failed : failed : 0.143895284 (s) : ^[0-9]?\\.?[0-9]?[0-9]?$
1704 : failed : failed : 5.087553204 (s) : 0([01]?[0-9]|2[0-3]|[01][0-9]|[12]?[0-9]|3[01])\\.[0-5][0-9]
1705 : failed : pumping failed : 2.827559336 (s) : ^[0-9]*\\.?[0-9]*(([0-9]*[1-9]|[1-9])[0-9]*)?([^0-9]*)?$
1706 : failed : failed : 0.224359411 (s) : ^\\d+(\\.\\d+)?
1707 : failed : failed : 2.079657585 (s) : r'\\d+\\.\\d* 
1708 : failed : failed : 0.681049687 (s) : \"^[0-9]{1,3}\\.\\d{1,3}$\"
1709 : failed : failed : 0.197531515 (s) : \\d\\.\\d{2}5. Match strings that contain all letters from A to Z and a-z
1710 : failed : failed : 0.56095161 (s) : [0-9]{1,2}[0-9]{1,3}
1711 : unparsable : unparsable : 0.085258241 (s) : (No
1712 : failed : failed : 0.168800293 (s) : dd/MM/yyyy\\s{3}\\d\\{2}/\\d{4}
1713 : failed : failed : 5.384233364 (s) : [0-9]\\d/[1-9]\\d/[01]\\d\\d
1714 : failed : failed : 2.449775994 (s) : \\b(2\\d\\d[01])/(3\\d[0-9][0-9])/\\d{4}\\b
1715 : unparsable : unparsable : 0.079468295 (s) : [01].[0-9]{1,2}[0-9]/[0-9]/[0-9] [02].[0-9]{1,2}[
1716 : failed : failed : 0.793334323 (s) : 31_d/MM/yy|29_d/MM/yy|29_d/MM/yy
1717 : failed : failed : 0.192935482 (s) : ^[A-Z0-9]{3}-[A-Z0-9]{5}-\\d{2}$
1718 : failed : failed : 0.147032169 (s) : ^([1-2][0-9]|3[01])[/\\\\/-]
1719 : unparsable : unparsable : 0.061147457 (s) : /\\d{4}-(\\d{2})[\\-\\s]\\d{2}(/([\\-\\d/ ]{1,2})([\\-\\d/ ]{1,2
1720 : failed : failed : 0.139477674 (s) : dd/MM/yy
1721 : failed : failed : 0.200872653 (s) : (.{1,3})[0]{1,3}[1-9] (a number of 1-9 digits). If the number is not a valid postive number, include a special character other than 1-9 to indicate such a
1722 : failed : failed : 8.952592299 (s) : \\d*(?=\\d)
1723 : failed : failed : 2.474837716 (s) : \"^[0-9]*([0-9][0-9]*)*$\"
1724 : failed : failed : 0.117635071 (s) : ^[0-9]{1,3}$
1725 : failed : failed : 1.228692991 (s) : \"^[12]\\d$\"
1726 : unparsable : unparsable : 0.066158908 (s) : \\d+ - Positive whole numbers (\\d+) 0* - 0 or more zeroes (*)
1727 : failed : failed : 0.171905549 (s) : ^[1-9][0-9]*$
1728 : failed : pumping failed : 187.997132826 (s) : [0-9]+I tried this regex, but it only matches positive intege
1729 : failed : failed : 0.150744662 (s) : ^(([1-9]?[0-9]{0,2})|0)([A-Z])([0-9]{0,2})$ I tried like this
1730 : failed : failed : 0.469535555 (s) : - \"^\\d+$\"
1731 : failed : pumping failed : 11.724206665 (s) : ^[0-9]*[0-9]*[0-9]%[0-9]*[0-9]*%[0-9]*$
1732 : failed : failed : 3.284762481 (s) : ^0+(\\.(\\d{3})){1,2}%$
1733 : failed : failed : 1.578310257 (s) : (?<![a-zA-Z0-9])([0-9\\.]{1}\\,){3}\\d{1,4}%(?![a-zA-Z0-9])
1734 failed : unparsable : 0 (s) : Please check your regex.
1735 : failed : error init : 0.105819578 (s) : .*\\d{1,3}%This will match any amount of digits (from 1 to 3), followed by the letter '%', followed by any number of digits. (The '.*' is a wildcard, which matches any character, including newlines).
1736 : failed : failed : 0.266431388 (s) : ^[\\d]{1,6}[.][\\d]{1,6}$
1737 : failed : failed : 0.142656848 (s) : [^%\\d]
1738 : unparsable : unparsable : 0.090000258 (s) : \"(?i)(^[a-zA-Z ]+$|^[a-zA-Z ]+
1739 : failed : failed : 7.117470512 (s) : [^%]{1,100}%
1740 : failed : failed : 0.14981863 (s) : ^([0-9]|1[0-9]|[2-9])?%$
1741 : failed : failed : 0.192166484 (s) : mddyyyy
1742 : unparsable : unparsable : 0.06097266 (s) : /^(?=.*\\d)(?![a-z]{0,4})(?=\\d{2}[a-z]{3})(?=\\d{4})(?=.*[A
1743 : failed : failed : 0.138171631 (s) : MMDD\\d\\d\\d\\d\\d\\d\\d\\d
1744 : failed : failed : 25.537050917 (s) : [0-9]{8}-[0-9]{4}-[0-9]{2}-[0-9]{2}
1745 : failed : failed : 0.706023544 (s) : \"^[0-9]{8}$\"
1746 : failed : failed : 0.160448926 (s) : MMDDYYYY\"\"\"import refrom collections import deque
1747 : failed : failed : 25.398651811 (s) : [0-9]{6}-[0-9]{3}-[0-9]{4}[0-9]{2}[0-9]{2}
1748 : failed : failed : 2.540767335 (s) : \\B
1749 failed : unparsable : 0 (s) : Please check your regex.
1750 : failed : failed : 0.701196107 (s) : \\d{4}-\\d{2}-\\d{2} \\d{2}-\\d{2}-\\d{4}
1751 : failed : failed : 1.546460151 (s) : [0-9]{6}
1752 : failed : failed : 0.142804555 (s) : ^\\d{6}$
1753 : failed : failed : 9.392578471 (s) : @.*\\d{1,7}
1754 : failed : failed : 4.201673454 (s) : ^[0-9]{7,}\\.?[0-9]{4}$
1755 : failed : failed : 1.034461486 (s) : #^\\d{6}(\\.(\\d{3}){3})?$
1756 : failed : failed : 0.708420216 (s) : ^[0-9]{1,3}$|^[0-9]{3,8}$
1757 : failed : failed : 0.125879597 (s) : ^\\d{8}$
1758 : failed : failed : 0.950229905 (s) : (\\d\\d\\d\\d)(\\d\\d\\d)
1759 : failed : failed : 0.163801225 (s) : ^[0-9]{6}(-\\d{3}){3}$Explanati
1760 : failed : failed : 0.623363362 (s) : [0-9]{7}
1761 : failed : failed : 5.973939561 (s) : [a-zA-Z0-9_-]*
1762 failed : unparsable : 0 (s) : Please check your regex.
1763 : unparsable : unparsable : 0.116957955 (s) : [a-zA-Z0-9_]{1,40}(?
1764 : unparsable : unparsable : 0.076720998 (s) : [a-zA-Z_0-9.-]+@[a-z
1765 : unparsable : unparsable : 0.072017743 (s) : ^[a-zA-Z0-9!#_-\\s]+
1766 : unparsable : unparsable : 0.057715399 (s) : /(?=^[a-zA-Z0-9\\s_
1767 : failed : failed : 0.159126515 (s) : ^[A-Za-z\\d ]+$
1768 : unparsable : unparsable : 0.084312412 (s) : ^(?=.*[a-z])(?=.*[A-Z
1769 : failed : failed : 0.33247952 (s) : Reg
1770 : failed : failed : 6.288309669 (s) : [a-zA-Z0-9_.-]*
1771 : failed : failed : 1.799571654 (s) : [A-Z][a-z]{2}[a-z]?[0-9]{4}?[0-9]{2}
1772 : unparsable : unparsable : 0.08656822 (s) : \\b(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s?[0-9]{
1773 : failed : failed : 0.795902204 (s) : \\w{3}[aeiou]{1,2}[aeiou]{1,2}[aeiou]{1,2}
1774 : unparsable : unparsable : 0.078121696 (s) : ([Jan]|[0-9][A-Za-z]|[0-9][0-9][A-Za-z])[,
1775 : failed : error init : 0.12369904 (s) : ^
1776 : failed : failed : 0.16060007 (s) : ^[0-9]{4}-[0-9]{2}
1777 : failed : failed : 0.24402344 (s) : use of the term \"months\" with the delimiter \",\"
1778 : unparsable : unparsable : 0.071129302 (s) : ^\\d{1,2}(\\s
1779 : unparsable : unparsable : 0.092142874 (s) : ^[a-z][a-z][0-9][0-9] | [a-z][a-z][0-9][0-9
1780 : failed : failed : 0.152803161 (s) : ^(?= \\S )|(?<!\\S)
1781 : failed : failed : 0.133541133 (s) : ^[^a-zA-Z]$
1782 : unparsable : unparsable : 0.075133138 (s) : ^(?=^[^s\\r\\n\\t\\f\\v\\S]+$)(?=^[^s\\r\\n\\t\\f\\v]+?[^s
1783 : failed : failed : 0.523527593 (s) : (\\b[A-Z][a-z]+[A-Z][a-z]+\\b)#include <stdio.h>#include <string.h>
1784 : failed : failed : 0.265666949 (s) : ^[a-z][a-z][a-z]*[ ]*$
1785 : failed : failed : 0.544315964 (s) : (The answer will vary based on the specific rules and requirements of the use-case.)Example answ
1786 : unparsable : unparsable : 0.125753191 (s) : ^(?P<first_name>\\s[a-zA-Z]+)\\s(?P<last_name>\\S+)\\s$(?P<full_name>\\S
1787 : failed : failed : 7.828039825 (s) : \"\\b[A-Z][A-Za-z\\s-]+(\\s\\w+){1,}\\b\"
1788 : unparsable : unparsable : 0.07580788 (s) : ^(?P<first_name>\\w+)\\s\\S+(?P<last_name>\\w+)$
1789 : failed : failed : 1.62940144 (s) : [A-Z][a-z]?[A-Z][a-z]?[A-Z][a-z]?[A-Z]
1790 : failed : failed : 7.899873424 (s) : ^[A-Za-z][a-z]+\\s?[A-Za-z][a-z]+$
1791 : failed : failed : 6.71050836 (s) : (?<!^)(?<!\\d)(#{1,6})(?!\\d)
1792 : failed : failed : 1.219334653 (s) : ^(?=[^#]*#)?#?[#]?[0-9]{6}$
1793 : failed : failed : 0.324968185 (s) : \"^#[a-fA-F0-9]{6}$\".
1794 : failed : failed : 2.819108704 (s) : (Example)/^(?=\\d{36,}\\s?$)
1795 : failed : failed : 0.484977509 (s) : htt
1796 : failed : failed : 0.834227227 (s) : r'^#[0-9a-fA-F]{3,6}$'
1797 : failed : failed : 0.485727702 (s) : htt
1798 : failed : failed : 17.53480445 (s) : [\\#A-Fa-f0-9]{3}_[A-Fa-f0-9]{3}_[A-Fa-f0-9]{3}
1799 : failed : failed : 0.163422407 (s) : ```pythonimport re
1800 : failed : failed : 0.119382679 (s) : ^#
1801 : unparsable : unparsable : 0.082864345 (s) : (?<year>\\d{4})(?<day>\\d{2})(?<month>\\d{2})(?<date>\\d{2})(?<
1802 : failed : failed : 0.706132328 (s) : [YY]{2}[0-9]\\d{3} - [1-4]\\d{2}
1803 : failed : failed : 0.835510486 (s) : [YM](\\d\\d\\d)D(\\d\\d)Descripti
1804 : failed : failed : 91.498235399 (s) : ([0-9]{2})([0-9]{1})([0-9]{2})$
1805 : failed : failed : 1.000870897 (s) : ^[0-9]{2}[0-9]{2}[1-3][0-9]{4}$
1806 : failed : failed : 1.147747746 (s) : 0[1-9]\\d{3}|0\\d{4}
1807 : unparsable : unparsable : 0.049564428 (s) : (r'^
1808 : failed : failed : 0.662168081 (s) : \"^[0-9]{3}[0-9]{2}[0-9]{4}$\"
1809 : failed : failed : 19.825438712 (s) : [0-9]{4}[1-2][0-9]
1810 : failed : failed : 0.161800494 (s) : ^J[1-9][0-9]*[0-9]$
1811 : failed : failed : 0.176225177 (s) : \\d{6}-\\d{3}-\\d{4}Exercise
1812 : failed : failed : 0.44864319 (s) : ^\\d{3}\\-\\d{2}\\-\\d{4}$
1813 : unparsable : unparsable : 0.085067364 (s) : [0-9]{4}[-\\/\\()]?[0-9]{3}[-\\/\\)]?[0-9]{
1814 : failed : failed : 0.226082452 (s) : ^[0-9]{3}-[0-9]{3}-[0-9]{4}$
1815 : failed : failed : 32.033205726 (s) : [A-Z]{3}\\-?[0-9]{3}\\-?[0-9]{4}
1816 : failed : failed : 0.626048702 (s) : \\d{4}-\\d{2}-\\d{4}
1817 : failed : failed : 77.409076848 (s) : - #1.1.1.*1 - #1.1.2.*2 - #1.1.3.*3 - #1.
1818 : failed : failed : 0.198842597 (s) : ^\\d{3}(-)?\\d{3}(-)?\\d{4}$
1819 : failed : error init : 0.122175551 (s) : ^
1820 : unparsable : unparsable : 0.067765973 (s) : ((?!.*[^0-9])(?=\\-\\-\\-\\-)(\\d{3})-(\\d{2})-
1821 : failed : failed : 2.094841296 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1822 : failed : failed : 1.802414439 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1823 : failed : failed : 1.177827281 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1824 : failed : failed : 1.337559747 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1825 : failed : failed : 1.15188407 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1826 : failed : failed : 1.082132715 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1827 : failed : failed : 1.678238919 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1828 : failed : failed : 0.94888959 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1829 : failed : failed : 1.002589952 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1830 : failed : failed : 3.304831056 (s) : Matches positive whole numbers with exactly zero or two decimal points if a. is present. Useful for checking currency amounts, such 5 or 5.00 or 5.25.Match exampl
1831 : failed : failed : 0.94671376 (s) : ^[a-zA-Z0-9][a-zA-Z0-90-9]{5,}$
1832 : failed : failed : 0.740221089 (s) : ^[A-Za-z0-9_]*$
1833 : failed : failed : 0.190638738 (s) : r'\\W+(?![a-zA-Z0-9_])'
1834 : failed : failed : 3.623350964 (s) : [^a-zA-Z0-9]
1835 : failed : failed : 1.832223889 (s) : [^a-zA-Z0-9_]
1836 : failed : failed : 0.163110153 (s) : [0-9A-Za-z\\d_\\-\\-\\(\\.,\\!@\\#\\%\\^\\&\\*\\(\\)\\'\\\"]
1837 : failed : pumping failed : 20.712779984 (s) : \\w+.*(?=@.*\\.)
1838 : unparsable : unparsable : 0.110066469 (s) : import redef get_regex(descriptio
1839 : failed : failed : 0.129423744 (s) : \\w\\w\\w\\W
1840 : failed : failed : 6.251175613 (s) : ^[A-Za-z0-9_\\-\\.]*$
1841 : failed : failed : 0.828520516 (s) : ^[0-9]+ [A-Z]\\s? [A-Z0-9]+$
1842 : failed : failed : 8.257752577 (s) : [0-9]{2} [A-Z][a-z]{3} [0-9]{4}
1843 : unparsable : unparsable : 0.075939065 (s) : \\b(0?[1-9]|1[012])[0-9]{4}\\s(0?[1-9]|1[012
1844 : failed : failed : 2.142743627 (s) : \\b(20|29)\\d\\s(\\d\\1)\\b
1845 failed : unparsable : 0 (s) : Please check your regex.
1846 : unparsable : unparsable : 0.103234625 (s) : (?(DEFINE)\\b(?P<month>[A-Z]{3})\\s?\\d{1,2}[\\ \\\\/]?
1847 : unparsable : unparsable : 0.095796516 (s) : \"^[A-Z]{2}\\w{1,2}\\s[0-9]{4}\\s[0-9]{2}\\s[
1848 : failed : failed : 1.456672371 (s) : \\b[0-9]{2}[a-z]{3}\\b
1849 : unparsable : unparsable : 0.097171557 (s) : ([0-9]{1,2}[a-z][0-9]{1,4} ){1,2} [a-z][a
1850 : unparsable : unparsable : 0.061777436 (s) : [\\d \\w]{3}\\s{4}\\s+\\d{4}\\s[A-Z][a-z]+\\s[A-Z
1851 : failed : failed : 5.739102078 (s) : \\\\d+
1852 : failed : failed : 1.022731884 (s) : [1-9][0-9]|[0-9]{3}
1853 : failed : failed : 0.259720932 (s) : [0-9]{1}[.0-9]*
1854 : unparsable : unparsable : 0.06495169 (s) : [0-9]{1,4}, [0-9]{1,4}[, ]?[0-9]{1,4}[, ]?[0-9]{1,4}[, ]?[
1855 : unparsable : unparsable : 0.063138931 (s) : (\\d
1856 : failed : failed : 0.951361571 (s) : \\d{4,5}
1857 failed : unparsable : 0 (s) : Please check your regex.
1858 : failed : failed : 1.023670479 (s) : \\b[0-9]{1,}\\,[0-9]{1,}\\,[0-9]{1,}\\.[0-9]{1,}\\b
1859 : failed : failed : 0.138163085 (s) : This regex should 
1860 : failed : failed : 0.778558214 (s) : (\\d+), (\\d+), (\\d+)
1861 : unparsable : unparsable : 0.091174163 (s) : \\b(?<=\\{)([^\\{\\}]+)(?=\\})
1862 : failed : failed : 1.089842822 (s) : \"([^_\\d])({2})$\"
1863 : failed : pumping failed : 16.945960115 (s) : (.*)  (.*)  (.*)  (.*)
1864 : unparsable : unparsable : 0.076385681 (s) : Match(case.name) { case \"k\" => case.name + \"|\" + case.name + \"|\" + case.name; case \"r\" => case.name + \"|\" + case.name
1865 : failed : failed : 1.512905429 (s) : r(.{1}?)
1866 : failed : failed : 2.029724758 (s) : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9 ]*$
1867 : failed : failed : 0.634376264 (s) : \"^(\\d+)\\/(\\d+)\\/(\\d+)/(\\d+)$\"
1868 : unparsable : unparsable : 0.076349342 (s) : [T,h,e, q], [u,i,k], [k,u,t], [e,c,k], [o,v,l,e], [d,a,g], [
1869 : unparsable : unparsable : 0.060095641 (s) : - \"^(.*)([a-zA-Z]+)(\\{0,1\\})$\" - \"^[a-zA-Z]+
1870 : failed : failed : 0.310472309 (s) : \\b(The [^\\s\\[\\]]+)([{0}]+)([{0}]+)([{0}]*)\\b
1871 : failed : failed : 1.941780625 (s) : [1-9][0-9]?[0-9]|\\.[0-9]{3,}
1872 : failed : failed : 0.233505452 (s) : \"^[+-]?\\d+\\.\\d+(,\\d+)?$\"It will match numbers like 123, -123, 1.23, -1.23, 1234, -1234.
1873 : failed : failed : 1.424555046 (s) : ^\\d+((\\.\\d{1,2})?|(\\.\\d{2}))$
1874 : failed : failed : 0.390409159 (s) : (\\d{4},\\d{0,2}),([^,.])
1875 : failed : failed : 2.439856716 (s) : ([1-9]\\d{3},\\d{2})|(\\d{3},\\d{2})
1876 : failed : failed : 0.542380084 (s) : \"^[0-9]+(,[0-9]+,?)*$\"
1877 : unparsable : unparsable : 0.067393556 (s) : *\\d+,\\d*
1878 : failed : failed : 0.785336889 (s) : (\\d*(\\.\\d+|[\\d,\\.]+)?)
1879 : failed : failed : 3.898167922 (s) : [\\d]{1,3},[1-9]\\d{0,2}
1880 : failed : failed : 1.310283064 (s) : (\\d+,\\d+)
1881 : failed : failed : 0.268597609 (s) : ^\\d[1-9]\\d{0,2}(\\.\\d+)?$
1882 : failed : failed : 0.723687063 (s) : [0-9]{3,7}
1883 : failed : failed : 0.158195002 (s) : ^\\d{9}(\\d{3}(\\d{3}(\\d{3}){1}))?$  5. Write a Python code to validate that the phone number has exactly 10 digits
1884 : failed : failed : 0.29102739 (s) : [^0-9\\,]+
1885 : failed : failed : 0.537202572 (s) : ^[0-9]{8,9}(.[0-9]{3})?$
1886 : failed : failed : 70.515094287 (s) : ([0-9]{1,3})\\.[0-9]{1,3}
1887 : failed : failed : 0.305768714 (s) : ^\\d{1,3}(,\\d{3})*?(\\.\\d{3})?$
1888 : unparsable : unparsable : 0.063848698 (s) : (^\\d{1,3}$|^\\d{1,3}\\.\\d{3}\\,\\d{3}$|^\\d{1,3}\\.\\d{3
1889 : failed : failed : 132.585469235 (s) : [0-9]{9}\\.?[0-9]{0,2}(,\\d{3})?
1890 : unparsable : unparsable : 0.060622856 (s) : \".*(\\d{1,3})[.,]\\d{3,}(\\d{3,})\\d{3}$\"- \"^[A-Za-z0-9._
1891 : unparsable : unparsable : 0.10976759 (s) : ^\\d{4}[-/][0-9]{2}([-/][0-9
1892 : failed : failed : 0.115836107 (s) : - ht
1893 : unparsable : unparsable : 0.055762899 (s) : \\d{1,2}(\\/)?\\d{1,2}(\\/)?\\d{
1894 : failed : failed : 0.762558767 (s) : \\d{1,2}-\\d{1,2}-\\d{4}
1895 : failed : failed : 0.562106139 (s) : \"^\\d{1,2}( /)?\\d{2,2}( /)?\\d
1896 : unparsable : unparsable : 0.074430184 (s) : /^[1-9]\\d\\d|0[1-9]\\d|1[
1897 : unparsable : unparsable : 0.070289421 (s) : (?<![0-9])[1-2][0-9]/(?![0-
1898 : unparsable : unparsable : 0.057776925 (s) : \\d\\d/\\d\\d-\\d\\d-\\d\\d(-(\\d\\
1899 : unparsable : unparsable : 0.086786058 (s) : (\\d{1,2}[-/]?\\d{1,2}[-/]
1900 : unparsable : unparsable : 0.07631572 (s) : (?!(0|[12])\\/(0|2)\\d|30\\d\\d)(\\
1901 : unparsable : unparsable : 0.092130491 (s) : (?P<value>[$|%]\\d*\\.\\d*|[\\
1902 : failed : failed : 0.156812337 (s) : ^[0-9\\.,]+$
1903 : unparsable : unparsable : 0.064029105 (s) : $(document).ready(function () {    var str = document.getElementById
1904 : failed : failed : 1.454298382 (s) : [\\$|%][0-9]{1,2}\\.?
1905 : failed : failed : 0.699096873 (s) : \\d+
1906 : unparsable : unparsable : 0.074116748 (s) : $?[0-9][0-9,]+([0-9]%
1907 : unparsable : unparsable : 0.096104122 (s) : #{$number}\\.(\\d+)?%
1908 : failed : failed : 0.607316556 (s) : \\$(\\d*\\.\\d+)%
1909 : unparsable : unparsable : 0.082720796 (s) : ?|(1\\.)?\\d*
1910 : unparsable : unparsable : 0.083335686 (s) : [0-9]*([0-9] +|[0-9])([
1911 : failed : pumping failed : 80.451498996 (s) : ([A-Z][A-Za-z]+) or ([A-Z]+)
1912 : failed : failed : 2.422891194 (s) : [^A-Z]|[A-Z]{1,2}[^A-Z]
1913 : failed : failed : 15.409496826 (s) : \\b[A-Z][a-z]*\\b
1914 : failed : failed : 0.757724298 (s) : \"^[A-Z][a-z]*[A-Z][a-z]*$\"
1915 : failed : failed : 0.12615398 (s) : ^[A-Z][a-z]*$
1916 : failed : failed : 0.277824863 (s) : ^[A-Z][a-z]+(?=[A-Z])
1917 : failed : failed : 8.002396969 (s) : \"[A-Z][a-z]*\"
1918 : failed : failed : 0.19996161 (s) : ^[A-Z][a-z]*$
1919 : failed : failed : 0.164858231 (s) : ^[A-Z][a-z]+$
1920 : failed : failed : 0.489071153 (s) : r'^[A-Z][a-z]*$'
1921 : failed : failed : 0.76047458 (s) : \\d{1,3}[,.]\\d{4}
1922 : unparsable : unparsable : 0.049657583 (s) : \\d{1,3}/\\d{1,3}/\\d{1,3} or \\d{1,3}/\\d{
1923 : failed : failed : 2.311765705 (s) : ^.{4,}
1924 : unparsable : unparsable : 0.099219105 (s) : ([0-9]{1,3}(,)?[0-9]{1,3}(,)?[0-9]{1,
1925 : failed : failed : 8.938855143 (s) : (^|,)[0-9]{3,}\\.
1926 : failed : failed : 2.656861755 (s) : ([0-9]+|\\.){3}(?!\\.)
1927 : failed : failed : 1.964330991 (s) : r\"(?<!0)(?<![a-zA-Z0-9])\\\\.(?![a-zA-Z0-9])
1928 : failed : failed : 1.053409857 (s) : \\b[0-9]{1,3}(,[0-9]{3})*\\b[0-9] is a digit, 1
1929 : failed : failed : 26.682137627 (s) : (?<![^\\w.])(\\d+\\.)?\\d{3,}(?![^\\w.])
1930 : failed : failed : 1.05112731 (s) : (^\\d{1,3}\\.){0,3}\\d{1,3}$
1931 failed : unparsable : 0 (s) : Please check your regex.
1932 : failed : failed : 0.157279941 (s) : \"^\\d{1,9}
1933 : unparsable : unparsable : 0.095553331 (s) : ^[1-9]\\{1,\\},{1,}\\d{1,3}$Exercise
1934 : failed : failed : 0.857896195 (s) : ^[12]\\d{3,4}(,[12]\\d{3,4})?$
1935 : failed : failed : 1.667567936 (s) : [1-9]\\d{1,9}(,\\d{1,9})*
1936 : unparsable : unparsable : 0.073232885 (s) : \\A(?!\\d*[\\,\\,0])([1-9]\\d{1,9}(
1937 : unparsable : unparsable : 0.057801531 (s) : ([0-9]{1,9}(,\\d{3})*(,[0-9]{3})*
1938 : failed : failed : 1.220066592 (s) : ^\\d+,\\s*(\\d{1,99999999}),\\s*(\\d{1,3}),
1939 : unparsable : unparsable : 0.073778676 (s) : /^(-?1,?2,?3,?4,?5,?6,?7,?8
1940 : failed : failed : 18.360035275 (s) : (?<!^)(?<!,)0?,9
1941 : unparsable : unparsable : 0.075052758 (s) : import rem = re.escape(input(\"Enter a stri
1942 : failed : failed : 0.165860105 (s) : [0-9a-zA-Z\\s]+
1943 : failed : failed : 1.270654885 (s) : \\S*(?=\\d|\\d\\s)\"\"\"
1944 : failed : failed : 0.391737845 (s) : ^\\d{1,3}\\s?[a-zA-Z]\\s?[a-zA-Z0-9]\\s?$
1945 : failed : failed : 0.136821857 (s) : \\d+ \\w+
1946 : failed : failed : 4.10654637 (s) : [a-zA-Z0-9 ]+
1947 : failed : failed : 0.573012853 (s) : \\d+-\\s+\\d+-\\s+\\d+
1948 : failed : pumping failed : 211.294302713 (s) : [A-Za-z 0-9]+ (lowercase and/or digits).
1949 : failed : failed : 9.672726098 (s) : \\\\S+
1950 : failed : pumping failed : 167.162023994 (s) : (?=.*\\d)(?=.*[a-zA-Z])[\\s\\S]*
1951 : failed : failed : 2.6072026 (s) : (?<!\\d)(?<digits>\\d{3}-\\d{3}-\\d{4})(?!\\d)
1952 : unparsable : unparsable : 0.059291827 (s) : re.compile('^(?P<number>\\d{3,10})(?P<prefix>(--|\\-))?(?P<
1953 : failed : failed : 0.741235735 (s) : [A] or [b] or [c] or [d]? A-D\"\"\"
1954 : failed : failed : 1.719696979 (s) : /^
1955 : unparsable : unparsable : 0.098352765 (s) : ^([0-9]{3}-)?[0-9]{3}$|^([0-9]{4})-([0-
1956 : failed : failed : 0.963700383 (s) : (\\d{3}-)?([\\d]{3}|[\\d]{4})(-)?\\d{4}
1957 : failed : failed : 63.661221736 (s) : [0-9]{3,8}-[0-9]{3,8}$
1958 : failed : failed : 0.18195487 (s) : ^(\\d{3}-)?(\\d{3}-)?(\\d{4})$
1959 : unparsable : unparsable : 0.104313381 (s) : \"(?!(\\d{3}|\\d{3}-)\\d{3}-\\d{4})(?!\\d{4})(?!
1960 : unparsable : unparsable : 0.079443759 (s) : (\\d{3})([-.])(\\d{3}
1961 : failed : failed : 0.183003861 (s) : \\$(\\d{3}[,.]\\d{3}[,.]\\d{3})|\\
1962 : failed : failed : 0.617047561 (s) : \\b\\d+,\\d*
1963 : unparsable : unparsable : 0.064968422 (s) : ^[\\d.,]{,4}\\d+(,\\d+)?[$]
1964 : failed : failed : 0.367746935 (s) : \\$\\d{1,2}
1965 : failed : failed : 0.149422819 (s) : ($\\d+\\.?\\d{1,2})?(,\\d+)?
1966 : unparsable : unparsable : 0.063222407 (s) : '((?<number>\\d+)\\s*,\\s*)?(?<currency>\\$?\\
1967 : failed : failed : 3.930411523 (s) : (.{2,}|.)+
1968 : failed : failed : 1.637772914 (s) : [^.,$]\\d{1,3},\\d{3}
1969 : unparsable : unparsable : 0.09791112 (s) : (1) $[0-9]{0,3}(,[0-9]{3}(
1970 : unparsable : unparsable : 0.068026981 (s) : $3[,.](?=
1971 : unparsable : unparsable : 0.056919732 (s) : \\([0-9]{3}[-.]?[0-9]{3}[-
1972 : failed : failed : 0.864149928 (s) : \\d{3}-\\d{3}-\\d{4}```
1973 : failed : failed : 0.869714433 (s) : /^\\d{2}-\\d{4}
1974 : failed : failed : 0.421796019 (s) : /\\b
1975 : failed : error init : 0.128428994 (s) : (?<!\\d{1,2}-)(?<!\\d{1,2}.)
1976 : unparsable : unparsable : 0.093243121 (s) : import re# Non-matching examplesnonmatch_descriptions = [\"555-1234\",
1977 : unparsable : unparsable : 0.062313287 (s) : ^[0-9]{9}$|^[0-9]{3}[-][0
1978 : unparsable : unparsable : 0.093352947 (s) : ^([1-9][0-9][0-9])|([1-9][0-9
1979 : unparsable : unparsable : 0.102922871 (s) : ^\\d{3}[-.]?\\d{3}[-.]?\\d{
1980 : unparsable : unparsable : 0.079197949 (s) : ^[(0-9)]{1,3} [0-9]{1,4}[-
1981 : failed : failed : 3.055898096 (s) : \\
1982 : failed : failed : 0.404725619 (s) : r
1983 : unparsable : unparsable : 0.128399069 (s) : [
1984 : failed : failed : 1.634169235 (s) : /
1985 : failed : error init : 0.126093346 (s) : ^
1986 : failed : failed : 3.048361975 (s) : \\
1987 : failed : failed : 0.453907092 (s) : /
1988 : unparsable : unparsable : 0.063634798 (s) : [
1989 : failed : error init : 0.096624764 (s) : ^
1990 : failed : error init : 0.105405203 (s) : ^
1991 : failed : failed : 0.252359667 (s) : ^(0[1-9]|1[012])[0-3]\\\\/\\\\d{2}[0-3]\\\\/\\\\d
1992 : failed : failed : 24.732722247 (s) : ([0-9]{4})-([0-9]{2})-([0-9]{2})
1993 : failed : failed : 0.927077794 (s) : (\\d{4})(-?\\d{2})(-?\\d{2})$
1994 : unparsable : unparsable : 0.060867604 (s) : \\d{4}[-/](\\d{2}[-/](\\d{2}))|( (\\d{2}[-
1995 : unparsable : unparsable : 0.135812791 (s) : @staticmethod  def _get_date_re_from_spec(date_spe
1996 : failed : failed : 0.211831385 (s) : ^[4-6]\\d\\d[2-9]\\d$
1997 : failed : failed : 0.519015967 (s) : \\d{4}-\\d{2}-\\d{2}
1998 : failed : failed : 0.641201516 (s) : \\d{4}[0-9]{2}[0-9]{2}[A-F]{3}[A-F]
1999 : unparsable : unparsable : 0.094601111 (s) : (?<=\\d{4})[0-9]{2}/([0-9]{2})([0-9])[0
2000 : unparsable : unparsable : 0.090740342 (s) : \"(?P<year>[0-9]{4})-(?P<month>[0-9]{2})-(?P<day>[
2001 : failed : failed : 3.099530813 (s) : [0-9]\\.?[0-9]?\\.[0-9]?[0-9]?\\.?[0-9]?[0-9]?[0-9]
2002 : failed : failed : 0.762861703 (s) : [.1-9]\\d? \\dI tried this but this does not work.
2003 : failed : failed : 1.965064292 (s) : \\.[0-9]{1,2}.[0-9]{1,2}
2004 : failed : failed : 0.852602516 (s) : \".1[0-9]?b6\"
2005 : failed : failed : 20.325768918 (s) : \\.[0-9]*\\.[0-9]*
2006 : unparsable : unparsable : 0.092202075 (s) : (\\d+
2007 : failed : failed : 1.207671585 (s) : \\b\\d*
2008 : failed : failed : 1.141753778 (s) : \"^[0-9][0-9.]{3}$\"
2009 : failed : failed : 181.508281163 (s) : ^\\d*\\.?\\d+|[\\d.]+$
2010 : failed : failed : 0.495509111 (s) : \"^[0-9]+
2011 : unparsable : unparsable : 0.106610647 (s) : \\b(-?\\d+
2012 : failed : failed : 2.072067633 (s) : .\\d+\\.\\d+
2013 : unparsable : unparsable : 0.097864904 (s) : {(?<number> *\\d+
2014 : unparsable : unparsable : 0.085165176 (s) : (?<number>\\d{1,3}
2015 : failed : failed : 0.629808102 (s) : (Any RegEx that includes a match for the specified examples and does not match non-match examples).
2016 : unparsable : unparsable : 0.064623066 (s) : [\\\\-0-9\\.]+
2017 : failed : failed : 0.116544872 (s) : [^\\d\\.]
2018 failed : unparsable : 0 (s) : Please check your regex.
2019 : unparsable : unparsable : 0.078165839 (s) : (\\d{1,3}
2020 : failed : failed : 2.809671036 (s) : \\d{1,2}\\.\\d{1,2}(\\-\\d{3})?
2021 : failed : pumping failed : 147.188840591 (s) : [^a-zA-Z0-9]+\"\"\"
2022 : failed : failed : 6.97818107 (s) : (\\d+(\\.\\d+)?)%
2023 : failed : failed : 0.170306909 (s) : ^[1-9]\\d{0,2}
2024 : failed : failed : 64.016907839 (s) : -^[0-9.9]{0,4}[ ]%|[0-9.9]{0,5}[ ]?%$
2025 : failed : failed : 2.718728687 (s) : \"99([\\d\\.]+?)%\"\"\"\"
2026 failed : unparsable : 0 (s) : Please check your regex.
2027 : failed : failed : 3.519626933 (s) : \\b
2028 : failed : failed : 0.15357323 (s) : (|\\d+\\.[0-9]{0,2}).*
2029 : failed : failed : 2.786603012 (s) : [0-9]\\.[0-9]
2030 : failed : failed : 0.128805628 (s) : ^\\d+
2031 : failed : failed : 1.054205576 (s) : \"^\\w+ \\w+$\"
2032 : failed : failed : 0.375421215 (s) : \"^[a-zA-Za-z ]{1}
2033 : unparsable : unparsable : 0.099105984 (s) : (?<![a-zA-Z])[a
2034 : unparsable : unparsable : 0.063173896 (s) : .* [A-Za-z ].* [A-Za
2035 : unparsable : unparsable : 0.097070688 (s) : ^[a-zA-Z ]*[a-zA-
2036 : failed : failed : 0.587465747 (s) : \"^[A-Z][a-z\\s]*$
2037 : unparsable : unparsable : 0.081088393 (s) : \"([a-zA-Z ][a-zA-Z ]
2038 : unparsable : unparsable : 0.079947961 (s) : \"^[A-Za-z ](?!\\s)(?!
2039 : unparsable : unparsable : 0.116745387 (s) : ^[A-Z][a-z ]*\\d+( [A
2040 : failed : failed : 0.116207682 (s) : james kramer.
2041 : failed : error init : 0.124155233 (s) : ^
2042 : failed : error init : 0.120486102 (s) : ^
2043 failed : unparsable : 0 (s) : Please check your regex.
2044 : failed : error init : 0.109174712 (s) : ^
2045 : unparsable : unparsable : 0.067048952 (s) : \"(
2046 : failed : failed : 1.447554201 (s) : /
2047 : unparsable : unparsable : 0.075913036 (s) : [
2048 failed : unparsable : 0 (s) : Please check your regex.
2049 : unparsable : unparsable : 0.077821415 (s) : [
2050 : failed : failed : 0.208660546 (s) : /
2051 : failed : failed : 2.085589216 (s) : \"A-F+[-]+?|[0-9]+
2052 : failed : failed : 12.070849238 (s) : A(?=.*?U)\\d{0,2}
2053 : failed : failed : 0.162912544 (s) : [a-f]+|[9-z]
2054 : failed : failed : 63.421880101 (s) : (1|2|3|4|5|6|7|8|9|0)\\.\\s*([A-F]\\+|[A-F]\\-)
2055 : failed : failed : 1.58328017 (s) : ([A-F])([+-])
2056 : failed : failed : 0.126398938 (s) : ^(a+|A|F-)
2057 : failed : failed : 3.053088753 (s) : [0-9] or [a-zA-Z]
2058 : failed : failed : 8.138801426 (s) : ([a-z][0-9]|[A-F][a-f]+)
2059 : failed : failed : 0.560380722 (s) : ^([a-fA-F]+)\\+([a-fA-F]+)([a-fA-F]+)$
2060 : failed : failed : 0.626340017 (s) : [A-F]\\d
2061 : failed : failed : 6.363354481 (s) : (DD|MM|YYYY|MMMM|YYYY)\\.\\d{2}
2062 : unparsable : unparsable : 0.066193984 (s) : ^(0|[1-9][0-9]?)\\.?[0-9
2063 : failed : failed : 0.998201555 (s) : \"^[0-9]\\\\d+\\\\.?\\\\d{2}\\\\-\\\\
2064 : unparsable : unparsable : 0.091535398 (s) : ([0-9.]+)\\.([0-9.]+)\\-(\\d
2065 : failed : failed : 0.537530947 (s) : DD.MM.YY or DD.MM.YYYY or DD.MM.YYYY or
2066 : unparsable : unparsable : 0.073270686 (s) : \"([0-9]|[1-9][0-9]|[1-
2067 : unparsable : unparsable : 0.097636636 (s) : [0-9]{1,2}[.][0-9]{
2068 : failed : failed : 0.206168877 (s) : [0-9][0-9].[0-9].[0-9] |
2069 : unparsable : unparsable : 0.063332332 (s) : [^0-9]*(?<![0-9])\\/(?<
2070 : unparsable : unparsable : 0.082727358 (s) : r'(?P<day>\\d\\.\\d\\d)\\/(?P
2071 : failed : error init : 0.102853632 (s) : ^
2072 : failed : failed : 2.163412585 (s) : \\
2073 failed : unparsable : 0 (s) : Please check your regex.
2074 : unparsable : unparsable : 0.078440613 (s) : (
2075 failed : unparsable : 0 (s) : Please check your regex.
2076 : failed : failed : 1.119767026 (s) : \"
2077 failed : unparsable : 0 (s) : Please check your regex.
2078 : unparsable : unparsable : 0.063392965 (s) : [
2079 failed : unparsable : 0 (s) : Please check your regex.
2080 : failed : error init : 0.108335071 (s) : ^
2081 failed : unparsable : 0 (s) : Please check your regex.
2082 failed : unparsable : 0 (s) : Please check your regex.
2083 : failed : failed : 2.87344763 (s) : \\
2084 failed : unparsable : 0 (s) : Please check your regex.
2085 : failed : error init : 0.089241569 (s) : ^
2086 : failed : error init : 0.140243405 (s) : ^
2087 : failed : error init : 0.123758571 (s) : ^
2088 : failed : failed : 1.321861534 (s) : \\
2089 failed : unparsable : 0 (s) : Please check your regex.
2090 : failed : failed : 0.178185983 (s) : \\
2091 : unparsable : unparsable : 0.076256789 (s) : [0-9]\
2092 : failed : failed : 0.93822592 (s) : (00)19
2093 : unparsable : unparsable : 0.057026361 (s) : /^(?=
2094 : unparsable : unparsable : 0.120344727 (s) : ([0-9]{1,2
2095 : unparsable : unparsable : 0.055622065 (s) : (
2096 failed : unparsable : 0 (s) : Please check your regex.
2097 : failed : failed : 0.570040395 (s) : (00)
2098 : unparsable : unparsable : 0.066702895 (s) : (.
2099 : unparsable : unparsable : 0.072253224 (s) : \\d{1,
2100 : unparsable : unparsable : 0.072611363 (s) : [^\
2101 : failed : failed : 0.156651075 (s) : ^[0-9]{3}[- ]?[0-9]
2102 : unparsable : unparsable : 0.079273239 (s) : (?<!\\d\\.\\d\\.\\d\\d)(?!\\d\\
2103 : unparsable : unparsable : 0.067189896 (s) : \"555-\\d{3}\\-\\d{3}\\-\\d{4
2104 : unparsable : unparsable : 0.091970522 (s) : ^([0-9]|(1?[0-9])(\\.)
2105 : unparsable : unparsable : 0.091101637 (s) : [0-9]{3}[-.]?[0-9]{3
2106 : unparsable : unparsable : 0.076729654 (s) : /^(([0-9]{3})([0-9]{3
2107 : failed : failed : 0.641280193 (s) : \\d{3}-\\d{3}-\\d{4}
2108 : unparsable : unparsable : 0.079537173 (s) : /^\\(?[1-9][0-9]{3}\\)\\
2109 : failed : failed : 0.139720027 (s) : \\d\\d\\d\\-\\d\\d\\d-\\d\\
2110 : failed : failed : 0.138299942 (s) : ^\\d{3}-\\d{3}-\\d{4}$
2111 : failed : error init : 0.159973218 (s) : (5 digits, 2 letters or digits) OR (4 digits, 1 letter) OR (3 digits, 1 digit, 1 letter) OR (2 digits, 1 letter, 1 digit) OR (2 digits, 2 letters, 1 digit)
2112 : failed : error init : 0.121086735 (s) : (?<!\\d)
2113 : failed : failed : 0.150212517 (s) : r'\\b\\d{4}[A-Z]\\d{2}\\b'\r\"\"\"\rfrom pyre.strings import rx_groups\rfrom pyre.strings import rx_r
2114 : failed : failed : 2.110598159 (s) : \"(?=\\d\\d)(?=\\d[A-Za-z])\"
2115 : failed : failed : 0.701320059 (s) : [\\d]{4}\\D\\d{2}See al
2116 : failed : failed : 20.974577097 (s) : [0-9]{4,4}[A-Z]{2}
2117 : failed : failed : 0.910324699 (s) : \"\\d{4} (\\d{2})\"\"\"\"
2118 : failed : error init : 0.095765578 (s) : ^
2119 : failed : failed : 5.398152741 (s) : (?=\\d{4}[A-Z]{2}|\\d{2}[A-Z]{4})\\d{4}[A-Z]\\d{2}
2120 : failed : failed : 0.216349182 (s) : ^[0-9]{4}[A-Z]{1}[0-9]{3}$
2121 : unparsable : unparsable : 0.102924174 (s) : ([0-9]{2})/([0-
2122 : unparsable : unparsable : 0.053558908 (s) : /(\\d{1,2})/(\\
2123 : unparsable : unparsable : 0.095052275 (s) : /((\\d{2})\\s|\\d
2124 : unparsable : unparsable : 0.087971965 (s) : /^([A-Z]{2}|[
2125 : unparsable : unparsable : 0.077415295 (s) : '^[0-9]{2}[0
2126 : failed : failed : 0.289592547 (s) : /\\b\\d{1,2}/\\
2127 failed : unparsable : 0 (s) : Please check your regex.
2128 : unparsable : unparsable : 0.084515362 (s) : \\d{2}[/-\\d]{
2129 : unparsable : unparsable : 0.073202589 (s) : r'(?P<dd>\\d{2
2130 : unparsable : unparsable : 0.082972026 (s) : (DD\\/MM\\/YYYY | \\d{1
2131 : failed : failed : 0.902648545 (s) : (0-9)0[3-9]/1[012][089]
2132 : unparsable : unparsable : 0.058246924 (s) : \"01/(([0-9]{1,2})\\/([0-9]{2}
2133 : failed : failed : 1.84576514 (s) : \"(0[1-9]|1[012])/([1-9]|1[012])
2134 : unparsable : unparsable : 0.084180476 (s) : [0-9]{2}/([0-9]{2}|[1-9
2135 : failed : failed : 0.110250232 (s) : DD/MM/YY
2136 : failed : failed : 7.599518183 (s) : (DD/MM/YYYY)\\\\s*[\\\\d]{2}|[\\\\d]
2137 : failed : failed : 0.439563371 (s) : D/(\\d+)/g\r\rQuesti
2138 : unparsable : unparsable : 0.066399208 (s) : \"([01]\\d|2[0-3])(\\/([0-3]\\d|
2139 : unparsable : unparsable : 0.094271765 (s) : [0-9]{2}[-/.][0-9]{4}[-/
2140 : unparsable : unparsable : 0.075832636 (s) : \\d{2}[\\d/]\\d{2}[\\d/]\\d{
2141 : failed : failed : 0.957176715 (s) : ^[1-100]$
2142 : failed : failed : 0.155156491 (s) : ^[1-9][0-9]?$
2143 : failed : failed : 0.125625432 (s) : ^[1-9][0-9]?$
2144 : failed : failed : 19.81842636 (s) : The pattern should be [\"1\"-\"9\"]|[\"0\"]
2145 : failed : failed : 18.737080717 (s) : \"(0|[1-9][0-9]*)\"
2146 : failed : failed : 2.568062052 (s) : [0-9]\\d
2147 : failed : pumping failed : 46.954646117 (s) : (0|[1-9][0-9]*)\\.[0-5][0-9]
2148 : failed : failed : 0.5862208 (s) : \"\\d+\"
2149 : failed : failed : 0.955640813 (s) : (\\\\d)(\\\\d)(\\\\d)(\\\\d)
2150 : failed : failed : 4.745071181 (s) : x.{1,3}/[0-9]
2151 : unparsable : unparsable : 0.069300762 (s) : (\\d{
2152 : unparsable : unparsable : 0.108248609 (s) : ^(0?[1-9]|1[0-2])\\/([0-9]+)\\/([0-9]+)\\/([0-9
2153 : unparsable : unparsable : 0.087437556 (s) : ^([0-5][1-9][0-9][0-9
2154 : unparsable : unparsable : 0.095960643 (s) : \"(^(0|[1-9][0-9]|1[01]?[012])[0-9]{
2155 : failed : failed : 0.918955346 (s) : \\d{0,2}/\\d{0,2}/\\d{0,4}/\\d{0,4}
2156 failed : unparsable : 0 (s) : Please check your regex.
2157 : unparsable : unparsable : 0.075928285 (s) : [0-9][0
2158 : unparsable : unparsable : 0.102476436 (s) : \"^(0|[1-9]|1[012])?[0-9]{
2159 : unparsable : unparsable : 0.079821174 (s) : ^[0-9]{1,2}[0-9]{2}[a-zA-Z]{2}(\\.[a-
2160 : unparsable : unparsable : 0.086005418 (s) : ^([0-9]{1,
2161 : failed : failed : 1.937625455 (s) : \\b
2162 : failed : failed : 2.400182171 (s) : \\b(\\w+ | [\\w\\s\\-]\\w+)[a-z]\\b
2163 : failed : failed : 0.254429898 (s) : ^[a-z(a-z)]+[0-9]([0-9]{0,2})$
2164 : failed : failed : 24.844156293 (s) : [A-Z][a-z]*[ -][A-Z][a-z]*
2165 : failed : failed : 1.118361227 (s) : ^[A-Za-z][-A-Za-z0-9]*[A-Za-z]$
2166 : failed : failed : 0.478679923 (s) : /^[A-Z][a-z]+ 
2167 : success : cross : 3.790503905 (s) : (?i)([a-zA-Z0-9-]*[a-zA-Z0-9])*[a-zA-Z0-9]
2168 : failed : failed : 20.945927667 (s) : \\b[A-Z][a-z]+( [A-Z][a-z]+)+\\b
2169 : failed : pumping failed : 163.228995077 (s) : [a-z][a-z0-9][a-z0-9\\-\\s]* [a-z0-9]
2170 : failed : failed : 25.909400779 (s) : \\b([A-Z][a-z]*|[A-Z][a-z]*\\s[A-Z][a-z]*)\\b
2171 : failed : failed : 1.543067117 (s) : (\\d+)/(\\d+)\\-(\\d+)
2172 : failed : failed : 0.490065213 (s) : - \"^(0?[1-9]|1[012])[01]/[0-9]{2,3}/$\"
2173 : failed : failed : 1.677292459 (s) : \\b
2174 : failed : pumping failed : 120.565650737 (s) : [^0-9]+\\/[0-9]+\\/[0-9]+\\.[0-9]+
2175 : failed : failed : 0.243033728 (s) : ^(0?[1-9])\\/(0?[1-9]|[12]\\d)$
2176 : unparsable : unparsable : 0.083421847 (s) : [0-9]{4}[-/ ][0-9]{2}[-/ ][0-9]{2}[-/ ][0-
2177 : unparsable : unparsable : 0.055065064 (s) : (0?)([1-9]|1[012])\\/(19[0-9]|20[0-9]|21[0-2]|22[
2178 : failed : failed : 0.428996453 (s) : ^\\d{4}\\/\\d{2}$
2179 : unparsable : unparsable : 0.094069717 (s) : (MM/YYYY)? (1|2)?????Descripti
2180 failed : unparsable : 0 (s) : Please check your regex.
2181 : unparsable : unparsable : 0.080728962 (s) : (1) \\d{
2182 : failed : failed : 1.231217863 (s) : \"\\\\d{2}-\\\\d{2}\"
2183 : failed : failed : 0.663312711 (s) : [0-9][1-9][0-9]
2184 : unparsable : unparsable : 0.055347532 (s) : \\d{1,2} \\d{
2185 : unparsable : unparsable : 0.07552475 (s) : \\d{1,
2186 failed : unparsable : 0 (s) : Please check your regex.
2187 : unparsable : unparsable : 0.066523299 (s) : \"^[0-9]{1,
2188 : unparsable : unparsable : 0.058942995 (s) : \\d\
2189 : unparsable : unparsable : 0.080811907 (s) : ^(?=.*00)(?=.*59)(?=
2190 : failed : failed : 0.15407077 (s) : ^\\d{2}\\s\\d{2,3}\\
2191 : failed : failed : 0.120414639 (s) : ^([1-9]\\d|[1-9]\\d|0?[1-9])
2192 : unparsable : unparsable : 0.085093793 (s) : \"[a-zA-Z][a-zA-Z0-9]{0,
2193 : unparsable : unparsable : 0.084544947 (s) : \"\\d{1,
2194 : failed : pumping failed : 378.951498877 (s) : \".*?am|.*?pm$\"
2195 : unparsable : unparsable : 0.08731657 (s) : ^(\\d{1,
2196 : unparsable : unparsable : 0.084452494 (s) : \\b([0-9]{1,2
2197 : unparsable : unparsable : 0.090339241 (s) : \\d{1,
2198 : failed : error init : 0.091398483 (s) : ^
2199 : unparsable : unparsable : 0.063443981 (s) : (0?[1-9]|1[0-2
2200 : unparsable : unparsable : 0.063460101 (s) : (\\d{1,2
2201 : unparsable : unparsable : 0.069949405 (s) : ^\\d+[\\d+&quot;]?[\\d+[\\d&quot;]?[\\d+[\\d&quot;]?[\\
2202 : failed : failed : 1.189365395 (s) : (6\\d+)(\\D*&quot;)?
2203 : failed : failed : 47.923162064 (s) : ([0-9]|[1-9][0-9]|[1-9][0-9][0-9])(\\D)?&quot;
2204 : failed : failed : 1.365437505 (s) : (6|5)\\'(\\d|\\d\\d)&quot;
2205 : failed : error init : 0.087600009 (s) : ^
2206 : failed : pumping failed : 58.434909373 (s) : ([0-9]+)([\\s][0-9]*?)
2207 : failed : failed : 1.13359401 (s) : \\d+\\s*
2208 : failed : failed : 1.665456157 (s) : \"(\\d+)'(\\d+)&quot;\"
2209 : failed : failed : 0.510059569 (s) : /^[0-9]*(\\.|&quot;|\")([0-9]*)(\\.|&quot;|\")([0-9]*)(\\\")$
2210 : failed : failed : 8.242739064 (s) : ^\\s*\\d+\\s*[\\s\\W_]+\\s*$
2211 : failed : failed : 0.495260467 (s) : ^[0-9]+(\\.\\d+)?$
2212 : failed : failed : 2.26885106 (s) : (?<positive>\\.?\\d*)(?<negative>\\.?\\d*)
2213 : failed : failed : 4.3568864 (s) : [^\\d\\.]$
2214 : failed : failed : 4.841209676 (s) : \\.[0-9](\\.[0-9]+)+
2215 : failed : failed : 0.212553815 (s) : ^\\d*\\.\\d*$
2216 : failed : failed : 3.917388852 (s) : (?<!\\d)\\.(?!\\d)
2217 : failed : failed : 5.844347632 (s) : [^a-zA-Z\\r\\n\\s.]+
2218 : failed : failed : 0.785740423 (s) : \"\\\\d+(.\\\\d+)?
2219 : failed : failed : 2.928789141 (s) : \\d{1,2}(\\.\\d{1,2})?
2220 : failed : failed : 1.51971918 (s) : \\d+\\.?\\d*
2221 : failed : failed : 69.766707971 (s) : [0-9]{4,9}(123)456-7890
2222 : failed : failed : 8.211884541 (s) : ^([0-9]{1,15})([0-9]{1,4})([0-9]{1,3})([0-9]{3})((10|20))$ Exercise
2223 : failed : failed : 0.161960974 (s) : ^[0-9][0-9]{3}[0-9]$
2224 : failed : failed : 0.9741969 (s) : ^[1-9][0-9]*$
2225 : failed : failed : 7.776565887 (s) : ^(\\+00?\\d{4}|-\\+00?\\d{4}|0|0\\d*\\.)+$
2226 : failed : failed : 0.186431571 (s) : [^0-9]\\d+ The answer to this is [^0-9]\\d+The function will return true for the whole of Example 3.
2227 : unparsable : unparsable : 0.083516555 (s) : /\\B0(?=
2228 : failed : failed : 4.403938261 (s) : (\\d+)
2229 : failed : failed : 0.162513457 (s) : ^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$
2230 : failed : failed : 0.138621723 (s) : ^[1-9]([0-9]{1,3})
2231 : unparsable : unparsable : 0.061376766 (s) : (^\\(\\s*
2232 : unparsable : unparsable : 0.103977713 (s) : ^\\(?(\\d{3})-(\\d{3}
2233 : unparsable : unparsable : 0.072794034 (s) : (\\d{3}-\\d{3}-\\d
2234 : unparsable : unparsable : 0.075226934 (s) : { \"0
2235 : unparsable : unparsable : 0.066896166 (s) : [\\(](\\d{3}|\\(\\d
2236 : unparsable : unparsable : 0.067890896 (s) : ^(?=.*\\d)(?=.*\\d
2237 : failed : error init : 0.100411886 (s) : .*?
2238 : failed : failed : 0.129873255 (s) : \"
2239 : unparsable : unparsable : 0.0692616 (s) : /\\((\\d{3}\\.){3}(\\d{
2240 : failed : failed : 1.314876473 (s) : \\b(555)\\s?\\d{3}\\s?\\
2241 : failed : failed : 9.422490532 (s) : (\\d+\\.\\d+|[-+]?\\d+\\.\\d*|[-+]?\\d+)
2242 : failed : failed : 12.024770988 (s) : ^(\\+|-)?(0\\.\\d*|\\d+\\.\\d+)([eE][+-]?\\d+)$
2243 : failed : failed : 9.718341142 (s) : \\d\\+\\.\\d+
2244 : failed : failed : 0.928996382 (s) : \\d\\.\\d+\\.\\d+
2245 : failed : pumping failed : 225.308716471 (s) : [0-9]*[.][0-9]*
2246 : failed : failed : 0.143261679 (s) : ^[-+]?
2247 failed : unparsable : 0 (s) : Please check your regex.
2248 : failed : failed : 5.221457897 (s) : \"0\\.\\d+|\\d+\\.\\d+|\\d+\"
2249 : failed : failed : 1.351017682 (s) : r\"^[-+]?
2250 : failed : failed : 2.073918253 (s) : [-0-9.]+
2251 failed : unparsable : 0 (s) : Please check your regex.
2252 : failed : failed : 7.247710402 (s) : ^[a-zA-Z0-9]{20,}$
2253 : failed : failed : 1.326410229 (s) : \\d+\\z
2254 : failed : failed : 5.306371343 (s) : ^(.+)$
2255 : failed : failed : 0.51564874 (s) : \\d+.Soluti
2256 : failed : failed : 1.138390339 (s) : (^[^1]*?)([1])$
2257 : failed : failed : 8.996127024 (s) : \"(?<!^)[a-z]+(?!$)\"
2258 : failed : failed : 15.83573428 (s) : \\d[^a]*(\\d|\\d\\d\\d)
2259 : failed : failed : 0.121759473 (s) : ^[a-zA-Z0-9]{2,8}$
2260 : failed : failed : 1.819429876 (s) : .{3,}
2261 : failed : failed : 115.367692261 (s) : [01]+[a-f]{2}[0-9a-f]{3} [A-F0-9]{3}
2262 : failed : failed : 0.401300656 (s) : (\\d{2}[A-Fa-f0-9]{2} )+    Example
2263 : failed : error init : 0.164325826 (s) : ^
2264 failed : unparsable : 0 (s) : Please check your regex.
2265 : failed : failed : 0.168116273 (s) : import reimport random
2266 : failed : failed : 0.231541871 (s) : ^[a-fA-F0-9]\\s*\\d+$
2267 : failed : failed : 93.385948945 (s) : [0-9a-fA-F]{1,6} [0-9a-fA-F]{1,6}
2268 : failed : failed : 0.104833233 (s) : [1-9a-fA-F]+
2269 : unparsable : unparsable : 0.067432459 (s) : r\"\"\"(?P<hex1>\\d+b)?\\s*\\|(?P<hex2>\\d+b)?\\s*\\|(?P<hex3>\\d+
2270 : failed : failed : 0.169706738 (s) : ^[0-5A-Fa-f]{1,6}$
2271 : failed : failed : 7.721633861 (s) : \\b[A-Za-z0-9.@]+[.?!]\\b
2272 : unparsable : unparsable : 0.062540282 (s) : (\\b[a-zA-Z0-9._-
2273 : failed : failed : 0.500500084 (s) : (\\w+\\.smtp\\.[\\w-]+)
2274 : unparsable : unparsable : 0.060904784 (s) : r\"?smtp[a-zA-Z0-9\\-.]+[a-zA-Z0-9]\\.com\"
2275 : failed : pumping failed : 44.015806553 (s) : ([a-zA-Z0-9\\-\\.]*)(\\.smtp)([a-zA-Z0-9\\-\\.]*)Explanati
2276 : failed : failed : 6.752863078 (s) : r'[a-z]+\\.[a-z]+'
2277 : failed : failed : 0.120518883 (s) : ^^smtp$
2278 : failed : failed : 0.383768112 (s) : \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"
2279 : unparsable : unparsable : 0.058823041 (s) : \\b[0-9a-zA-Z\\.\\-+_]+@[0-9a-zA-Z\\.\\-+_]+\\.[0-9a-zA-Z.]+\\
2280 : failed : failed : 87.308155882 (s) : smtp-(.+?)\\.yahoo\\.com
2281 : failed : failed : 0.118887032 (s) : DATE_STA
2282 : unparsable : unparsable : 0.08857368 (s) : \"^d[-_.]d[0-9]{4}\\\\s\\\\s\\\\s\\\\s\\\\s\\\\d{2}\\\\s\\\\d{
2283 : failed : failed : 0.363185326 (s) : \\d{4}(.\\d{2})?[.]\\d{2}(.\\d{2})?
2284 failed : unparsable : 0 (s) : Please check your regex.
2285 : unparsable : unparsable : 0.086604899 (s) : \"(\\d{3}-\\d{2}-\\d{4}|\\d{1,2}-\\d{1,2}-\\
2286 : unparsable : unparsable : 0.090845238 (s) : (\\d\\d\\d/\\d\\d\\d/\\d\\d\\d-\\d\\d\
2287 : failed : failed : 0.123752419 (s) : [^a-zA-Z]
2288 : failed : failed : 1.141504091 (s) : \"
2289 : unparsable : unparsable : 0.075134641 (s) : \\d{4}-\\d{2}-\\d{2} T\\d{
2290 : unparsable : unparsable : 0.047747612 (s) : ([0-9]{4})[-/]([0-9]{2})([0-9]{2})([a-zA
2291 : failed : error init : 0.079661465 (s) : ^
2292 : failed : error init : 0.096198819 (s) : ^
2293 failed : unparsable : 0 (s) : Please check your regex.
2294 : unparsable : unparsable : 0.081372796 (s) : (
2295 : unparsable : unparsable : 0.065747638 (s) : (
2296 failed : unparsable : 0 (s) : Please check your regex.
2297 failed : unparsable : 0 (s) : Please check your regex.
2298 failed : unparsable : 0 (s) : Please check your regex.
2299 : unparsable : unparsable : 0.097419501 (s) : (
2300 : failed : error init : 0.116530625 (s) : ^
2301 : failed : failed : 8.385851024 (s) : ^(?=.*[A-Z])(?=.*\\d)(?=.*[a-z]).{7,}$
2302 : failed : failed : 5.328941275 (s) : ^(?=.*\\d)(?=.*[a-z]).*$
2303 : failed : failed : 2.376788107 (s) : ^(?=.*[a-z])(?=.*\\d)(?=.{6,}).*
2304 : failed : failed : 0.272008597 (s) : \\A\\d{6,10}\\z2. Write a Regular Expression that checks if a string contains only uppercase letters. Answ
2305 : failed : pumping failed : 129.311627454 (s) : ([a-zA-z]+[\\d]+)
2306 : failed : failed : 7.602453581 (s) : ^[a-zA-Z]{6,}[0-9]{1,}$
2307 : failed : failed : 8.002663117 (s) : ^[a-zA-Z][a-zA-Z0-9_]{6,}$
2308 : failed : failed : 4.338348246 (s) : [a-zA-Z0-9][a-zA-Z0-9]*
2309 : failed : failed : 7.19662007 (s) : ^(?=.*[a-z])(?=.*[0-9])(?=.*[a-zA-Z]).{6,}$```pythonimport re
2310 : failed : failed : 0.844111149 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{6,}$
2311 failed : unparsable : 0 (s) : Please check your regex.
2312 : unparsable : unparsable : 0.084702411 (s) : (?<month>\\d\\
2313 : unparsable : unparsable : 0.082104464 (s) : \"(0\\d|[1-
2314 : failed : failed : 0.944444718 (s) : \\d{1,2}\\.\\
2315 : unparsable : unparsable : 0.103558279 (s) : \\d{1,2}\\d{
2316 : unparsable : unparsable : 0.09138638 (s) : \\A[1-9][
2317 : failed : failed : 0.252828984 (s) : \\d\\d\\.\\d\\d
2318 : unparsable : unparsable : 0.056251903 (s) : (0[1-9])[
2319 : unparsable : unparsable : 0.069159668 (s) : [0-9]{1,2
2320 : unparsable : unparsable : 0.057956861 (s) : /[0-9]{1,
2321 : failed : failed : 1.017096536 (s) : \\*/\\s*
2322 : unparsable : unparsable : 0.067442428 (s) : {|s| s[/\\r?\\n?\\r?\\n?(?<![^>]*>)/]};
2323 : failed : failed : 2.315297228 (s) : /[^\\s/]*
2324 : failed : failed : 0.371031476 (s) : c++|java|(.*)|(.*)sometext|(.*)*/
2325 : failed : failed : 54.240473502 (s) : [^\\s/*/*]+
2326 : failed : failed : 0.620949167 (s) : ^\\/[^\\n\\r]*\\n([^\\n\\r]|$)
2327 : failed : failed : 2.753957911 (s) : [^\\r\\n\\s]+
2328 : failed : failed : 3.118798051 (s) : /^
2329 : failed : failed : 1.817633357 (s) : \"^(\\/[\\s\\S]+)*$\"Example//this is some text//this is some more text//this is even more textAnd here
2330 : failed : failed : 9.39086645 (s) : ^[^/*]*\\s*$
2331 : failed : failed : 0.148979221 (s) : Matches a.txt file extension.Match exampl
2332 : failed : failed : 0.356082965 (s) : Matches a.txt file extension.Match exampl
2333 : failed : failed : 0.398909525 (s) : Matches a.txt file extension.Match exampl
2334 : failed : failed : 0.263194407 (s) : Matches a.txt file extension.Match exampl
2335 : failed : failed : 0.237486566 (s) : Matches a.txt file extension.Match exampl
2336 : failed : failed : 0.419232785 (s) : Matches a.txt file extension.Match exampl
2337 : failed : failed : 0.389420501 (s) : Matches a.txt file extension.Match exampl
2338 : failed : failed : 0.272338183 (s) : Matches a.txt file extension.Match exampl
2339 : failed : failed : 0.363417339 (s) : Matches a.txt file extension.Match exampl
2340 : failed : failed : 0.177962214 (s) : Matches a.txt file extension.Match exampl
2341 failed : unparsable : 0 (s) : Please check your regex.
2342 : failed : failed : 0.501926412 (s) : /[CZ]\\d\\d\\d\\d\\d\\d\\d\\d[-]
2343 : failed : failed : 0.197099688 (s) : ^(FRA|CZ|ESA)\\\\d{12}$
2344 : failed : failed : 0.130626022 (s) : ^[A-Z0-9]{2}\\-?[0-9]{4}\\s?
2345 : failed : failed : 0.253994173 (s) : r'^(CZ-)?[0-9]{19}$'
2346 : failed : failed : 0.185740759 (s) : ^[CF]\\d{3}[A-Z]{2}$
2347 : failed : failed : 3.533741686 (s) : \"(?<!\\d)(?<![A-Z][a-z])[A-Z]
2348 : unparsable : unparsable : 0.079788864 (s) : ^[0-9A-Z]{3}\\-([0-9A-Z]{3}
2349 : unparsable : unparsable : 0.095155577 (s) : ^(CZ)|(FRA)|(ESA)\\/[0-9]{9}\\-[
2350 : failed : pumping failed : 30.693361678 (s) : [a-z]*-?[0-9]{7}[a-z]*
2351 : failed : failed : 2.404565466 (s) : r
2352 : failed : error init : 0.139528278 (s) : ^
2353 : unparsable : unparsable : 0.050799006 (s) : (
2354 : unparsable : unparsable : 0.051520677 (s) : [
2355 : failed : failed : 1.537147298 (s) : /
2356 : unparsable : unparsable : 0.075448288 (s) : [
2357 : failed : failed : 2.898582569 (s) : 0
2358 : failed : failed : 2.305215897 (s) : \\
2359 : unparsable : unparsable : 0.085764969 (s) : (
2360 : unparsable : unparsable : 0.093559924 (s) : [
2361 failed : unparsable : 0 (s) : Please check your regex.
2362 : unparsable : unparsable : 0.113036352 (s) : (
2363 : unparsable : unparsable : 0.108352584 (s) : (
2364 : unparsable : unparsable : 0.121619512 (s) : [
2365 failed : unparsable : 0 (s) : Please check your regex.
2366 : failed : failed : 0.154996802 (s) : y
2367 : failed : failed : 0.16662196 (s) : \\
2368 failed : unparsable : 0 (s) : Please check your regex.
2369 : failed : failed : 0.247834175 (s) : %
2370 : unparsable : unparsable : 0.097720754 (s) : (
2371 : failed : failed : 13.852248071 (s) : 0(0|1|2|3|4|5|6|7|8|9)(\\.|\\,|\\,|\\,|\\,)
2372 : failed : failed : 47.344737973 (s) : ([0-9]{1,5}|[1-9][0-9]{1,2})\\.
2373 : failed : failed : 1.718158213 (s) : (?i)\\d{1,5}\\.\\d{1,2}(?!\\d)
2374 failed : unparsable : 0 (s) : Please check your regex.
2375 : failed : failed : 0.210225552 (s) : The regex that should be used is ^[0-9]{0,5}
2376 : failed : failed : 24.773761685 (s) : \\D{0,1}(?!\\.)\\d{0,5}(?=\\.)
2377 : failed : failed : 0.764068941 (s) : \\S\\d{0,4}\\.\\S{0,2}
2378 : failed : failed : 0.568874074 (s) : (^[\\d]+([.][\\d]{0,1})?)([\\s]+)
2379 : failed : failed : 0.144501447 (s) : ^[0-9]+
2380 : failed : failed : 0.261588333 (s) : ^\\d{1,5}\\.?\\d{1,2}$
2381 : failed : error init : 0.094936858 (s) : ^
2382 : failed : failed : 0.45899224 (s) : $1[a-zA-Z]
2383 : failed : failed : 25.05650805 (s) : (^|[^0-9])\\
2384 failed : unparsable : 0 (s) : Please check your regex.
2385 : unparsable : unparsable : 0.087038029 (s) : $1\\\\., \\\\d+, \\\\d{
2386 : unparsable : unparsable : 0.100506183 (s) : ^([+-]?\\d{1
2387 : failed : failed : 2.005572928 (s) : ^(?!^\\$).*\\
2388 : unparsable : unparsable : 0.090567197 (s) : $1[1-9]\\d*(
2389 : unparsable : unparsable : 0.076340696 (s) : [0-9]{1,3}(
2390 : failed : failed : 0.122810408 (s) : ^\\$\\d+
2391 : failed : failed : 0.80537131 (s) : \"^[^\\W\\d_\\-]{0,32}\\Z\"
2392 : failed : failed : 0.672689093 (s) : [a-zA-z0-9.,-_]{1,63}
2393 : unparsable : unparsable : 0.059174778 (s) : [^a-zA-Z\\s]*([a-zA-Z0-9]
2394 : failed : failed : 0.604766117 (s) : \"^[A-Za-z0-9_.\\\\-]+$\"
2395 : failed : failed : 0.962011034 (s) : ^[a-zA-Z0-9-_]+.txt$
2396 : failed : failed : 7.643968518 (s) : ^[a-zA-Z0-9_-]+$
2397 : failed : failed : 0.921467855 (s) : \"^[a-zA-Z0-9._%&+\\-]+$\"
2398 : failed : failed : 0.527818726 (s) : \"^[a-zA-Z0-9\\-\\.]*$\"
2399 : failed : pumping failed : 85.53152777 (s) : g|u|t|(.+)?\\.dfa|t3e(.+)?fs
2400 : unparsable : unparsable : 0.098136701 (s) : \"^[a-zA-Z0-9\\\\-]+\\\\.(txt|dfa|fsd
2401 : failed : failed : 0.32070872 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2402 : failed : failed : 0.299663388 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2403 : failed : failed : 0.270329719 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2404 : failed : failed : 0.5164992 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2405 : failed : failed : 0.311779364 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2406 : failed : failed : 0.255505479 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2407 : failed : failed : 0.231234395 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2408 : failed : failed : 0.375272747 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2409 : failed : failed : 0.415752989 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2410 : failed : failed : 0.364730184 (s) : simply checks to see if the first charactor is a. (dot)Match exampl
2411 : failed : pumping failed : 215.684220587 (s) : [0-9]*[0-9]+[.][0-9]*
2412 : failed : failed : 18.352392985 (s) : r\"[^\\s]+\"
2413 : failed : failed : 0.42018652 (s) : r'^(\\d+\\.?\\d*)\\s*
2414 : failed : failed : 0.27061439 (s) : ^\\\\d+\\\\.\\\\d+'\\\\d+\\\"'\\\\d+$
2415 : failed : failed : 2.158990717 (s) : \\d+(\\.\\d+)?
2416 : unparsable : unparsable : 0.085107399 (s) : (\\d+)(\\
2417 : failed : failed : 0.159390468 (s) : \\d+\\s*feet\\s*\\s*and\\s*\\s*
2418 : unparsable : unparsable : 0.056488726 (s) : (?<!\\d).*\\d* (?=\\s*\\&quot
2419 : failed : failed : 0.74663443 (s) : \\d+\\.?
2420 : unparsable : unparsable : 0.076053379 (s) : \\b5'(\\d+\\.\\d+|\\d+)(\\s\\&qu
2421 : failed : failed : 0.464914865 (s) : \"^[A-Z0-9]{3}[-\\.]?
2422 : failed : failed : 0.904263454 (s) : \"^[a-z]+$\"
2423 : unparsable : unparsable : 0.073899371 (s) : (You can get this from the link)^[a-z]{2
2424 : unparsable : unparsable : 0.088554475 (s) : /(?<![0-9])[0-9]{7
2425 : failed : failed : 1.012034852 (s) : \"LO\\-(\\d+)-(\\d+)-\\d+-\\d
2426 : failed : failed : 0.745626867 (s) : \\d{8}
2427 : unparsable : unparsable : 0.090505022 (s) : ^[a-zA-Z0-9][A-Z0-9
2428 : unparsable : unparsable : 0.078714875 (s) : \\d{7}-[a-zA-Z]{2}-[0
2429 : unparsable : unparsable : 0.101097628 (s) : [0-9]{9}-[0-9]{3}-[0
2430 : failed : failed : 0.846950217 (s) : (\\d{2})-(\\d{3})\\.\\d{4}
2431 : failed : error init : 0.109327587 (s) : ^
2432 : failed : failed : 2.111380643 (s) : \\
2433 failed : unparsable : 0 (s) : Please check your regex.
2434 : failed : failed : 0.117747571 (s) : https
2435 failed : unparsable : 0 (s) : Please check your regex.
2436 : failed : failed : 2.210810131 (s) : /
2437 : failed : error init : 0.10970865 (s) : ^
2438 : failed : failed : 0.160270604 (s) : \"
2439 failed : unparsable : 0 (s) : Please check your regex.
2440 : failed : failed : 0.271418404 (s) : /
2441 : failed : failed : 204.974005151 (s) : [0-9]{1,3}[0-9]{3}[0-9]{1,3}(,[0-9]{3})?\"
2442 : failed : failed : 0.1526155 (s) : 0-9 digits.
2443 : failed : failed : 1.828864678 (s) : \\b([1-9][0-9]*|[1-9][0-9]{0,2}\\s[0-9]{3})
2444 : failed : failed : 0.71466397 (s) : [0-9]{1}[0-9, ]{1,40}
2445 : failed : pumping failed : 68.235379462 (s) : [0-9]+\"\"\"
2446 : failed : failed : 0.158876878 (s) : ^\\d+$
2447 : failed : failed : 0.745289516 (s) : (?!(\\d+))\\d+, 
2448 : failed : failed : 0.16022583 (s) : ([1-9][0-9]*)
2449 : failed : failed : 0.529494079 (s) : (included)
2450 : failed : failed : 1.288171548 (s) : \\d{1,3}[,]?\\d{3,}$
2451 : failed : failed : 0.188702257 (s) : \"^\\d{5}([-\\d]{2})?$\"Note that the {4} is redundant since it's not part of the regular expression. You may also omit
2452 : failed : failed : 1.344575986 (s) : (?<zip>\\d{5})(-(?<cities>\\d{4}))
2453 : failed : failed : 0.213721218 (s) : ^\\d{5}\\-(\\d{4})-(\\d{2})$
2454 : failed : failed : 30.597801464 (s) : [0-9]{5}-[0-9]{4}
2455 : failed : failed : 3.803247674 (s) : (?<!\\d)-?\\d+-?\\d+
2456 : failed : failed : 0.70779672 (s) : \"([0-9]{8})-([0-9]{4})(-)([0-9])\"
2457 : failed : failed : 2.496460567 (s) : (?<![0-9])[0-9-]{4}[0-9]
2458 : failed : failed : 0.193890468 (s) : $zip =~ m/^(\\d{5})(-\\d{2})?$/m
2459 : failed : failed : 86.737045998 (s) : [a-z0-9]{6}[0-9]{4}-
2460 : failed : failed : 0.750108217 (s) : '^[0-9]{4}-?[0-9]{4}$';
2461 : failed : failed : 1.538149682 (s) : (1) [0-9]{1,2}[0-9]{1,3}[0-9]{1,4}[0-9]{1,5}
2462 : failed : pumping failed : 262.712828331 (s) : (.*[1-9][0-9]|999).*
2463 : failed : failed : 1.054104286 (s) : \\d{1,3}
2464 : failed : failed : 2.223267735 (s) : ([1-9][0-9]|0)*
2465 : failed : failed : 1.397269366 (s) : \\d{1,3}
2466 failed : unparsable : 0 (s) : Please check your regex.
2467 : failed : failed : 3.606025777 (s) : ^[1-9]+0$
2468 : failed : failed : 15.503644399 (s) : (?<!\\d)(-?[1-9][0-9]?|0)+
2469 : failed : failed : 0.146627542 (s) : ^\\d{1,3}
2470 : failed : failed : 3.525299661 (s) : (?<![0-9])1(?![0-9])
2471 : unparsable : unparsable : 0.076897417 (s) : [0-9]{2}\\.\\d{2}[A-Z]{1,
2472 : failed : failed : 2.581289666 (s) : r\"
2473 : unparsable : unparsable : 0.088519539 (s) : \\b\\d{1,2}\\.\\d{1,2}\\.\\d{4
2474 : failed : failed : 0.176155886 (s) : .(?!\\.\\d{3}$)
2475 : unparsable : unparsable : 0.106023169 (s) : r'(^[1-9]\\d?|1[0-2]\\d|
2476 : unparsable : unparsable : 0.111320553 (s) : (^(0\\.)?[1-9]\\d*\\.[1-9]\\
2477 : unparsable : unparsable : 0.063777245 (s) : ^(4[0-9]|1[012])[./-](0[1-
2478 : unparsable : unparsable : 0.094499922 (s) : \"^\\d{1,2}\\.\\d{1,2}\\.\\d{4
2479 : failed : failed : 0.280516877 (s) : ^\\d{2}\\.\\d{2}(\\/\\d{4}\\.)?
2480 : unparsable : unparsable : 0.072341759 (s) : ^(0[1-9]|[12][0-9]|3[01])[
2481 : unparsable : unparsable : 0.058507761 (s) : ^(?<prefix>[A-Za
2482 : unparsable : unparsable : 0.089607443 (s) : (Note that the last regex is a non-match
2483 : unparsable : unparsable : 0.081870406 (s) : ^(([A-Z]{3})|
2484 : unparsable : unparsable : 0.069205424 (s) : \\S{3,4}-\\S{
2485 : failed : failed : 1.727343207 (s) : \\b
2486 : unparsable : unparsable : 0.068135904 (s) : [a-z]+-?[0-9
2487 : unparsable : unparsable : 0.08612437 (s) : [a-zA-Z0-9\\-
2488 : unparsable : unparsable : 0.070745945 (s) : (?(?=\\\\d{3})[
2489 : unparsable : unparsable : 0.081227253 (s) : [lozg-][a-zA-
2490 : unparsable : unparsable : 0.067914861 (s) : .(?=(.*?[A-Z]
2491 : failed : failed : 1.036505619 (s) : (\\d+)Descripti
2492 : failed : failed : 0.213492441 (s) : ^[-]?1?$
2493 : failed : failed : 1.070324044 (s) : \\b(?=([\\d]|-){0,2})
2494 : failed : failed : 1.069804863 (s) : r\"[-12-9]\\d?
2495 : failed : failed : 0.206355376 (s) : [\\d]{1,3}
2496 : failed : failed : 0.783442016 (s) : (\\d)
2497 : failed : failed : 0.18199804 (s) : ^-?(-?[1-9][0-9]|0)?$
2498 : failed : failed : 18.133600324 (s) : [1-9]?[0-9]|0
2499 : failed : failed : 0.115221037 (s) : -?
2500 : unparsable : unparsable : 0.081592076 (s) : - (0,1]|(0,9]|1[0-8]|[1-9]) - (0,1
2501 : failed : failed : 0.17021599 (s) : ^\\d{2}\\s[a-z]{3}\\s\\d{4}$
2502 : failed : failed : 0.924988918 (s) : (\\d{2})/(\\d{2})/(\\d{4})
2503 : failed : failed : 0.137618898 (s) : ^[1-9]\\d/[1-9]\\d/\\d{4}$
2504 : failed : failed : 0.183601028 (s) : ^\\d{1,2}/\\d{1,2}/\\d{4}$
2505 : failed : failed : 2.7712368 (s) : /
2506 : unparsable : unparsable : 0.078340906 (s) : '^[1-2][0-9][0-9][0-9][0-9][0-9]/[1-2][0-9][0-9][0
2507 : failed : failed : 0.236897345 (s) : ^(\\\\d{2}|\\\\d{2})/(\\\\d{4})/(\\\\d{4})$
2508 : failed : failed : 4.488330893 (s) : ([0-9]{2})\\/([0-9]{2})\\/([0-9]{4})
2509 : failed : failed : 26.576993082 (s) : [0-9]{3}[./](0[1-9]|[12][0-9]|3[01])[0-9]{4}\"\"\"
2510 : failed : failed : 0.176766639 (s) : (^\\d{2}\\/\\d{2}\\/\\d{4})
2511 : failed : failed : 296.018213203 (s) : /[^\\\\/]*?[\\\\/] +|[^\\\\/]*?[\\\\/]
2512 : failed : failed : 4.358003289 (s) : /\\/\\*\\n*\\/\\*\\n*/ //\\w+
2513 : failed : failed : 0.57863162 (s) : #\\s+\\/\\*\\/\\*\\n+\\/\\*\\n+\\/.*
2514 : failed : failed : 24.568412 (s) : ^//.*\\n.*$
2515 : failed : failed : 1.269559847 (s) : /\\*(.*)*
2516 : failed : failed : 0.267350407 (s) : /^\\s*(/*(?!\\*/)|\\*/\\s*)/$/.
2517 : failed : failed : 1.294394014 (s) : \\*
2518 : failed : failed : 0.851646718 (s) : */[\\n\\s]*?\\n*
2519 : failed : failed : 1.517589818 (s) : \\* /\\n *\\n *\\
2520 : unparsable : unparsable : 0.081501046 (s) : \\*([^\\*]|(?R))+
2521 : failed : failed : 72.878678714 (s) : [0-9]{2}.[0-9]{2}.[0-9]{4}( [0-9]{4})
2522 : failed : failed : 3.754868563 (s) : \\d{1,2}\\.\\d{1,2}\\.\\d{4}
2523 : failed : error init : 0.150691642 (s) : ^
2524 : failed : failed : 0.477624029 (s) : ^[0-9]{1,2}\\.[0-9]{2}.[0-9]{2}$
2525 : failed : failed : 17.093700148 (s) : [0-9]{2}[\\.][0-9]{2}[\\.][0-4][0-9]{2}
2526 : failed : failed : 115.256618569 (s) : [A-Za-z]{3,4}(\\.[A-Z]?[A-Z]?)?[0-9]
2527 : failed : failed : 0.612936845 (s) : ^[0-9]{1,2}\\.[0-9]{3}[0-9]{4}$
2528 : failed : failed : 2.640604447 (s) : /^
2529 : failed : failed : 28.755234635 (s) : [^-\\d\\.](4\\d\\d\\.)?\\d(1\\d\\d)?
2530 : failed : failed : 0.981157827 (s) : \\b\\d{2}\\.\\d{2}\\.\\d{4}\\b
2531 : failed : failed : 0.144334665 (s) : # The Reg
2532 : unparsable : unparsable : 0.06628884 (s) : ([0-9
2533 : unparsable : unparsable : 0.084921241 (s) : ^\\d{
2534 : unparsable : unparsable : 0.064113694 (s) : ^[0-
2535 : unparsable : unparsable : 0.061771824 (s) : ^[0-
2536 : unparsable : unparsable : 0.099297893 (s) : [^0-
2537 : unparsable : unparsable : 0.071309438 (s) : [
2538 : unparsable : unparsable : 0.082705147 (s) : [00-9
2539 : unparsable : unparsable : 0.081521564 (s) : (^[0
2540 : unparsable : unparsable : 0.087239255 (s) : \\b0[
2541 : unparsable : unparsable : 0.078919899 (s) : (00[0-9]|[1-9][0-9]|[1-9])(-
2542 : unparsable : unparsable : 0.052712165 (s) : ^\\((\\d{3})\\)\\s(\\d{3})\\s(\\d{4}$
2543 : failed : failed : 2.588381176 (s) : \\(\\d{3}\\)$
2544 : failed : failed : 0.208212939 (s) : ^\\(\\d{2}\\)\\s\\d{3}\\s\\d{4}$
2545 : unparsable : unparsable : 0.070676765 (s) : (?<=\\()[0-9]{3}[0-9]{3}[0-
2546 : unparsable : unparsable : 0.101862298 (s) : ^([0-9][0-9])[ ]*(|-|\\+|\\-)[ ]*([0
2547 : unparsable : unparsable : 0.058570999 (s) : r'^\\(0[1-9]|1[3-9]|2[0-8]|
2548 : failed : failed : 0.872742425 (s) : [0-9]{7}[0-9]{2}[0-9]{3}
2549 : failed : failed : 0.16366493 (s) : ^(\\(0\\)?[1-9]\\d{9})$
2550 : failed : failed : 0.291727278 (s) : r\"^\\(\\d{2}\\)-\\d{3}-\\d{4}$\"
2551 : failed : failed : 3.884908118 (s) : [01]?[ ]?[0-9][.]?[0-9] [.]?[0-9] [.]?[0-9] [.]
2552 : failed : failed : 1.190634638 (s) : [0-9]\\.[0-9]\\.[0-9]\\.[0-9]
2553 : failed : failed : 2.628790105 (s) : \\b
2554 : failed : failed : 1.529207331 (s) : [0-9]\\.[0-9]+
2555 : failed : failed : 10.807001953 (s) : .0[0-9]|1[0-9]|2[0-9]
2556 : failed : failed : 0.131276929 (s) : [^a-zA-Z0-9\\s]
2557 : failed : failed : 0.247860754 (s) : (^\\d*\\.\\d+$|^\\d+$)Generate a RegEx for this description. Answ
2558 : failed : failed : 8.581015063 (s) : [0-9]\\.[0-9]|[0-9]The reason I wanted to ask about this is because I am working with strings before I try to
2559 : failed : failed : 0.537557165 (s) : \"^[0-9]{1,4}\\.?[0-9]{1,4}$\"
2560 : failed : error init : 0.126782686 (s) : ^
2561 : failed : failed : 5.495660527 (s) : ^[a-zA-Z0-9_]+$
2562 : unparsable : unparsable : 0.079805465 (s) : \"(?i)^[a-zA-Z0-9_]+(?<!=)[a-zA
2563 : failed : failed : 3.424538903 (s) : ^[a-zA-Z_]+$
2564 : failed : failed : 2.040547364 (s) : ^[a-zA-Z_0-9]*$
2565 : failed : pumping failed : 114.501537344 (s) : [a-zA-Z0-9_][a-zA-Z0-9_]*\"\"\"
2566 : failed : failed : 0.147549737 (s) : ^[a-zA-Z0-9_]*$ 2. Find all matches of a Regex
2567 : failed : pumping failed : 108.561798494 (s) : [a-zA-Z0-9_]*[a-zA-Z0-9]\"\"\"
2568 : failed : failed : 0.55073196 (s) : \"myvariable|int|Blah_|Blah-\"
2569 : failed : failed : 0.175943529 (s) : ^[A-Za-z]\\w*$
2570 : failed : failed : 3.408326027 (s) : ^([a-zA-Z_][a-zA-Z0-9_]*)$
2571 : failed : failed : 1.846880886 (s) : \\
2572 failed : unparsable : 0 (s) : Please check your regex.
2573 : unparsable : unparsable : 0.077865127 (s) : (
2574 : failed : error init : 0.10633445 (s) : ^
2575 : failed : failed : 0.152790286 (s) : \\
2576 : failed : error init : 0.139970194 (s) : ^
2577 : failed : failed : 1.769349613 (s) : \\
2578 failed : unparsable : 0 (s) : Please check your regex.
2579 : failed : failed : 0.167423578 (s) : r
2580 : unparsable : unparsable : 0.049133072 (s) : (
2581 : failed : failed : 0.180718828 (s) : ^[a-f0-9]{6}$
2582 : failed : failed : 0.269084259 (s) : \\d{1,3} - Match at least 1 and at most 3 digits
2583 : failed : failed : 0.112710843 (s) : ^[0-9A-Fa-f]{3}
2584 : failed : failed : 0.125988 (s) : ^[0-9a-fA-F]{1,10}$
2585 : failed : failed : 0.171266073 (s) : ^[0-9]{6}$
2586 : unparsable : unparsable : 0.056275737 (s) : /(^[a-fA-F0-9]{1,4}$|^[a-fA-F0-9]{1,2}[0-9a-fA-F]{1,3}$|^[a
2587 : failed : failed : 0.123908341 (s) : ^[0-9A-Fa-f]{3}$
2588 : failed : failed : 0.227867981 (s) : ^[0-9A-Fa-f]{1,40}$
2589 : failed : failed : 0.142854387 (s) : ^1[0-9a-fA-F]{6}$
2590 : failed : failed : 0.196037272 (s) : .{1,10}
2591 : failed : failed : 0.200963494 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2592 : failed : failed : 0.164999054 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2593 : failed : failed : 0.28565764 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2594 : failed : failed : 0.196037573 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2595 : failed : failed : 0.253204797 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2596 : failed : failed : 0.218766702 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2597 : failed : failed : 0.264972731 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2598 : failed : failed : 0.194020962 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2599 : failed : failed : 0.217140502 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2600 : failed : failed : 0.203176922 (s) : THE Complex Password Filter Matching 3 of 4 Character catagori
2601 : failed : failed : 2.93442054 (s) : \"\\
2602 : unparsable : unparsable : 0.064723043 (s) : (
2603 failed : unparsable : 0 (s) : Please check your regex.
2604 : unparsable : unparsable : 0.077871719 (s) : (
2605 : failed : failed : 1.992866649 (s) : \\
2606 failed : unparsable : 0 (s) : Please check your regex.
2607 : failed : failed : 1.930427025 (s) : \\
2608 failed : unparsable : 0 (s) : Please check your regex.
2609 : unparsable : unparsable : 0.079888901 (s) : (
2610 : unparsable : unparsable : 0.058998128 (s) : [
2611 : failed : failed : 0.71814536 (s) : ^[a-z\\s]{4,32}$
2612 : unparsable : unparsable : 0.088789754 (s) : /^[A-Za-z0-9]{1,32}\\s[A-
2613 : unparsable : unparsable : 0.075194293 (s) : (\\w[a-z]\\w\\w[a-z]\\w\\w[
2614 : unparsable : unparsable : 0.065310141 (s) : ([a-zA-Z]+\\s*)([a-zA-Z]+\\s
2615 : failed : failed : 0.229240176 (s) : ^[a-z][a-zA-Z\\s]{0,30}$
2616 : failed : failed : 0.362440001 (s) : ^[a-zA-Z]{4,32}$
2617 : failed : failed : 249.763680569 (s) : [A-Za-z\\s]{4,32}\\b
2618 : unparsable : unparsable : 0.09816791 (s) : (any alphabet(s) (or any number), &amp;  (optional) (any
2619 : failed : failed : 3.045697854 (s) : ^[a-zA-Z0-9 ]+$
2620 : failed : failed : 0.444663238 (s) : r'^[A-Za-z]{4,32}$'
2621 : unparsable : unparsable : 0.072535641 (s) : \"(
2622 failed : unparsable : 0 (s) : Please check your regex.
2623 : failed : error init : 0.094502386 (s) : ^
2624 : failed : failed : 1.934267416 (s) : \\
2625 : unparsable : unparsable : 0.072349693 (s) : [
2626 : unparsable : unparsable : 0.061417181 (s) : (
2627 : failed : failed : 0.142964864 (s) : \\
2628 failed : unparsable : 0 (s) : Please check your regex.
2629 : failed : failed : 0.56829452 (s) : \\
2630 : failed : failed : 0.548390582 (s) : RFC
2631 : failed : failed : 0.123586189 (s) : ^.{3}$
2632 : failed : failed : 0.410143721 (s) : r\"^\\d{3}\\d{3}\\d{3}$\"
2633 : failed : failed : 1.120644797 (s) : \\d{3,4}
2634 : failed : failed : 0.783446985 (s) : \\d{3,4}
2635 : failed : failed : 2.392890086 (s) : (\\d{3}|\\d{4})
2636 : failed : failed : 0.173102066 (s) : ^(?=.{3,4}$).*
2637 : failed : failed : 1.094312259 (s) : \\d{3,4}
2638 : failed : failed : 6.185216288 (s) : (?<!\\d)\\d{3,4}
2639 : failed : failed : 0.843425346 (s) : [\\d]{4,}
2640 : failed : failed : 40.774705272 (s) : ([0-9])(\\d{1,3}(\\d{3}))|([0-9])(\\d{3})(\\d{3})|([0-9])(\\d{3})(\\d{3})
2641 : unparsable : unparsable : 0.072027862 (s) : (?=.{2,20})(?=[A-Za-z ])(^[A-Za-z]+$
2642 : failed : failed : 0.904914342 (s) : (\\w+) (\\w+)\\s+([\\w\\s\\d]+)
2643 : unparsable : unparsable : 0.060542295 (s) : [a-zA-Z ]+(
2644 : unparsable : unparsable : 0.090006038 (s) : ^[a-zA-Z]+[a-zA-Z ]+[a-zA-Za-z
2645 : failed : failed : 0.167330474 (s) : ^[a-zA-Z]{1,15}$
2646 : failed : failed : 0.198616224 (s) : ^[A-Za-z\\s]{1,20}$
2647 : failed : failed : 4.845984564 (s) : ^([A-Za-z]{2,})$
2648 : failed : failed : 94.781468018 (s) : [A-Z][a-z]+( [A-Z][a-z]+)+ [A-Z][a-z]+
2649 : failed : failed : 0.159723871 (s) : ^[a-zA-Z ]+$
2650 : unparsable : unparsable : 0.08474993 (s) : \\b(\\w{2,}|[A-Z]\\w*|[A-Z]\\w*\\s+\\w
2651 : unparsable : unparsable : 0.089821664 (s) : [
2652 : unparsable : unparsable : 0.070729354 (s) : +9
2653 : unparsable : unparsable : 0.073275515 (s) : (9
2654 : unparsable : unparsable : 0.07678635 (s) : (06
2655 : unparsable : unparsable : 0.05944835 (s) : (\\
2656 failed : unparsable : 0 (s) : Please check your regex.
2657 : unparsable : unparsable : 0.06709574 (s) : \"(?
2658 : unparsable : unparsable : 0.066698547 (s) : [0
2659 : unparsable : unparsable : 0.059490759 (s) : (re
2660 : failed : failed : 2.64674626 (s) : r'
2661 : unparsable : unparsable : 0.072051516 (s) : ^[1-2]?[0-
2662 : unparsable : unparsable : 0.066744854 (s) : \" [1-2][0-
2663 : unparsable : unparsable : 0.057040598 (s) : ^[0-9]*([01][0-9]|2[0-3
2664 : unparsable : unparsable : 0.070382325 (s) : \"^([0-9]{1,2
2665 : failed : failed : 2.69020926 (s) : /^[0-1][0-9]|[01][0-9]|2[0-3]$
2666 : unparsable : unparsable : 0.07249239 (s) : (?<hour>\\d{1,2}\\s?)?(?<minute>\\d{2
2667 : unparsable : unparsable : 0.101352014 (s) : ^(
2668 : unparsable : unparsable : 0.071507418 (s) : /^([1-9]|1[0-2]|2[0-3
2669 : failed : failed : 23.224684439 (s) : [0-9]{1,2}\\s[a-z]{2}\\b
2670 : unparsable : unparsable : 0.079537524 (s) : [^\\d\\s]\\d[^\\d\\s]?[\\d\\s]|[
2671 : failed : failed : 2.695381251 (s) : (?<!\\d)(\\d{5})(?!-)
2672 : failed : failed : 0.154025596 (s) : ^[\\d\\s]{4}
2673 : failed : failed : 2.887226745 (s) : \\b
2674 : failed : failed : 0.860130583 (s) : /^[0-9]{4}-[0-9]{4}[0-9]{4}
2675 : failed : failed : 1.224724752 (s) : (?<!\\S)(?=[^-\\s]{5})
2676 : unparsable : unparsable : 0.100203927 (s) : \\b([0-9]{5})([ \\-]|[0-9]{4}\\-(?
2677 : failed : failed : 7.601529613 (s) : \\d[A-Z]{2}\\d[A-Z]{3}\\d[A-Z]$
2678 : failed : failed : 0.228075689 (s) : ^(\\d{5})[ -](\\d{4})$
2679 : failed : failed : 0.709129642 (s) : \\b\\d{5}[\\s-]\\d{4}\\b
2680 : failed : failed : 0.810064947 (s) : ^(\\d{5})(\\s|-)$
2681 : failed : failed : 0.79475032 (s) : \\d{4}-\\d{3}$
2682 : failed : failed : 0.208531915 (s) : ^([0-9]{5})-?([0-9]{4})$
2683 : failed : failed : 0.720987916 (s) : (\\d{5}\\s\\d{4})
2684 : failed : failed : 1.331361648 (s) : \\b[0-9]{5}[- ]?[0-9]{4}\\b
2685 : failed : failed : 0.274568555 (s) : r'^\\d{4}\\s\\d{3}$'
2686 : failed : failed : 0.212156733 (s) : ^\\d{5}\\s\\d{4}$
2687 : unparsable : unparsable : 0.0737972 (s) : [0-9]{5}-?[0-9]{4}|[0-9]{
2688 : failed : failed : 1.411377627 (s) : [^a-zA-Z0-9 \\-\\s]
2689 : failed : failed : 0.209935389 (s) : zip_code_regex = '^\\d{5}\\s?-?\\d{4}\\s?
2690 : failed : failed : 0.210608508 (s) : ^\\d{5}(-\\d{4})$
2691 : failed : failed : 0.760017385 (s) : \\d{3}-\\d{4}-\\d{2} is possible.
2692 : failed : failed : 1.064770911 (s) : (\\d{4})-(\\d{5})-\\d{4}
2693 : failed : failed : 0.252320423 (s) : \\d{4}-\\d{4}-\\d\\d\\d\\d-\\d\\d\\d\\d-\\d\\d\\d\\d-\\d\\d\\d\\d
2694 : failed : failed : 0.424355024 (s) : \"^[1-9] \\d{8}-\\d{3}$\"
2695 : failed : failed : 0.885710223 (s) : \"\\d{8}-\\d{4}-\\d{2}\"\"\"\"
2696 : failed : failed : 0.622803294 (s) : \\d{4}\\-(\\d{4})-(\\d{4})
2697 : failed : failed : 0.689334007 (s) : ^([2-9][1-9][0-9][0-9]|1[012]5[0-9])-(0[1-9][0-9])$
2698 : failed : failed : 1.419892147 (s) : (\\d+)-(\\d+)
2699 : failed : failed : 1.323009079 (s) : \\b[1-9][0-9]\\d{3}-\\d{4}\\b
2700 : failed : failed : 0.421756906 (s) : \"^\\d{16}-\\d{11}(\\s*-\\s*\\d{9})?$\"
2701 : failed : failed : 0.163143425 (s) : Validate American date forma
2702 : failed : failed : 0.197759432 (s) : Validate American date forma
2703 : failed : failed : 0.164616289 (s) : Validate American date forma
2704 : failed : failed : 0.206728353 (s) : Validate American date forma
2705 : failed : failed : 0.131853648 (s) : Validate American date forma
2706 : failed : failed : 0.157200543 (s) : Validate American date forma
2707 : failed : failed : 0.114026584 (s) : Validate American date forma
2708 : failed : failed : 0.142915141 (s) : Validate American date forma
2709 : failed : failed : 0.162101617 (s) : Validate American date forma
2710 : failed : failed : 0.165900691 (s) : Validate American date forma
2711 : unparsable : unparsable : 0.082102921 (s) : [0-
2712 : unparsable : unparsable : 0.061572672 (s) : ^(\\d{4
2713 : unparsable : unparsable : 0.067795728 (s) : (YYYY-mm
2714 : unparsable : unparsable : 0.067749362 (s) : (^
2715 : failed : failed : 0.153670281 (s) : [0-9]
2716 : failed : failed : 2.722690927 (s) : (?i)\\b
2717 : failed : failed : 0.633834701 (s) : \\d{4}-
2718 : unparsable : unparsable : 0.073877761 (s) : YYYY-([
2719 : failed : failed : 0.745400403 (s) : \\d{4}
2720 : failed : failed : 0.981183554 (s) : \\d{4}-
2721 : failed : error init : 0.102313241 (s) : ^
2722 : unparsable : unparsable : 0.078663359 (s) : [^(0|[1-9])\\d{1
2723 : failed : failed : 0.533181384 (s) : r\"^
2724 failed : unparsable : 0 (s) : Please check your regex.
2725 failed : unparsable : 0 (s) : Please check your regex.
2726 : failed : failed : 0.180269008 (s) : /^\\d+\\.\\d+\\.\\d+\\.
2727 : failed : failed : 0.244133535 (s) : $re = '
2728 : failed : failed : 8.860964718 (s) : /[0-9.]+\\\\.[0-9.]
2729 : unparsable : unparsable : 0.105882145 (s) : ^[0-9]{1,3}\\.[0
2730 : unparsable : unparsable : 0.117248568 (s) : [\\d\\.
2731 failed : unparsable : 0 (s) : Please check your regex.
2732 : unparsable : unparsable : 0.061246252 (s) : (
2733 failed : unparsable : 0 (s) : Please check your regex.
2734 : unparsable : unparsable : 0.084195443 (s) : ((
2735 failed : unparsable : 0 (s) : Please check your regex.
2736 : unparsable : unparsable : 0.06298887 (s) : [
2737 failed : unparsable : 0 (s) : Please check your regex.
2738 : failed : failed : 0.754936524 (s) : \"
2739 : unparsable : unparsable : 0.112913563 (s) : \"(
2740 : failed : error init : 0.117417504 (s) : ^
2741 : failed : failed : 0.199316133 (s) : - Match positive decimal value with any precision and scale, left-padded zeroes, comma as group
2742 : failed : failed : 0.135751135 (s) : [^0-9.]
2743 : unparsable : unparsable : 0.078285884 (s) : [1-9][0-9]*(,[0-9]{3})*(.[0
2744 : unparsable : unparsable : 0.070169878 (s) : ^(?P<int_part>\\d+)(?P<fmt_part>\\.(
2745 : failed : failed : 0.927901243 (s) : ^-?(\\d+\\.(\\d+))$ Use Ca
2746 : unparsable : unparsable : 0.067415507 (s) : \\d{1,3}\\.\\d{1,2}(\\.\\d{1,2
2747 : unparsable : unparsable : 0.081173563 (s) : (\\d+\\.\\d+(
2748 : unparsable : unparsable : 0.074109474 (s) : [0-9]*\\.?[0-9]{1,2}(\\.[0-9
2749 : unparsable : unparsable : 0.082390849 (s) : ([-+]?\\d\\d.\\d{1,2}(,\\d{3})
2750 : failed : failed : 2.774340574 (s) : \\d+\\.\\d+
2751 : unparsable : unparsable : 0.05900952 (s) : (?<p_number>\\d{5})(?<p_zipcode>\\d{4})(?<p_city>\\d{1})-(-?\\d{4
2752 : failed : failed : 0.689280226 (s) : \"^(?=\\d{5}$)(?=.*[A-Z])(?=.*[a-z])(?=.*\\d).{5}$\"
2753 : failed : failed : 1.163204688 (s) : ^[0-9][0-9]?[0-9][0-9]?[0-9][0-9][0-9]
2754 : failed : failed : 0.174170785 (s) : ^[0-9]{5}-[0-9]{4}$
2755 : failed : failed : 0.650664941 (s) : \"(^(?=^.{5}$)(?=^\\d{5}-)?)[a-zA-Z0-9\\d\\-]+$\"    Examp
2756 : failed : failed : 0.576051254 (s) : ^(?=.*[A-Z])(?=.*\\d)(?=.*[-]).{5,14}$
2757 : failed : failed : 0.23542424 (s) : ^\\d{5}(-\\d{4})$
2758 : failed : failed : 0.706445313 (s) : ^\\d{5}(-\\d{4})$
2759 : unparsable : unparsable : 0.076831564 (s) : ^[A-Z0-9]{1,}[-\\s]?[A-Z0-9]{0,9}[-\\s]?[A-Z0-
2760 : unparsable : unparsable : 0.08059962 (s) : \"^([1-9][0-9][0-9][0-9]|[1-9][0-9][0-9-]|[1-9][0-9]|
2761 : unparsable : unparsable : 0.065535252 (s) : \\4.{5}[12-15]'''
2762 : failed : failed : 9.505623129 (s) : \\b4[0-9]{12,15}(\\s+[0-9]{4})*\\b
2763 : failed : failed : 0.106725151 (s) : [^456]
2764 : failed : failed : 0.141798343 (s) : ^[4]\\d{12,15}$
2765 : failed : failed : 0.423504443 (s) : ^4[0-9]{12}$
2766 : failed : failed : 0.709105888 (s) : \\d{4}[12]\\d{3}[12]\\d{3}[12]\\d{3}
2767 : failed : failed : 1.060646318 (s) : (\\d{4}[\\d\\s]{10})+
2768 : failed : failed : 0.719178242 (s) : [4]{4}[0-9]{12,15}
2769 : failed : failed : 0.201946611 (s) : [^\\d\\s]
2770 : failed : failed : 0.985981846 (s) : [\\d]{4}\\d{1,13}\\d{1,13}\\d{1,13}
2771 : unparsable : unparsable : 0.075774457 (s) : ^(5[1-9]|6[0-4][0-9]|7[0
2772 : failed : failed : 0.308406927 (s) : \\\\b[5-9]\\\\d{13}\\\\b
2773 failed : unparsable : 0 (s) : Please check your regex.
2774 : unparsable : unparsable : 0.107702658 (s) : \\A[51-55][13-9][13-9][13-9][13-9][
2775 : failed : failed : 1.507072462 (s) : [^6][5][1][2][3][4][5][6][0][1]
2776 : failed : failed : 0.811976982 (s) : [51][\\d]{14}
2777 : failed : failed : 0.212378298 (s) : ^(50[5-9][0-9]){14}$
2778 : failed : failed : 0.635727009 (s) : [1-5][0-9]{14}
2779 : failed : failed : 1.028842069 (s) : \"^[1-5]\\d{12}$\"
2780 : failed : failed : 0.618597509 (s) : ^[5]\\d{6}15[5]\\d{4}$
2781 : unparsable : unparsable : 0.088430162 (s) : ^[A-Z]{1,3}(\\s{1}[
2782 : failed : failed : 0.17894388 (s) : ^[0-9]{1,5}$
2783 : failed : failed : 0.160717479 (s) : ^[A-Z]{2}\\d{4}$
2784 : unparsable : unparsable : 0.089146461 (s) : [A-Z] {1,3}[ ]{1,
2785 : unparsable : unparsable : 0.068446344 (s) : ^[A-Z][A-Z ]?[1-9][0
2786 : unparsable : unparsable : 0.102763714 (s) : ^[A-Z]{2} [A-Z]{3
2787 : unparsable : unparsable : 0.095609516 (s) : (?=^[0-9]{3}\\s[0
2788 : failed : failed : 2.127847874 (s) : A\\d{1,3}A\\d{1,3}A
2789 : failed : failed : 1.216683646 (s) : \\b[A-Z]{2}\\s?\\d{1}\\
2790 : failed : failed : 12.035966101 (s) : [A-Z]{2}\\s[0-9]{3}\\
2791 : failed : failed : 0.478678561 (s) : (See comments)
2792 : failed : failed : 0.457740039 (s) : (This is an exercise for the student to practice creating their own RegEx.)
2793 : failed : pumping failed : 9.298832108 (s) : [^\\s]+, [^\\s]+, [^\\s]+, [^\\s]+, [^\\s]+, [^\\s]+
2794 : failed : failed : 1.767402512 (s) : \\s{2,}
2795 : failed : failed : 0.533792266 (s) : \"(?=^\\s*$)(?!\\s+$)(\\s+)(?!\\s+$)\"
2796 : failed : failed : 0.251155936 (s) : (the first space is matched and replaced by a single space) \"No extra spaces.\"
2797 : failed : failed : 0.196483707 (s) : \"^[^ ]*$\"
2798 : failed : failed : 1.854616079 (s) : \\s{2,}
2799 : failed : pumping failed : 65.351952042 (s) : (.+)  
2800 : failed : failed : 0.884770746 (s) : \"^\\\\s*(\\\\w+)\\\\s\\\\s*$\"
2801 : failed : failed : 6.156720916 (s) : [^0-9A-Z]{10}|[0-9]{4}[0-9]{2}
2802 : failed : failed : 1.175519986 (s) : ^[0-9]{4}[0-9]{2}$
2803 : failed : failed : 0.560406661 (s) : \"^[0-9]{4}-[0-9]{2}/[0-9]{2}$\"
2804 : failed : failed : 0.139526074 (s) : ^(\\d\\d\\d\\d\\d)/(\\d\\d\\d\\d\\d)$
2805 : failed : failed : 0.693734886 (s) : (\\d{4})(\\d{2})(\\d{2})
2806 : failed : failed : 0.139844059 (s) : ^[0-9]{4}[0-9]{2}([0-9]{2}[0-9])?$
2807 : failed : failed : 0.663983325 (s) : ^\\d{4}
2808 : failed : failed : 0.216961698 (s) : ^[0-9]{4}-([0-9]{2})-([0-9]{4})$
2809 failed : unparsable : 0 (s) : Please check your regex.
2810 : unparsable : unparsable : 0.065042019 (s) : \"^(?P<year>[0-9]{4})(?P<month>0[1-9]|[12][0-9])(?P<day>0[1-9]|[12][0-9])$\"
2811 : failed : failed : 15.69890105 (s) : (?<!\\d){0,1}[0-9]{1,3}
2812 : failed : failed : 0.540098868 (s) : (0-100)%
2813 : unparsable : unparsable : 0.078670633 (s) : (?<number> [+-]?[0-9]{0,1}
2814 : failed : failed : 2.533718905 (s) : ^[1-9][0-9]?\\.[0-9]?$|[+-]([1-9][0-9]?\\.[0-9]?)$
2815 : failed : failed : 1.599134395 (s) : \\d[\\+\\-]?\\d{0,2}\\.\\d{0,2}
2816 : failed : failed : 0.189465323 (s) : \"
2817 : failed : failed : 76.221184236 (s) : [0-9]{1,2}\\.?[0-9]{1,2}|[1-9]\\d*|100\\.\\d{1,2}|100\"\"\"
2818 : failed : failed : 0.116358864 (s) : ^[0-9.]{1,2}
2819 : failed : failed : 0.110351411 (s) : ^\\d{1,2}(-\\d{1,2})?%
2820 : failed : failed : 0.146010258 (s) : ^[-1-9][0-9]0?[0-9]$
2821 : failed : failed : 0.566685521 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2822 : failed : failed : 0.79562688 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2823 : failed : failed : 0.679496082 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2824 : failed : failed : 1.486506287 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2825 : failed : failed : 1.209144299 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2826 : failed : failed : 1.562642059 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2827 : failed : failed : 0.814422956 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2828 : failed : failed : 1.459373722 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2829 : failed : failed : 1.410012183 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2830 : failed : failed : 1.58917365 (s) : Removes &quot;stop&quot; or &quot;delete&quot; words that google removes from search strings. Ordinarily have no search significance. I used this to remove the words in my own web search application. Take out th
2831 : failed : failed : 0.168993464 (s) : ^[01][01]*$
2832 : failed : failed : 0.204726129 (s) : a string that can only have one bit set at a time.
2833 : failed : failed : 39.700706126 (s) : (^.*)([01]\\d$) Explanati
2834 : failed : failed : 8.690420825 (s) : ^(0(1(0(1(0(1(0(1(0)))))))?)?)+$
2835 : failed : failed : 1.265993509 (s) : [01][1-9]0+
2836 : unparsable : unparsable : 0.060938667 (s) : \"^(?=.*1)(?=.*0)(?=.*1)(?=.*0)(?=.*1)(?=.*0)(?=.*1)(?=.*0)(?=.*1)(?=.*0)(?=.*1)(?=
2837 : failed : failed : 0.77455592 (s) : \"^[01]?[0-9]{1,100}$\"
2838 : failed : failed : 1.01657435 (s) : \\b[01]{3}[0]*1[01]{1}\\b\"\"\"```
2839 : failed : failed : 0.85421962 (s) : \"^[01]{1,8}$\"
2840 : failed : error init : 0.105662985 (s) : ^
2841 : failed : failed : 2.622737157 (s) : \\d{2}[A-Z]{2}[A-Za-z0-9]{7}
2842 : unparsable : unparsable : 0.065274504 (s) : ^(?=.*[0-9a-zA-Z])(?=.*[a-z])(?=.*[0-9])[0-9a
2843 : failed : failed : 0.752924322 (s) : \"^(0|[1-9])([A-Fa-f]{6}$)\"
2844 : unparsable : unparsable : 0.07652451 (s) : ([0-9A-Fa-f]{2}[0-9A-Fa-f]{2}[0-9A-Fa-f]{2}
2845 : failed : failed : 0.639993257 (s) : (?<number>\\d{6})(?<length>\\d{5})[^\\d]{1}
2846 : failed : failed : 3.004247847 (s) : (ESN)\\d{7,10}
2847 : unparsable : unparsable : 0.08011835 (s) : (ESN|AESN)([0-9A-Fa-f]{4})([0-9A-Fa-f]{4})([0-
2848 : unparsable : unparsable : 0.073261238 (s) : ```import reesn_pattern = '^[0-9A-Fa-f]{4}-([0-9A-Fa-f]{
2849 : failed : failed : 2.325424233 (s) : (?i)([0-9A-Fa-f]{4,7})[a-f]
2850 : failed : failed : 0.154735714 (s) : ^[0-9A-Fa-f]{4}$
2851 : unparsable : unparsable : 0.064973701 (s) : ([
2852 : failed : failed : 0.18853288 (s) : .
2853 failed : unparsable : 0 (s) : Please check your regex.
2854 : failed : error init : 0.089468042 (s) : ^
2855 : unparsable : unparsable : 0.066377527 (s) : [
2856 : unparsable : unparsable : 0.064950688 (s) : (
2857 : unparsable : unparsable : 0.099111033 (s) : [
2858 : failed : failed : 1.793044158 (s) : 0
2859 : failed : failed : 1.187339967 (s) : \\
2860 : failed : error init : 0.138777103 (s) : ^
2861 : unparsable : unparsable : 0.053109246 (s) : ([
2862 : failed : failed : 2.651426151 (s) : \\
2863 : failed : failed : 3.747414284 (s) : \\
2864 : failed : error init : 0.140359332 (s) : ^
2865 : unparsable : unparsable : 0.135546543 (s) : [
2866 : unparsable : unparsable : 0.049220465 (s) : [
2867 : unparsable : unparsable : 0.100048006 (s) : (
2868 : failed : failed : 1.912953211 (s) : \\
2869 : failed : failed : 2.590922087 (s) : \\
2870 : failed : error init : 0.076574123 (s) : ^
2871 : failed : failed : 1.089982513 (s) : 01(0|1)$
2872 : failed : failed : 1.880262104 (s) : [0-9]{1}[0-9]{1}|[0-9]{2}[0-9]{2}|[0-9]{3}[0-9]{3}Co
2873 : failed : failed : 1.887876481 (s) : \\b([0-9]{1,2}|1[0-2]|2[0-4])\\b
2874 : failed : failed : 0.16260586 (s) : ^[01]?[0-9]{2}$\"\"\"
2875 : failed : failed : 214.365182063 (s) : [0-9]{1,2}(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|1[0-9]|2[0-9]|3[01])
2876 : failed : pumping failed : 83.681455467 (s) : .*[1-8][0-9]*/
2877 : failed : failed : 0.969361128 (s) : \\b[01]\\d\\d-\\d\\d\\d\\b
2878 : failed : failed : 1.246038275 (s) : \\b[1-9]\\d|10\\b
2879 : failed : failed : 0.198984322 (s) : ^(0|[1-9])\\d{2}$
2880 : failed : failed : 0.191893844 (s) : /0?(1-9)|1?-9|0?(10-12)|1?-?2|1?-?3|1?-?4|1?-?5|1?-?6|1?-?7|1?-?8|1?-?
2881 : failed : failed : 0.163988015 (s) : \"
2882 : failed : failed : 2.525064603 (s) : /
2883 : unparsable : unparsable : 0.082312012 (s) : \"(
2884 : failed : failed : 0.193337954 (s) : \"
2885 : failed : failed : 0.126302318 (s) : \"
2886 : failed : failed : 3.015441107 (s) : \"
2887 : failed : failed : 2.471654203 (s) : \"
2888 failed : unparsable : 0 (s) : Please check your regex.
2889 : failed : error init : 0.10490652 (s) : ^
2890 : unparsable : unparsable : 0.050508734 (s) : (
2891 : unparsable : unparsable : 0.066879786 (s) : (r'\\d+
2892 : failed : failed : 2.174877914 (s) : \\b
2893 : failed : failed : 0.320278155 (s) : \\b1
2894 : failed : failed : 0.220007032 (s) : ^[1-9][0-9.]*$
2895 : failed : failed : 0.105946004 (s) : ^\\d.(\\d+)?
2896 : failed : failed : 65.08996844 (s) : .[0-9]{1,2}\\.?[0-9]
2897 : failed : failed : 1.994715345 (s) : \"^
2898 : failed : failed : 1.731172567 (s) : \\d([1-9]?\\d)?\\.
2899 : failed : failed : 0.216399997 (s) : ^(0|[1-9][0-9]*)(\\.[0-9])?$
2900 : unparsable : unparsable : 0.095185353 (s) : ([1-9]|0)\\.[0-9]The solution is (..
2901 : failed : failed : 0.108501051 (s) : \\beth0\\b
2902 : unparsable : unparsable : 0.099070899 (s) : public static Regex ValidateUnixDeviceName(string ipAddress){    string[] validIPs = new string[]        {            \"\",            
2903 : failed : failed : 0.186016174 (s) : ^[a-zA-Z0-9]+$
2904 : failed : failed : 0.143400228 (s) : \"eth\\
2905 : failed : failed : 0.122495069 (s) : [\\d\\w+]$
2906 : failed : failed : 0.901248648 (s) : /
2907 : failed : failed : 0.106859602 (s) : <regex>
2908 : unparsable : unparsable : 0.101866526 (s) : /^[a-z]+[0-
2909 : unparsable : unparsable : 0.082155529 (s) : \"^(?P<protocol>eth\\
2910 : failed : failed : 0.679265801 (s) : /^
2911 : failed : failed : 0.694467496 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2912 : failed : failed : 0.400322145 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2913 : failed : failed : 0.536312368 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2914 : failed : failed : 0.454985288 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2915 : failed : failed : 0.66542999 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2916 : failed : failed : 0.397077008 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2917 : failed : failed : 0.465266853 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2918 : failed : failed : 0.658537712 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2919 : failed : failed : 0.521781267 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2920 : failed : failed : 0.458716565 (s) : RAR file extensions.\rWorks also with '*.part01.rar' given '.rar' to be the file extension.\rDoes not support volumes exceed 101 for s## (r99, s00, s01,...) serie.Match exampl
2921 : failed : error init : 0.106376399 (s) : ^
2922 failed : unparsable : 0 (s) : Please check your regex.
2923 : unparsable : unparsable : 0.115829134 (s) : (
2924 : unparsable : unparsable : 0.100203647 (s) : [
2925 : unparsable : unparsable : 0.069874966 (s) : ([
2926 : unparsable : unparsable : 0.081769006 (s) : (
2927 : failed : failed : 2.273408903 (s) : /
2928 failed : unparsable : 0 (s) : Please check your regex.
2929 : failed : failed : 2.924394924 (s) : \\
2930 : unparsable : unparsable : 0.074439762 (s) : [
2931 failed : unparsable : 0 (s) : Please check your regex.
2932 : unparsable : unparsable : 0.069917606 (s) : (
2933 : unparsable : unparsable : 0.072261509 (s) : (
2934 failed : unparsable : 0 (s) : Please check your regex.
2935 failed : unparsable : 0 (s) : Please check your regex.
2936 : unparsable : unparsable : 0.066937484 (s) : \"(
2937 failed : unparsable : 0 (s) : Please check your regex.
2938 failed : unparsable : 0 (s) : Please check your regex.
2939 : unparsable : unparsable : 0.096013903 (s) : (
2940 failed : unparsable : 0 (s) : Please check your regex.
2941 : unparsable : unparsable : 0.082922494 (s) : \\$(\\d+(\\.\\d{2})
2942 : unparsable : unparsable : 0.06982905 (s) : \\$\\d{1,3}\\.(\\
2943 : unparsable : unparsable : 0.054869107 (s) : ^[\\d,\\.]{1,2
2944 : unparsable : unparsable : 0.070505615 (s) : \\$\\\\d{1,3}(,
2945 : unparsable : unparsable : 0.079992915 (s) : (\\$\\d\\d,?\\d
2946 : failed : failed : 0.13912306 (s) : ^\\d+\\.,\\d{2}
2947 : failed : failed : 23.3283024 (s) : \\d*\\.\\d{2}
2948 : failed : failed : 0.21781855 (s) : [0-9]{1,3}
2949 : failed : failed : 0.149240779 (s) : [^,.]*
2950 : unparsable : unparsable : 0.084815813 (s) : \\$\\d{1,3}(,
2951 : failed : failed : 0.148875005 (s) : Fred Flintsto
2952 : failed : failed : 0.673542619 (s) : \"^([a-z]\\w+)\\s(.*?)\\s(.*?)\\s([a-z]\\w+)\\s(.*?)$\"
2953 : failed : failed : 7.946802204 (s) : [a-z][0-9]{3}-[a-z0-9]{3}-[a-z0-9]{4}
2954 : unparsable : unparsable : 0.069860339 (s) : \"^(?P<character1>.+) (?P<character2>...) (?P<character3>...).+$\"
2955 : failed : failed : 0.495169597 (s) : \"^The Flintstones$\"
2956 : failed : failed : 0.734915949 (s) : [Pattern]
2957 : failed : failed : 0.393006366 (s) : \"Barney Rubble\" is the character who plays the saxophone because it uses the word \"Barney\" at the beginning of its name.
2958 : failed : failed : 0.635852844 (s) : \"Mr. \\d+[\\D]+\"
2959 : failed : failed : 25.467329018 (s) : ^([^-]+)([0-9]{2})-([0-9]{2})-([0-9]{4})$
2960 : failed : failed : 0.385764716 (s) : Mr. Slate```pythonimport re
2961 : failed : failed : 0.127316895 (s) : ^[0]{1}[\\d]{6,7}$
2962 : failed : failed : 0.456565844 (s) : (^[0]{10}[5-9]?[-0-9]{4}$)
2963 : failed : failed : 30.052640771 (s) : (0)?[1-9][0-9]|[1-9][0-9][0-9]|1
2964 : unparsable : unparsable : 0.081525071 (s) : \"(^\\d{6}$|^\\d{6}\\.|^\\d{6}\\.\\d{3
2965 : failed : failed : 0.16923251 (s) : ^(([0]{1,2})\\d{3,6})([0]?\\d{4})?
2966 : unparsable : unparsable : 0.10344627 (s) : ^[1-9]\\d{2}[0-9]{3}-[0-9]{4
2967 : unparsable : unparsable : 0.070781582 (s) : ^(((1?[2-9]|2[0-8])\\\\d{1,2})\\\\.((2
2968 failed : unparsable : 0 (s) : Please check your regex.
2969 : unparsable : unparsable : 0.085650865 (s) : (0\\\\d{3}|\\\\d{3}\\\\d{2}|\\\\d{4})(?<ext
2970 : unparsable : unparsable : 0.069242504 (s) : (?=^[0-9]{6,7}$)(^[0-9]{6,7
2971 : failed : failed : 0.147437056 (s) : ^([1-9][0-9]|1[012])[0-5][0-9]AM$ Questi
2972 : failed : failed : 6.580332229 (s) : [0-9]|[1-2][0-9]|3[0-1]
2973 : unparsable : unparsable : 0.088200673 (s) : [\
2974 : unparsable : unparsable : 0.073045345 (s) : /^(?!am|pm|am$)(0|1|2|3|4|5|6|7|8|9|0|1|2|3|4|
2975 : unparsable : unparsable : 0.085180896 (s) : /^[0-9]{1,
2976 : unparsable : unparsable : 0.054257775 (s) : /^([0-1]?[0-9]|2[0-3
2977 : failed : error init : 0.086566366 (s) : ^
2978 failed : unparsable : 0 (s) : Please check your regex.
2979 : unparsable : unparsable : 0.076481139 (s) : \\d{1,
2980 : unparsable : unparsable : 0.078150821 (s) : (^\\d{1,
2981 : failed : failed : 0.491098284 (s) : [A-Za-z0-9]{2,}
2982 : failed : failed : 0.781087714 (s) : \\b\\d{1,9}\\b
2983 : failed : failed : 1.460158029 (s) : \\w(?=^|\\W)
2984 : failed : failed : 4.41939397 (s) : [a-zA-Z0-9]|[0-9]
2985 : failed : failed : 14.980622051 (s) : (\\D+)\\D*(\\d+)
2986 : failed : failed : 0.566486109 (s) : r'^[0-9a-zA-Z]+$'
2987 : failed : pumping failed : 40.034015387 (s) : [\\w][\\w]*(?![\\w\\s])
2988 : failed : failed : 2.212812627 (s) : a([a-zA-Z0-9]{1,})*
2989 : failed : failed : 1.125616573 (s) : r\"^[a-zA-Z0-9]*$\"
2990 : failed : pumping failed : 95.321008322 (s) : [a-zA-Z0-9]+$
2991 : failed : failed : 1.112641643 (s) : (\\d+)\\/(\\d+)\\/(\\d+)\\s+([0-9]+)
2992 : failed : failed : 0.730272827 (s) : [19/02/<year>]Generate a RegEx for this description.
2993 : unparsable : unparsable : 0.07647613 (s) : \"([1-9][0-9]|[1-9][0-9][0-9])/[0-9]{2}/[0-9
2994 failed : unparsable : 0 (s) : Please check your regex.
2995 : failed : failed : 0.401172376 (s) : (Date-month-year format) \"\\\\d{4}-\\\\d{2}-\\\\d{2}\"
2996 : failed : failed : 1.788369568 (s) : [0-9]{1}/[0-9]{2}/[0-9]{4}
2997 : failed : failed : 14.280681882 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2}/[0-9]{4}
2998 : failed : failed : 0.23439747 (s) : (\\d{1,2})\\/(\\d{1,2})\\/(\\d{4}) with leap years 100% integrated Valid yea
2999 : unparsable : unparsable : 0.093024532 (s) : \\b(0?[1-9]|[12][0-9]|3[01])/(1[0-9]|0?[1-9]
3000 : failed : failed : 0.649092451 (s) : (^\\d{4}-\\d{2}-\\d{2}(\\/\\d{2}\\/\\d{2})?)
3001 : failed : failed : 0.525078763 (s) : /^[0-9]+
3002 : failed : failed : 2.120335677 (s) : \\b(?<!\\d)[1-9][0-9]?\\.[0-9]{1,2}\\b
3003 : failed : failed : 1.062854397 (s) : r\"^
3004 : failed : failed : 0.573351376 (s) : r'^-?\\d+(\\.\\d+)?'
3005 : failed : failed : 2.396921264 (s) : 0\\.[0-9]*
3006 : failed : pumping failed : 194.390062459 (s) : ^0*\\z|0*[1-9][0-9]*\\.[0-9]+$
3007 : failed : failed : 7.471389149 (s) : (?<!\\. )[0-9]{1,2}
3008 : failed : failed : 1.035492094 (s) : ^\\d*\\.?\\d*[1-9]?\\d*$
3009 : failed : failed : 0.272099858 (s) : _
3010 : unparsable : unparsable : 0.084915961 (s) : \"^(0+\\d+\\.\\d+[1-9]?[0-9]?$|[0-9]+(\\.\\d+[
3011 : failed : failed : 1.976067326 (s) : \\b
3012 : failed : failed : 0.927237774 (s) : \\d{2}
3013 failed : unparsable : 0 (s) : Please check your regex.
3014 : unparsable : unparsable : 0.089748056 (s) : \\b([0-9]{4})-([0-9]{2})-([0-9]{2
3015 : failed : failed : 1.089650622 (s) : \\b[1-9]\\d[-\\.\\/]\\d\\d\\d\\b
3016 : failed : failed : 1.283655023 (s) : \\d{2}-\\d{2}-\\d{4}
3017 : unparsable : unparsable : 0.086772231 (s) : '\\d{2}-\\d{2}-\\d{4}|\\d{2}-\\d{2
3018 : unparsable : unparsable : 0.074324186 (s) : /^(0[1-9])?[1-9]?[0-9]{2}-?[0-
3019 : failed : failed : 0.147382365 (s) : ^[0-9]{4}-[0-9]{2}-[0-9][0-9]{2}
3020 : unparsable : unparsable : 0.068143508 (s) : (?<!\\d\\d)\\d\\d-\\d\\d-\\d{4}(?!\\d\\d
3021 : failed : failed : 0.152125854 (s) : ^[0-9]{4}[-0-9]{2}[0-9]{2}$
3022 : failed : failed : 0.387154384 (s) : /^(19|20)(3[1-9]|[1-9][0-9])(0[1-9]|1[012])[0-9]{4}(2[0-9]|1[012])
3023 : failed : failed : 0.336499857 (s) : \\d{4}[-0-9]{2}[0-9]{2}[0-9]{2}
3024 : unparsable : unparsable : 0.075603909 (s) : (\\d{4}-\\d{2}-\\d{2} \\d{
3025 : failed : failed : 0.140525643 (s) : \\b\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\
3026 : failed : error init : 0.125278072 (s) : ^
3027 : failed : failed : 24.485007114 (s) : ([0-9]{4}(00))([0-9]{2})([0-9]{2})
3028 : unparsable : unparsable : 0.077256569 (s) : \"^[0-9]{4}[0-9]{2}[0-9]{2}[0-9]{2}((2[0-9]|[1-9][0-9])[0-9
3029 : failed : failed : 18.627759932 (s) : \\b([1-9][0-9][0-9]|1[012]|0[1-9])[0123]|(0[1-9]|[12][0-9])\\d{3,4}\\b
3030 : failed : failed : 0.242434177 (s) : \\b\\d{4}-\\d{2}-\\d{2} (\\d{2})\\d{2} (\\d{2}) (\\d{4}\\b)
3031 : failed : failed : 34.961369539 (s) : [a-zA-Z0-9]{4}-[0-9]{2}[a-zA-Z]{3}
3032 : unparsable : unparsable : 0.118704701 (s) : \"(0[1-9]|1[012])[0-3]-[0-9]{4}|(1[012])[3-9]{
3033 : failed : failed : 3.612045703 (s) : [\"001231\", \"000229\", \"040229\"]
3034 : failed : failed : 0.152751434 (s) : - Matchi
3035 : failed : failed : 0.201803363 (s) : '^((00)\\d{2})?(-(01)\\d{2})?(-(02)\\d{4})$'        Explanati
3036 : failed : failed : 0.190632736 (s) : (\\d{4})(\\d{3})(\\d{2}\\s\\d{1})\"\"\"from __future__ import absolute_importfrom
3037 : failed : failed : 1.418776781 (s) : \\d{4}(..\\d{2}(..\\d{2})?)?\\d{3}
3038 : failed : failed : 0.688371958 (s) : \"^\\d{4}-\\d{2}-\\d{2}\\ \\d{2}[a-zA-Z ]{3}
3039 : failed : failed : 0.153337049 (s) : ^\\d\\d\\d\\d-\\d\\d-\\d\\d$\r\r - Valid dates in the range 1900-2039\r Min
3040 : unparsable : unparsable : 0.074613687 (s) : ((00[1-9]|0[1-9]|1[012])\\d{3})\\/((0[1-9]|[12][0
3041 : failed : failed : 0.720927192 (s) : \"\\d+[apm]\"
3042 : failed : failed : 0.239015425 (s) : ^[01]?[0-2]?[0-9]{1,2}[0-5][0-9][0-9]$
3043 : failed : failed : 0.492525373 (s) : (\\d\\d\\d\\d)
3044 : unparsable : unparsable : 0.097863702 (s) : ^(0+[1-9]|1[0-2
3045 : unparsable : unparsable : 0.075412621 (s) : ([0-9]{2}[0-9]|[0-9]{2}[0-9
3046 : unparsable : unparsable : 0.085088574 (s) : (\\d{1,2})([0-9]{2})(\\d{0,2})(\\d{2})(\\d{3})(\\d{2})(\\d{2})(\\d{2})(\\
3047 : unparsable : unparsable : 0.113995546 (s) : - \"^[0-9]{2}[0-9]{2}[0-9]{
3048 : unparsable : unparsable : 0.073903098 (s) : ^(0[1-9]|1[012])[0-9]{
3049 : unparsable : unparsable : 0.076207107 (s) : ([0-9]{1,2}
3050 : unparsable : unparsable : 0.066514293 (s) : ^(\\d{1,2
3051 : failed : failed : 0.216723913 (s) : ^[+-]?\\d*\\.\\d+$
3052 : failed : failed : 0.908134503 (s) : \\d+\\.\\d+
3053 : failed : failed : 0.216388386 (s) : r'^0\\.\\d{2}$'
3054 : failed : failed : 0.267906898 (s) : ^0+(\\.[1-9])?$
3055 : failed : failed : 0.135353943 (s) : ^[1-9][0-9]\\d*$
3056 : failed : failed : 0.12520193 (s) : The RegEx pattern should be \"\\d+\\.\\d+\"
3057 : failed : failed : 0.390094341 (s) : ^[1-9]\\d*\\.?\\.?\\d*$
3058 : failed : failed : 1.577673135 (s) : (0[1-9]|1[0-2])\\.[0-9]{1,2}
3059 : failed : failed : 0.453585481 (s) : [\\d.\\-]*
3060 : failed : failed : 1.724914265 (s) : \\d+\\.\\d+
3061 : unparsable : unparsable : 0.073624487 (s) : /^(0?[1-9]|1[012])\\/(0?[1-9]|[12][0-9]|3[01])\\/(0?
3062 : failed : failed : 0.271566842 (s) : (02/29/20\\d\\d/\\d\\d-\\d\\d\\d\\d)
3063 : failed : failed : 0.74622234 (s) : ^(0[1-9])[0-9]
3064 : failed : failed : 0.568392033 (s) : ^(0[1-9]|1[012])\\/((0[1-9]|[12])\\/[0-9]{4})|\\d\\d\\/\\
3065 : unparsable : unparsable : 0.070409606 (s) : ^(\\d{1,2}\\/\\d{1,2}\\/\\d{2,4}|\\d{1,2}\\/\\d{1,2}\\/
3066 : unparsable : unparsable : 0.061685152 (s) : (\\d{1,2}/\\d{1,2}/\\d{4}|\\d{1,2}/\\d{1,2}/\\d{
3067 : failed : failed : 22.025848747 (s) : .{0,2}/\\d{2} [a-g]{0,2}/\\d{4}
3068 : unparsable : unparsable : 0.060712264 (s) : var pattern = new RegExp(\"(0[1-9]|1[012])\\/([0-9]{1,2})\\/([0-9]{4})-
3069 : failed : failed : 0.15804426 (s) : ^(0|[12][048][048]|[13][0-6])/
3070 : unparsable : unparsable : 0.072907477 (s) : [0-9][0-9][0-9][0-9][0-9]/[0-9][0-9][0-9][0-9]/[0
3071 : failed : failed : 0.919308998 (s) : [^\\d.]+|\\d+\\.
3072 : unparsable : unparsable : 0.075321541 (s) : /^0(
3073 : failed : failed : 0.138919019 (s) : ^\\d+[,.]
3074 : failed : failed : 0.897042212 (s) : \"^\\d+\\.\\d+
3075 : failed : failed : 4.591067265 (s) : \"([0-9][0-9]*,[0-9]{3})?\" [,]? [0-9]
3076 : failed : failed : 1.5272658 (s) : 10,000 | [0-9]{3}[,.]?[0-9]{3}
3077 : failed : failed : 1.110226627 (s) : \"^\\d+
3078 : unparsable : unparsable : 0.073039633 (s) : \"\\d{1,3}\\d{3}(,\\d{3})?(\\.\\d+)?(,[
3079 : failed : failed : 0.185168889 (s) : (\\d+)(,\\d+)?|
3080 : unparsable : unparsable : 0.07318227 (s) : 1) r'^(\\d{1,3})(,)(\\d{3})(.?)$'
3081 : failed : failed : 0.28550832 (s) : \"^[aeiou][aeiouy]*$\"
3082 : failed : failed : 0.083932362 (s) : ^[aeiouy]{1}$
3083 : failed : failed : 2.230981069 (s) : a[a-z]+
3084 : failed : pumping failed : 127.336367828 (s) : [AEIOUYaeiouy][A-Za-z0-9]*$
3085 : failed : failed : 2.472644676 (s) : \\b[aeiouyaeiouy]\\w*\\b
3086 : failed : failed : 0.984839942 (s) : ^[a-zA-Zaeiouyaeiouy]*$
3087 : failed : failed : 0.927898468 (s) : [aeiouyaeiouy]
3088 failed : unparsable : 0 (s) : Please check your regex.
3089 : failed : failed : 0.693728544 (s) : \"^[aeiouyAEIOUY]+$\"
3090 : failed : failed : 0.644186818 (s) : ([a-zA-Z]|[aeiouAEIOUYaeiouy])
3091 : unparsable : unparsable : 0.051840975 (s) : 0(?<digits>\\d*)|(?
3092 : unparsable : unparsable : 0.072821375 (s) : ^(([0-9]{1,7})?
3093 : failed : failed : 4.892901102 (s) : 1\\.\\d{0,9}$
3094 : failed : failed : 2.010514197 (s) : /^
3095 : failed : failed : 1.12849151 (s) : /\\A0*([1-9]\\d*)
3096 : unparsable : unparsable : 0.048366448 (s) : ^[0-9]*(\\.[0-9]
3097 : unparsable : unparsable : 0.075509432 (s) : [0-9]*(\\\\.[0-9]
3098 : unparsable : unparsable : 0.067580215 (s) : \\d{1,6}\\.(1,2\\d
3099 : unparsable : unparsable : 0.088424171 (s) : \\d{1,6}(\\.\\d{3
3100 : failed : failed : 0.102982012 (s) : ^[0-9]{1,6}\\.
3101 : failed : failed : 0.577388094 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3102 : failed : failed : 0.491485618 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3103 : failed : failed : 0.628424936 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3104 : failed : failed : 0.499385099 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3105 : failed : failed : 0.505905392 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3106 : failed : failed : 0.741854844 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3107 : failed : failed : 0.712789205 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3108 : failed : failed : 0.51542452 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3109 : failed : failed : 0.403375725 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3110 : failed : failed : 0.54309465 (s) : Applied to a.RTF document, returns all the names of the# bookmarks. Useful to retrieve# dinamically# the list of bookmarks from a document.Match exampl
3111 : failed : failed : 187.657995878 (s) : [a-zA-Z0-9_]{1,20}\"\"\"
3112 : unparsable : unparsable : 0.073460671 (s) : \"Return Parent.DB.GetDataReader(CauseImmediateGet,[\" + MyIncidentEvent
3113 : failed : failed : 0.089856509 (s) : ^ReturnParent.
3114 : failed : failed : 1.899402654 (s) : (^(\\[.*?\\])|(^[^|]+|$))*
3115 : failed : failed : 10.858336761 (s) : [^\"](?=\\\\w(?!\\s+\\\\w))
3116 : failed : failed : 24.193631183 (s) : \"[^\"]*\" (quotes are optional)
3117 : unparsable : unparsable : 0.058572603 (s) : '^(?=.*\"(\"[^\"]*\")*\"$)(?=.*\"
3118 : failed : failed : 2.241232437 (s) : \\w+\\.\\w+?\"
3119 : unparsable : unparsable : 0.070827708 (s) : (?<=\\s)[A-Za-z0-9_-]+(?=
3120 : failed : failed : 2.91489984 (s) : [^\"]*
3121 : failed : failed : 0.53171431 (s) : /^[\\d]{1,6}-?\\d{4}-?\\d{3}-?\\d{2}
3122 : failed : failed : 0.622825505 (s) : (\\d{9})(-\\\\d{4})?
3123 : unparsable : unparsable : 0.080254074 (s) : (^| )([0-9])([0-9]{3})-([0-9]{3}[0-9
3124 : failed : failed : 0.724593106 (s) : (\\d{3})-(\\d{6})-(\\d{9}|\\d{9})
3125 : unparsable : unparsable : 0.053869007 (s) : (?<![a-zA-Z0-9])\\d{3}-\\d{4}-\\d{6
3126 : unparsable : unparsable : 0.060190828 (s) : (?<!^\\d{9})[0-9]{9}-[0-9]{2}[0-9]{
3127 : unparsable : unparsable : 0.048578275 (s) : ([0-9]{1,3}[-]?[0-9]{1,3}[-]?[0-
3128 : failed : failed : 0.533084632 (s) : htt
3129 : failed : failed : 0.18279977 (s) : [^0-9]
3130 failed : unparsable : 0 (s) : Please check your regex.
3131 : failed : failed : 0.173844083 (s) : Positive real number greater than zero.Match exampl
3132 : failed : failed : 0.378227492 (s) : Positive real number greater than zero.Match exampl
3133 : failed : failed : 0.275475531 (s) : Positive real number greater than zero.Match exampl
3134 : failed : failed : 0.354413934 (s) : Positive real number greater than zero.Match exampl
3135 : failed : failed : 0.309316748 (s) : Positive real number greater than zero.Match exampl
3136 : failed : failed : 0.443491636 (s) : Positive real number greater than zero.Match exampl
3137 : failed : failed : 0.152972427 (s) : Positive real number greater than zero.Match exampl
3138 : failed : failed : 0.269825175 (s) : Positive real number greater than zero.Match exampl
3139 : failed : failed : 0.249700194 (s) : Positive real number greater than zero.Match exampl
3140 : failed : failed : 0.184555082 (s) : Positive real number greater than zero.Match exampl
3141 : failed : failed : 0.87488985 (s) : [^0-9a-zA-Z\\-_\\.]+This should match the IP address, and all the non-alphanumeric characters before it.
3142 : failed : failed : 1.583997371 (s) : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[\\da-zA-Z]+$
3143 : failed : pumping failed : 149.000381565 (s) : [^a-zA-Z0-9.-]+Explanati
3144 : unparsable : unparsable : 0.072675402 (s) : /[1-9]\\.[0-9]?\\.[0-9]?|[1-9]\\.[0-9]?\\.[0-9]?\\.[0-
3145 : failed : failed : 0.11199791 (s) : ^[0-9]+
3146 : unparsable : unparsable : 0.091329583 (s) : \\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{
3147 : unparsable : unparsable : 0.09840329 (s) : ^(?=.*
3148 : failed : failed : 0.779956519 (s) : (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})
3149 : failed : failed : 0.576035144 (s) : ^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$
3150 : failed : error init : 0.127452858 (s) : ^
3151 : unparsable : unparsable : 0.085382093 (s) : [0-9]//[0-
3152 : unparsable : unparsable : 0.089185334 (s) : (\\d{1,2}\\/
3153 : unparsable : unparsable : 0.057275417 (s) : ^((0?[1-9
3154 : unparsable : unparsable : 0.064350005 (s) : \"^[0-9]{1
3155 : unparsable : unparsable : 0.059513722 (s) : [0-9]{2
3156 : unparsable : unparsable : 0.060493344 (s) : \"^\\d{2}[\\
3157 : unparsable : unparsable : 0.07218742 (s) : ([0-9]\\\\d{1
3158 : failed : failed : 0.770799556 (s) : /\\d{1,2}
3159 : unparsable : unparsable : 0.097108559 (s) : (\\d{1,2}
3160 : unparsable : unparsable : 0.059456986 (s) : \\b[0-9]{1
3161 : failed : failed : 0.419451635 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3162 : failed : failed : 0.520896713 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3163 : failed : failed : 0.722219568 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3164 : failed : failed : 0.355429713 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3165 : failed : failed : 0.502297035 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3166 : failed : failed : 0.404603221 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3167 : failed : failed : 0.551783276 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3168 : failed : failed : 0.52355261 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3169 : failed : failed : 0.399620304 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3170 : failed : failed : 0.730745501 (s) : Regular expression to limit types of files accepted. This example matches.jpg and.gif files only.Match exampl
3171 : unparsable : unparsable : 0.103366951 (s) : \"^\\$([1-9][0-9]*[
3172 : unparsable : unparsable : 0.058090371 (s) : [A-Z]?\\s?[$][0
3173 : unparsable : unparsable : 0.067105027 (s) : \\d{2,}\\s*\\.\\d{1,
3174 : failed : failed : 0.14998963 (s) : \\$
3175 : failed : failed : 0.526201442 (s) : ^\\d+\\.(\\d{0,3})
3176 : unparsable : unparsable : 0.076469116 (s) : \\b(\\d{1,3}(,\\d{
3177 : failed : failed : 6.51678264 (s) : -?\\d?\\.\\d{0,4}My
3178 : unparsable : unparsable : 0.107557818 (s) : ^[-0-9]{0,3}[0-
3179 : failed : failed : 0.316254221 (s) : ^\\d+\\.\\d{1,3}$
3180 : unparsable : unparsable : 0.065975796 (s) : \\$\\d{1,3} \\.\\d{
3181 : unparsable : unparsable : 0.066319077 (s) : /^([a-zA-Z0-9
3182 : unparsable : unparsable : 0.060619841 (s) : ^(?=.{15}$)(?=
3183 : unparsable : unparsable : 0.053744896 (s) : \\d{5}-\\d{5
3184 : failed : failed : 0.408353303 (s) : \\d{5}-\\d{2}-
3185 : unparsable : unparsable : 0.076160359 (s) : ^(?=.*?[0-9]
3186 : failed : failed : 0.16460605 (s) : \"\\d{4}\\-\\d{5}\\-
3187 : failed : failed : 0.169276864 (s) : import re
3188 : unparsable : unparsable : 0.069789406 (s) : [a-z0-9]{5}-[
3189 : failed : failed : 0.104700856 (s) : [a-zA-Z0-9]
3190 : unparsable : unparsable : 0.070255969 (s) : ^(?=.*[A-Z]
3191 : failed : failed : 0.817187224 (s) : \"
3192 : failed : failed : 0.128213652 (s) : &
3193 failed : unparsable : 0 (s) : Please check your regex.
3194 : unparsable : unparsable : 0.087024924 (s) : [
3195 : failed : failed : 3.812112561 (s) : &
3196 failed : unparsable : 0 (s) : Please check your regex.
3197 : failed : failed : 2.545821465 (s) : &
3198 : failed : failed : 0.242730451 (s) : \\
3199 : failed : failed : 3.854987751 (s) : \"
3200 : unparsable : unparsable : 0.07792041 (s) : [
3201 : unparsable : unparsable : 0.054611786 (s) : ([0-9]{14})|([0-
3202 : failed : error init : 0.117525967 (s) : ^
3203 : unparsable : unparsable : 0.063509534 (s) : [0-9]{14}\\.?[
3204 : unparsable : unparsable : 0.078317203 (s) : (regex)^([1-9]|[
3205 : failed : error init : 0.103369496 (s) : ^
3206 : unparsable : unparsable : 0.07188764 (s) : \"([A-Z][a-z][
3207 : failed : failed : 0.809302952 (s) : \\d{4}\\-\\d{2}\\d
3208 : unparsable : unparsable : 0.12034069 (s) : [\\d.-]+,?[\\d
3209 : unparsable : unparsable : 0.082108471 (s) : ^(?=.*?[A-Z]
3210 : unparsable : unparsable : 0.049452459 (s) : (htt
3211 : failed : failed : 3.033901306 (s) : \\b[0-9]\\d{0,2}(\\.\\d{1,2})?\\b
3212 : failed : failed : 0.316951885 (s) : \"^[0-9]\\d{1,2}\\.\\d{1,2}$\"3. Validating an email address with RegExWrite a Python function that takes in an email address as a string and returns True if it is a valid email address, and False
3213 : unparsable : unparsable : 0.053969966 (s) : (\\d{1,3}\\.\\d{1,2})|(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(\\d{1,3}\\.\\d{1,3}\\.\\d{1,
3214 : failed : failed : 0.135269144 (s) : import redef regex
3215 : failed : failed : 1.610954727 (s) : r\"^\\d+.\\d{1,2}$\"
3216 : failed : failed : 0.559319818 (s) : \"\\d+\\.(\\d{2})\\b\"
3217 : failed : failed : 0.294700889 (s) : r\"^[1-9][0-9]*\\.?\\d{2}$\"
3218 : unparsable : unparsable : 0.094004174 (s) : (example onl
3219 : failed : failed : 23.737258681 (s) : [1-9]\\d?\\d?\\.\\d{2}|\\.\\d{2}|\\.\\d\\d
3220 : failed : failed : 0.778458617 (s) : ^[-+]?0?\\.?\\d{1,2}$
3221 : failed : failed : 0.340697797 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3222 : failed : failed : 0.442344301 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3223 : failed : failed : 0.421086021 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3224 : failed : failed : 0.337655678 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3225 : failed : failed : 0.302506996 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3226 : failed : failed : 0.447156309 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3227 : failed : failed : 0.470947304 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3228 : failed : failed : 0.285128069 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3229 : failed : failed : 0.376151029 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3230 : failed : failed : 0.363794054 (s) : Validate location, latitude and longitude separated by space, where latitude is expressed as compass direction (N or S),degrees,minutes,seconds and longitude is expressed as compassdirection (E or W),degrees,minutes,seconds.\rRange check for minutes and seconds (0-59),\rmax.latitude 90.00.00, max longitude 180.00.00Match exampl
3231 : failed : failed : 2.419635035 (s) : (or similar) ^(/[\\*#][^*/]*$)
3232 : failed : failed : 0.777777303 (s) : /^
3233 : unparsable : unparsable : 0.095059709 (s) : (\\/\\*)(
3234 : failed : error init : 0.097417086 (s) : [\\s\\S]*?
3235 : failed : pumping failed : 25.642241509 (s) : [\\w\\s]+[^\\*\\s]+[\\w\\s]*
3236 : failed : pumping failed : 20.520154532 (s) : ^\\/\\* *(.+)\\*\\/$
3237 failed : unparsable : 0 (s) : Please check your regex.
3238 : failed : failed : 0.206625771 (s) : \\/\\/\\*
3239 : failed : pumping failed : 14.463636662 (s) : ^\\/\\*\\s*(.*?)\\*\\/$
3240 : failed : failed : 344.470495773 (s) : \\/*[^*/]*[^/]*
3241 : failed : failed : 1.45212602 (s) : 0[1-9]|1[0-2]
3242 : failed : failed : 0.124514484 (s) : [0-9]
3243 : failed : error init : 0.104949531 (s) : ^
3244 : failed : failed : 10.145545112 (s) : [0-9]|[1-9][0-9]|[1-9]\\d|[1-9]\\d\\d|[1-9]\\d\\d\\d
3245 : unparsable : unparsable : 0.110873177 (s) : ?[a-z]+
3246 : failed : failed : 0.35018214 (s) : r\"^0*(\\\\d{1,}\\\\d{1,}\\\\d{1,}\\\\d{1,}\\\\d{1,})$\"
3247 : failed : failed : 1.507039922 (s) : (\\d{1,3}|1023)
3248 : failed : failed : 0.16777189 (s) : ^0[1-9]0[0-9]$
3249 : failed : failed : 0.139530532 (s) : ^[0-9]{1,16}$I tried Regex101 and it's giving me this respon
3250 : failed : failed : 54.222386 (s) : \"[0-9]{3,8}|[0-9]{3,9}\"
3251 failed : unparsable : 0 (s) : Please check your regex.
3252 : failed : failed : 0.950229985 (s) : \\b[1-9][0-9]{0,4}\\bDescripti
3253 : failed : failed : 0.158357266 (s) : /
3254 : failed : failed : 0.477170161 (s) : (You can choose your own answer)
3255 : failed : failed : 1.587059547 (s) : r'
3256 : failed : failed : 0.282985092 (s) : RpnMatchesRegExp(RegExp,RpnMatches)
3257 : unparsable : unparsable : 0.069337301 (s) : r\"^(?=
3258 : failed : failed : 0.104496744 (s) : ^[1-9][0-9]{0,3}
3259 : failed : failed : 1.601995795 (s) : [^0-9]{1}\\d{1,2}
3260 : failed : failed : 0.278611635 (s) : ^(\\d{1,5})(\\d{1,5})(\\d{3,3})$
3261 : failed : failed : 1.18883379 (s) : \\d{4}(?=\\d{4}(?=(\\d{4}|\\d{3})$))
3262 : failed : failed : 96.497116478 (s) : [a-zA-Z0-9]{4,6}, [0-9]{4,}
3263 : failed : failed : 22.022572751 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{4}
3264 : failed : failed : 0.303847712 (s) : [1-9]+[1-9]|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|
3265 : failed : failed : 1.137129662 (s) : ([0-9]{4}[0-9]{2}[0-9]{2})
3266 : failed : failed : 0.530982081 (s) : [00]?[1-9]?[0-9][0-9]
3267 : failed : failed : 0.875309725 (s) : [\\d]{4,15}\\d{2,4}
3268 : failed : failed : 0.260516178 (s) : \\b\\d{4} \\- \\d{4}\\b or \\d{4}-\\d{4} or \\d{3}-\\d{3} or \\d{2}-\\
3269 : failed : failed : 3.216422986 (s) : (49152|65535|\\d+)/\\d+$
3270 : failed : failed : 40.096597988 (s) : [^a-z\\d]|[0-9]|[a-z]{1}[0-9]{1}|[0-9]{1,2}[0-9]
3271 : failed : failed : 1.012627119 (s) : [0-3][0-9][0-9][0-9][0-9][0-9]
3272 : failed : failed : 3.787130277 (s) : ([0-9]{1,3})
3273 : unparsable : unparsable : 0.064456424 (s) : [0-9]{3}[0-9]{2}[0-9]{4}|49[0-9]1[0-9]|49[0-9]1[0-
3274 : failed : failed : 78.555700011 (s) : 0|1023|49151|50000|50|51|52|53|54|55|56|57|58|59|60|61|62|63Generate a RegEx for the above description
3275 : failed : failed : 47.388208266 (s) : [0-9]{3,4}(\\.[0-9]{3,4})*I found the problem to be th
3276 : failed : failed : 1.390558337 (s) : [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]
3277 : failed : pumping failed : 88.281518524 (s) : (.*)  \\d+
3278 : failed : failed : 0.184666029 (s) : ^\\d+$
3279 : failed : failed : 4.001144714 (s) : ^.*?(\\d{1,2}-\\d{1,2}|\\d{1,2})\\.*?$
3280 : unparsable : unparsable : 0.106487256 (s) : The RegEx is r\"(0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|
3281 : failed : failed : 0.43977654 (s) : (0-65535)
3282 : failed : error init : 0.132576258 (s) : |(?=(.*\\s){3,})(?=(.*\\d))(.*)\\s.*\\d|
3283 : failed : failed : 0.173786406 (s) : - \"Po
3284 : unparsable : unparsable : 0.090983156 (s) : [0-9]|[1-9][0-9]|[1-9][1-9][0-9]|[1-9][1-9][1
3285 : failed : failed : 0.721691231 (s) : \\d{3}[\\d\\s]{3}[\\d\\s]{3}\"\"\"
3286 : failed : failed : 0.21851905 (s) : \\d\\d\\d+
3287 : failed : failed : 0.758083228 (s) : ^[0-9]{4,14}$|^0{1,6}$|^65535$
3288 : failed : failed : 3.366710962 (s) : (\\d{1,3}[\\.\\s]?\\d{1,3})
3289 : failed : failed : 0.136449882 (s) : ^\\d{1,2}
3290 : unparsable : unparsable : 0.081352487 (s) : \"^(\\d{1,
3291 : failed : failed : 0.11443148 (s) : ^\\d{3}-\\d{3}-\\d{4}$
3292 : failed : failed : 0.196137569 (s) : ^[0-9]{3}[-.][0-9]{3}[-.][0-9]{4}$
3293 : failed : failed : 0.690735377 (s) : r'^[0-9]{1,9}$'
3294 : failed : failed : 0.153435192 (s) : \\d\\d\\d\\d\\d
3295 : failed : failed : 0.801660381 (s) : \\d{6,10}
3296 : failed : failed : 0.16117253 (s) : ^[0-9]{7,11}$
3297 : failed : failed : 1.295748506 (s) : \\d{3,6}
3298 : failed : failed : 0.365885764 (s) : [0-9]{1,9}
3299 : unparsable : unparsable : 0.060481331 (s) : [0-9]{4}[-.]?[0-9]{3}[-.]?[0-9]{4}|[0-9]{4}[-.]?[0-9]{2}[-
3300 : failed : failed : 0.17012015 (s) : ^[0-9]{3}[0-9]{3}[0-9]{4}$
3301 : failed : failed : 4.449284281 (s) : \\s*/\\s
3302 : failed : failed : 0.601082529 (s) : /^[^\\s+/\\r\\n]
3303 : failed : failed : 6.625923418 (s) : (?m)(/\\*|--)(.*)
3304 : failed : failed : 0.867806635 (s) : ^\\*\\/.*$
3305 : failed : failed : 1.446319783 (s) : /\\s*
3306 : failed : failed : 0.283383357 (s) : ^\\* (.*)$
3307 failed : unparsable : 0 (s) : Please check your regex.
3308 : failed : failed : 23.360749402 (s) : (?s)\\/[^\\*]+\\/
3309 : failed : pumping failed : 8.008028559 (s) : \\*.*?\\*
3310 : failed : failed : 9.956113191 (s) : \\/\\*\\s+[^*\\r\\n]+\\s*\\
3311 : failed : failed : 8.090364907 (s) : [^0-9A-Za-z]\\
3312 : failed : failed : 89.923351469 (s) : [0-9]{5}[ABC-]\\
3313 : unparsable : unparsable : 0.073776081 (s) : \\d{3}[A-Z]{1
3314 : unparsable : unparsable : 0.075082784 (s) : - \"(^[A-Za-z0
3315 : failed : failed : 0.17884776 (s) : This is a RegEx that matches any vehicle VIN number that
3316 : unparsable : unparsable : 0.116221708 (s) : \\w+[0-9]{3}\\s[
3317 : unparsable : unparsable : 0.081085438 (s) : ^([0-9]{8})[0-
3318 : unparsable : unparsable : 0.065339846 (s) : - [A-Z][0-9]{1
3319 : failed : failed : 1.349784275 (s) : (\\d{4}-)?\\d{3}
3320 : failed : failed : 0.496504733 (s) : /[0-9a-f]{8}-
3321 : unparsable : unparsable : 0.063623327 (s) : +
3322 failed : unparsable : 0 (s) : Please check your regex.
3323 : unparsable : unparsable : 0.072077464 (s) : (
3324 : failed : failed : 2.423328331 (s) : /
3325 : failed : error init : 0.125403386 (s) : ^
3326 : unparsable : unparsable : 0.066750263 (s) : (
3327 : unparsable : unparsable : 0.098339781 (s) : +
3328 : unparsable : unparsable : 0.067154028 (s) : (
3329 : unparsable : unparsable : 0.059306394 (s) : (
3330 failed : unparsable : 0 (s) : Please check your regex.
3331 : unparsable : unparsable : 0.074813861 (s) : (\\b
3332 : failed : failed : 24.929028311 (s) : \\b[A-Za-z0-9._-]+\\b
3333 : failed : error init : 0.119094399 (s) : (\\b(\\w)(?!\\d+))*?
3334 : failed : failed : 0.096558311 (s) : I match
3335 : failed : failed : 0.533245373 (s) : \"I\\d{1,20}\"
3336 : failed : failed : 0.115609734 (s) : \\b0-9A-Za-z\\s\\w\\s+\\b
3337 failed : unparsable : 0 (s) : Please check your regex.
3338 : unparsable : unparsable : 0.116571302 (s) : (I match) or (I match 2) or (I match 3) or (I match 4) or (I
3339 : unparsable : unparsable : 0.07524104 (s) : ^(?=.*[a-z])(?=.*\\d)(?=.*[\\s\\-
3340 : failed : failed : 5.025315598 (s) : ^.*\\b[a-zA-Z0-9\\s]{2,20}\\b.*$
3341 : unparsable : unparsable : 0.057550101 (s) : /(^[\\d.\\-]{1,3}
3342 : failed : error init : 0.159966645 (s) : ^
3343 : failed : failed : 0.176995206 (s) : ^0(.|.)+$
3344 : unparsable : unparsable : 0.050243608 (s) : (?=(?!0\\.)[0-9]{3
3345 : failed : failed : 0.126571601 (s) : ^[2-9]\\d?\\d?\\
3346 : unparsable : unparsable : 0.083932181 (s) : \\b(\\d{1,3}\\.){3}(\\
3347 : failed : error init : 0.113952064 (s) : ^
3348 failed : unparsable : 0 (s) : Please check your regex.
3349 : unparsable : unparsable : 0.059555029 (s) : /^[0-9]{1,3}\\.[0
3350 failed : unparsable : 0 (s) : Please check your regex.
3351 : failed : failed : 0.26561904 (s) : rx = re.compile(r'^[1-9][0-9,].*$')
3352 failed : unparsable : 0 (s) : Please check your regex.
3353 : failed : failed : 0.128661619 (s) : ^[13579]$
3354 : failed : failed : 0.773269905 (s) : \"^[1-9][0-9]*$\"```python# Ide
3355 : failed : failed : 0.432751725 (s) : (^\\d+$)
3356 : failed : failed : 0.158362485 (s) : ^[1-9][0-9]*
3357 : failed : failed : 0.223591555 (s) : r'^[1-9][0-9]*$'Exercise 2Generate a list of all possible match examples for the RegEx r'^[a-zA-Z]+$'. Answ
3358 : failed : pumping failed : 194.237605295 (s) : .*[1-9][0-9]*$\"\"\"
3359 : failed : failed : 0.162185984 (s) : ^[1-9]\\d*$
3360 : failed : failed : 0.153841832 (s) : The regular expression to match the pattern would be \"\\d+\".
3361 : failed : failed : 1.241705764 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3362 : failed : failed : 0.78007013 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3363 : failed : failed : 1.290435161 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3364 : failed : failed : 1.386750227 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3365 : failed : failed : 1.037052992 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3366 : failed : failed : 0.857579301 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3367 : failed : failed : 0.573801798 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3368 : failed : failed : 0.884199558 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3369 : failed : failed : 0.841583763 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3370 : failed : failed : 0.67321115 (s) : This expression was originally developed for user names. Matching text must have 6 - 50 characters, cannot contain spaces, must begin with an alpha character, can contain mixed case alpha, digits, and the following special characte
3371 : failed : failed : 0.217954865 (s) : ^[\\w+ -]*$\"\"\"
3372 : failed : failed : 0.861591704 (s) : \\w[^0-9a-zA-Z]
3373 : failed : failed : 1.621929468 (s) : \\b[\\w.-]*\\b
3374 : failed : failed : 0.833152066 (s) : \"[^a-zA-Z0-9]\"
3375 : failed : failed : 1.615441036 (s) : ^[\\w]+$
3376 : failed : timeout : 600 (s) : (?=.{5,})[a-zA-Z0-9._-]The (?=.{5,}) part is a positive lookahead,
3377 : failed : failed : 3.680312904 (s) : \\W
3378 : failed : failed : 1.893025971 (s) : \\W
3379 : failed : failed : 4.791549007 (s) : (?!^)([\\W_]+)(?!$)
3380 : failed : failed : 3.730474399 (s) : (?<!\\w)(?!\\w)(?!\\W)  (?<!\\w)      # Do not match a word (?!\\w)
3381 : failed : pumping failed : 126.52361736 (s) : [a-z][a-z.-_][a-z][a-z.]+$
3382 : unparsable : unparsable : 0.1003767 (s) : ^[a-zA-Z0-9]*[A-Za-z0-9]*[0-9]*[A-Za-z0-9
3383 : failed : failed : 0.156736024 (s) : [a-zA-Z0-9-_. ']{11}
3384 : failed : failed : 1.252037323 (s) : m.u.'b.a\"
3385 : unparsable : unparsable : 0.096432204 (s) : [muk\\w+\\-\\w+\\.|'\\-\\w+\\-\\w+'|\\w+\\-\\('\\-\\w+\\-\\w+\\')|\\w
3386 : failed : failed : 0.371030113 (s) : m.u-z.aI like to eat pancakes and waffles I know that I am feeling very hungry I usually wake up early because I have to go to work
3387 : unparsable : unparsable : 0.117831849 (s) : (.a|.b|.c|.d|.e|.f|.g|.h|.i|.j|[a-z]+)(\\s|-|\\.
3388 : failed : failed : 10.746749559 (s) : ^(Muk.*?) (\\.)(apostrophe|dashes)'s (.*)$
3389 : failed : failed : 0.625804145 (s) : m(u[l]p.d[i]b`)e y[a]
3390 : failed : pumping failed : 75.020042372 (s) : ([a-zA-Z]+)([\\w\\s-]*)([^a-zA-Z]*)
3391 : unparsable : unparsable : 0.056786572 (s) : \\([a-z0-9_\\-]*\\s+{{
3392 : unparsable : unparsable : 0.071728301 (s) : get { and }
3393 : unparsable : unparsable : 0.081490346 (s) : ^\\s*(get \\{)\\s*([^}]+)$
3394 : unparsable : unparsable : 0.071956278 (s) : \\bget\\s*\\{\\{(.+)\\}\\s*\\}
3395 : unparsable : unparsable : 0.078234417 (s) : get\\b\\{(.*?)\\}\\bI'm writing a regular expression in Python for the following ta
3396 : unparsable : unparsable : 0.097827203 (s) : get{(^|\\s)\\w+\\s(}\\w+)
3397 : unparsable : unparsable : 0.087104032 (s) : get \\\\{([^}]+)\\\\}
3398 : unparsable : unparsable : 0.103128286 (s) : get\\s*{\\S+}
3399 failed : unparsable : 0 (s) : Please check your regex.
3400 : unparsable : unparsable : 0.069447477 (s) : {\"get (\\\\w+) ({})\".format(w, b)}
3401 : unparsable : unparsable : 0.0859102 (s) : (regex) ([\\d]{4}[\\-\\
3402 : unparsable : unparsable : 0.06511209 (s) : ^(?P<ID>\\d{10}-\\
3403 : unparsable : unparsable : 0.063848558 (s) : \"(?> [1-9]\\d{1,
3404 : unparsable : unparsable : 0.081720266 (s) : (\\d{4}-\\d{4}-\\
3405 : unparsable : unparsable : 0.081735754 (s) : ^(?!(?<!\\d)\\d{12
3406 : unparsable : unparsable : 0.061982188 (s) : [0-9][0-9][0-
3407 : unparsable : unparsable : 0.059830104 (s) : ^[a-zA-Z]{3}\\d{
3408 : failed : failed : 0.124737292 (s) : ^\\d{5}[-\\s\\-]?\\
3409 : unparsable : unparsable : 0.083900152 (s) : /((\\d)(\\d-\\d)(\\d
3410 : unparsable : unparsable : 0.064687005 (s) : ^(?=.*[0-9])[0-
3411 : unparsable : unparsable : 0.056162957 (s) : \\d{1,2}\\.\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}\\b[Host 
3412 : failed : failed : 0.158944003 (s) : ^[0-9]{1,4}\\.[0-9]{1,5}$
3413 : failed : failed : 0.544440677 (s) : \"^[1-9][0-9][0-9]$\"
3414 : failed : failed : 0.128205656 (s) : ^[0-9]\\d$
3415 : failed : failed : 0.629333595 (s) : r'^[0-9]{1,3}[\\s\\S]*$'
3416 : failed : failed : 0.705883693 (s) : (0-65535).
3417 : failed : failed : 2.166821569 (s) : [0-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]
3418 : failed : failed : 0.390718137 (s) : ^(0|\\d{3}|[1-9]\\d|[1-9][0-9]{3})$
3419 : failed : failed : 8.143167861 (s) : \\b(\\d{1,3}\\.){3}\\d{1,3}\\b
3420 : failed : failed : 21.84950547 (s) : ([1-9]\\d*|1[1-9]\\d|2[0-4]\\d|25[0-5])$
3421 : failed : failed : 0.375191435 (s) : \\s\\+\\d{1,3}\\s\\(0?\\)?\\s\\d{1,3}
3422 : unparsable : unparsable : 0.056964205 (s) : ^(0[1-9]|1[012])\\s*0[1-9]{1,2}$ (
3423 : failed : failed : 0.158200412 (s) : ^0\\d{2}[\\s\\d]{2}([-\\s]\\d\\d)?\\s*
3424 : failed : failed : 0.16816239 (s) : ^0[1-9]\\d{3}([ \\.-]\\d{3}){0,2}$
3425 : failed : failed : 0.457308142 (s) : \\d{10}(\\.\\d{3})
3426 : failed : failed : 0.99742867 (s) : ^\\+\\d{3}(\\s\\d{3}){2}$
3427 : unparsable : unparsable : 0.093161629 (s) : ^(0|[1-9][0-9]?)0?([1-9][0-9]?)[0
3428 : unparsable : unparsable : 0.071259074 (s) : \\d{0}(?![0-9])     (?<!\\+[0-9])(?![0
3429 : failed : failed : 8.405280183 (s) : ^\\+\\d{2} \\d{3} (\\d{2})$
3430 : failed : failed : 0.122840815 (s) : ^0\\d{10}
3431 : failed : failed : 1.289202025 (s) : (09) 9999 9999
3432 : failed : failed : 0.413572342 (s) : r\"^[-\\d]+( \\d)?[-\\d]*$\"
3433 : unparsable : unparsable : 0.119900316 (s) : (\\(?[1-9]?\\d{0,9}
3434 : failed : failed : 29.803682324 (s) : (9999|999999999|99999999912345)Explanati
3435 : failed : failed : 3.083744285 (s) : (?<![0-9])9999[0-9]{9}|(?<![0-9])999999999This should match the
3436 : failed : failed : 18.060176812 (s) : [0-9]{3}[-._][0-9]{3}[-._][0-9]{4}
3437 : failed : error init : 0.097379415 (s) : ^
3438 : unparsable : unparsable : 0.064156273 (s) : ^\\(?(\\d{3})[ -]?(\\d{3})[ -]?(\\d{4})\\)?$
3439 : failed : failed : 0.605497034 (s) : (09)\\d{3}[\\s-]?\\d{3}[\\s-]?\\d{4}
3440 : failed : failed : 0.493963161 (s) : \"\\d{3}-\\d{3}-\\d{3}\"
3441 : failed : failed : 1.986612885 (s) : \"(ON|PE|NB)(M)?$\"
3442 : failed : failed : 7.72718408 (s) : r'(ON|PE)+'
3443 : failed : failed : 0.526507925 (s) : \\b[a-z]{3}\\s[a-z]{2}\\b
3444 : failed : failed : 0.327855213 (s) : ([A-Z][A-Z][0-9][0-9]\\/[0-9][0-9]\\/[0-9][0-9])You have to do this for more than 10 provinces and territories.You have to do this for more than 10 cities and towns.You have to do this for more than
3445 : failed : failed : 0.248854072 (s) : [ON|PE|NB|OB|NM]
3446 : failed : failed : 0.529224244 (s) : \"ON|PE|NB\"
3447 : unparsable : unparsable : 0.074308646 (s) : [ ] { 2,3 } ON | PE | NB
3448 : failed : failed : 0.740993973 (s) : [\\w-]{2}\\s[a-z]{2}\\s[A-Z]{2}\\d{4}
3449 failed : unparsable : 0 (s) : Please check your regex.
3450 : failed : failed : 14.233891771 (s) : [^a-zA-Z0-9]+
3451 : failed : failed : 0.146455832 (s) : ^[0-9]$
3452 : failed : failed : 18.838793024 (s) : - \"^[1-9][0-9]|[1-9][0-9][0-9]$\"
3453 : failed : failed : 0.784141754 (s) : ^([0-1]?[0-9]|2[0-3]|0?[1-9])/$
3454 : unparsable : unparsable : 0.074138368 (s) : (0|[1-9]|1[012]|25[0-3]|[12][0-9]|31)(/|$
3455 : failed : failed : 0.256647274 (s) : /^(0|[1-9]?[0-9]?)$/  Regex to match a valid month only
3456 : failed : failed : 4.138958215 (s) : ^[1-9]|1[012]\\d|12$
3457 : failed : failed : 1.746524583 (s) : [0-9]\\?
3458 : failed : failed : 1.651111955 (s) : ^(0?[1-9])|(1[012])$
3459 : unparsable : unparsable : 0.087281945 (s) : \\d{1,2
3460 : failed : failed : 1.80631345 (s) : \\d{1,2}$
3461 : failed : failed : 17.344208473 (s) : [^\\d]$|\\d[^\\d]
3462 : failed : failed : 0.667469373 (s) : \"1890|1910|1920\"
3463 : failed : failed : 1.236242399 (s) : \\b(19[5-9][0-9]|2[0-9][0-9]|200[0-3]|[0-9]{3})\\b
3464 : failed : failed : 16.11830693 (s) : [1-9][0-9]{2}-[0-9][0-9]
3465 : failed : failed : 0.775268933 (s) : \\d{4}-\\d{2}-\\d{2} \\d{2}-\\d{2}-\\d{2}
3466 : failed : failed : 0.396893885 (s) : \\b\\d{4}\\-\\d{2}\\-\\d{2}\\b
3467 : failed : failed : 2.180954356 (s) : [1850, 1977, 2100]```
3468 : failed : failed : 1.275511696 (s) : r\"(1850|1977|2100)\\b\"
3469 : failed : failed : 7.519011556 (s) : \"|[1850-2200]\"
3470 : unparsable : unparsable : 0.062212148 (s) : ^[1849-2100]$
3471 failed : unparsable : 0 (s) : Please check your regex.
3472 : failed : failed : 8.675357049 (s) : \"foo=([^=,]+)/(,|$)\"
3473 : failed : failed : 3.350815701 (s) : foo=([^,]*)
3474 : failed : failed : 1.031401946 (s) : \"foo=(\\w+),foo1=(\\w+),foo2=(\\w+),\"Explanati
3475 : failed : failed : 45.954933496 (s) : /[^,=]*=
3476 : failed : failed : 5.922982689 (s) : (?<=foo=)(?=\\s*)\\w+(,\\s*\\w+)*
3477 : unparsable : unparsable : 0.121884036 (s) : (^\\w*=\\s*(\\w\\s*,)*\\s*(\\w\\s*=\\s*(\\w\\s*,)*\\s*(\\w\\s*,
3478 : unparsable : unparsable : 0.092189992 (s) : \"^( [a-zA-Z0-9_\\-=\\s]* )$\"
3479 : failed : failed : 0.584198137 (s) : ^(\\w+)(=\\w+)(,\\w+)*$
3480 : failed : failed : 0.523825509 (s) : r\"(foo=[a-zA-Z0-9_]+), foo\"
3481 : failed : failed : 0.690744966 (s) : \"^[0-9]{2}/[0-9]{2}/[0-9]{4}$\"
3482 : failed : failed : 0.182598263 (s) : ^[a-z][0-9]{3}/[a-z][0-9]{2}$
3483 : failed : failed : 0.668531609 (s) : \\d{1,2}\\/\\d{1,2}\\/\\d{4}
3484 : unparsable : unparsable : 0.0773907 (s) : (^
3485 : unparsable : unparsable : 0.05480096 (s) : r\"^(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])\\/(0[1-9]|[12][
3486 : failed : failed : 0.520864944 (s) : \\b([0-9]{2})/([0-9]{2})/([0-9]{4}\\b)
3487 : failed : failed : 0.255243038 (s) : ^\\d{1,2}/\\d{1,2}/\\d{4}$
3488 : failed : failed : 0.145815023 (s) : d/m/yyyy
3489 : failed : failed : 1.104079011 (s) : (0[1-9]|1[012])/[0-9]{2}/[0-9]{4}
3490 : failed : failed : 0.963796914 (s) : - (0?[1-9][0-9])/(0?[1-9][0-9])/(0?[1-9][0-9])
3491 : failed : failed : 38.768002233 (s) : ^[A-Za-z0-9\\W]{1,}\\w{1}$How to use this RegEx with Python?
3492 : failed : failed : 1.300276483 (s) : ^[a-zA-Z\\d\\W]*$
3493 : failed : failed : 1.916434912 (s) : \\b
3494 : failed : failed : 0.125646 (s) : ^\\w{6}\\W$
3495 : failed : failed : 7.603701905 (s) : ^[A-Za-z\\d\\W]+$
3496 : unparsable : unparsable : 0.095463683 (s) : ^[A-Za-z0-9!@#$%^&*()_+-=`~`\\[\\]_`a-zA-Z
3497 : failed : failed : 1.923443136 (s) : ^(?=.*[a-zA-Z])(?=.*\\d)(?=.*\\W)[a-zA-Z\\d\\W]+
3498 : failed : failed : 0.619960498 (s) : ([A-Za-z0-9\\W]*)([^A-Za-z0-9\\W]*)
3499 : unparsable : unparsable : 0.129364343 (s) : [a-zA-Z][a-zA-Z0-9][a-zA-Z0-9!@#$%^&*()\\-+=/
3500 : failed : failed : 0.148366685 (s) : [A-Za-z0-9\\-\\W_]*
3501 : failed : failed : 1.11218577 (s) : -\\d{3}(,\\d{3})*(\\.\\d+)$
3502 : failed : failed : 0.152359241 (s) : import re
3503 : failed : failed : 0.879094652 (s) : (\\d+)([.,]\\d+)?
3504 : failed : failed : 0.702013977 (s) : \\d{3}
3505 : failed : failed : 0.851960054 (s) : \\d{1,3}(,\\d{3})?(\\.\\d{1,2})?
3506 : failed : failed : 2.137476739 (s) : [0-9], [0-9]\\.[0-9], [0-9]-[0-9]?
3507 : failed : failed : 5.791923847 (s) : [0-9]\\s*[,\\.]\\s*[0-9]{3}
3508 : unparsable : unparsable : 0.074242413 (s) : (\\-?[0-9]{1,3}\\s){4}\\.(\\d{1,3}[\\s]?\\d{1,3}[\\s]?\\
3509 : failed : failed : 0.129334146 (s) : import re
3510 : failed : failed : 28.217181042 (s) : (1[0-9]*)((,[0-9]{3})+)- (1[0-9]*)((,[0-9]{3})){1}
3511 failed : unparsable : 0 (s) : Please check your regex.
3512 : failed : pumping failed : 26.552559004 (s) : \"//(.*?)/*(.*?)\\s*\"
3513 : failed : failed : 17.60643546 (s) : ( [^/]* ) // comment
3514 : failed : failed : 46.382292897 (s) : /\\/?(.*?)&lt;\\/?(.*?)
3515 : failed : failed : 61.124746387 (s) : /var/www/html/.+\\s+/\\w
3516 : unparsable : unparsable : 0.125954577 (s) : ^(//.*|/\\*.*|/\\*
3517 : unparsable : unparsable : 0.084013573 (s) : (\\/\\/[^\\/]*|\\*\\/[^
3518 : failed : failed : 23.82221629 (s) : (//)(.*?)(\\*/)
3519 : failed : failed : 9.693970031 (s) : ^//.*/#.*
3520 : failed : failed : 0.170474464 (s) : // and /*
3521 : failed : failed : 1.871089252 (s) : \\
3522 : failed : failed : 3.219741721 (s) : \"
3523 : unparsable : unparsable : 0.074382835 (s) : [
3524 : unparsable : unparsable : 0.088278048 (s) : (
3525 : failed : failed : 3.285889488 (s) : 0
3526 failed : unparsable : 0 (s) : Please check your regex.
3527 : failed : failed : 0.435175476 (s) : ACT
3528 : failed : error init : 0.095668837 (s) : ^
3529 failed : unparsable : 0 (s) : Please check your regex.
3530 : unparsable : unparsable : 0.103345251 (s) : ([
3531 : failed : failed : 0.152288978 (s) : M
3532 failed : unparsable : 0 (s) : Please check your regex.
3533 : failed : failed : 0.877704333 (s) : L
3534 : failed : failed : 0.122382899 (s) : \"
3535 : unparsable : unparsable : 0.087726676 (s) : \"(
3536 : unparsable : unparsable : 0.086409423 (s) : ([
3537 : unparsable : unparsable : 0.098274079 (s) : [
3538 : failed : failed : 3.126660873 (s) : L
3539 : failed : failed : 0.166972886 (s) : L
3540 : failed : failed : 0.961284045 (s) : /
3541 : failed : failed : 0.110007038 (s) : \\
3542 : unparsable : unparsable : 0.064563585 (s) : (
3543 : failed : error init : 0.115563437 (s) : ^
3544 : unparsable : unparsable : 0.065596616 (s) : ([
3545 : failed : error init : 0.122920574 (s) : ^
3546 : failed : error init : 0.108202633 (s) : ^
3547 : failed : error init : 0.113971912 (s) : ^
3548 failed : unparsable : 0 (s) : Please check your regex.
3549 : failed : failed : 0.127389069 (s) : R
3550 : unparsable : unparsable : 0.05674753 (s) : [
3551 : failed : failed : 12.205734795 (s) : [$1-9][0-9]{3}$
3552 : failed : failed : 0.155958019 (s) : ^(NL)([0-9]{12})([A-Z][0-9]{2})$
3553 : unparsable : unparsable : 0.094045401 (s) : \"NL[A-Z][A-Z][A-Z][0-9]{2}/[A-Z]{3}[0
3554 : unparsable : unparsable : 0.089157903 (s) : (?i)((?<![-0-9])[-\\d]+)?(?![-0-9])[A-Z
3555 : unparsable : unparsable : 0.06252369 (s) : \\d{9}[\\.-]\\d{8}[\\.-]\\d{2}[\\-]\\d{2}[\\-
3556 : unparsable : unparsable : 0.073365874 (s) : (NL)|([0-9]{10})-([0-9]{4})([0-9]{3})-([0-
3557 : unparsable : unparsable : 0.076245999 (s) : ^(NL[1-9]\\d{2}\\d{3}[-\\s]?B\\d{3}[-\\
3558 : failed : failed : 0.197840664 (s) : VAT Number Format with optional member state definition
3559 : failed : failed : 2.620691903 (s) : \"NL(([A-Z0-9]{3})-([0-9]{2})(\\w{3}(B))?)
3560 : failed : failed : 0.825386396 (s) : NL[0-9]{1,6}
3561 : unparsable : unparsable : 0.062806169 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3562 : unparsable : unparsable : 0.152461952 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3563 : unparsable : unparsable : 0.067436897 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3564 : unparsable : unparsable : 0.081788052 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3565 : unparsable : unparsable : 0.071329456 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3566 : unparsable : unparsable : 0.079217786 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3567 : unparsable : unparsable : 0.090473302 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3568 : unparsable : unparsable : 0.060974183 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3569 : unparsable : unparsable : 0.071102181 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3570 : unparsable : unparsable : 0.095202806 (s) : match 10-digit US phone numbers with optional brackets (either () or []) around the area code and optional separators (either - or.) between the groups of digits. Whitespace is also optional around the phone number.Match exampl
3571 : failed : failed : 7.292503218 (s) : [a-z]{1}\\d[a-z]{1}
3572 : failed : failed : 3.570110832 (s) : ^[a-zA-Z]{1,}[0-9]{1}$
3573 : failed : failed : 0.373002231 (s) : (Example) p@ssw0rd (RegEx) p[a-z]\\w+\"\"\"
3574 : failed : failed : 18.801581384 (s) : [a-z]{1}[0-9]{1}
3575 : failed : pumping failed : 112.796319498 (s) : .{1,}[a-z]\\d[a-z]- \"*[a-z]{1}[0-9]*[0-9]\"- \"^\\w{1}\\w*
3576 : failed : failed : 41.139664374 (s) : [0-9a-z]{1}[0-9]{1}$
3577 : failed : pumping failed : 42.244910629 (s) : ([a-zA-Z]+)([0-9]+)
3578 : failed : failed : 0.793865416 (s) : \"\\s[a-zA-Z]\\s[0-9]\"
3579 : failed : failed : 0.48172593 (s) : ^(?=.*[a-z])(?=.*[0-9])[a-z0-9]{8,}$
3580 : failed : pumping failed : 55.716793601 (s) : (?=.*[a-z])(?=.*[0-9]).*$
3581 : failed : failed : 0.198462567 (s) : ^[a-zA-Z]{6,20}[0-9]
3582 : unparsable : unparsable : 0.08228445 (s) : ^(?=.*[a-z])(?=.*[A-Z]
3583 : unparsable : unparsable : 0.076365653 (s) : ( [a-z]{6,20}|[0-9]{2
3584 : unparsable : unparsable : 0.079545418 (s) : ^[a-z]{6,20}(?=(.{2})*
3585 : unparsable : unparsable : 0.075432969 (s) : (?=.*[a-z])(?=.*[A-Z])(
3586 : unparsable : unparsable : 0.079674831 (s) : \"^(?=.*[a-z])(?=.*\\d)(
3587 : failed : failed : 1.228313031 (s) : [12a-zA-Z]{5,20}
3588 : unparsable : unparsable : 0.083554625 (s) : \\b[a-zA-Z0-9][a-zA-Z
3589 : failed : failed : 0.797286142 (s) : [a-zA-z0-9]{6,20}
3590 : unparsable : unparsable : 0.079203619 (s) : (?=.*[a-z])(?=.*\\d)(?=
3591 : failed : failed : 2.801911839 (s) : \\d+(\\.\\d+)?
3592 : unparsable : unparsable : 0.083916171 (s) : (
3593 : failed : failed : 0.17269735 (s) : ^[\\d.\\+]*$\"$123.1234\" (which is valid)\",\" (which is valid)Any other examples?Questi
3594 : failed : pumping failed : 59.059424877 (s) : (0|[1-9][0-9]*)\\.?([0-9]*)?$
3595 : failed : failed : 1.469344165 (s) : (\\d\\.\\d*|\\d+)([^0-9]|$)
3596 : failed : failed : 31.684970526 (s) : \"(?i)([0-9]+.?)\"
3597 : failed : failed : 2.637200691 (s) : ^[0-9]+(\\\\.[0-9]+)+$
3598 : failed : failed : 0.645868753 (s) : ^(\\\\d+\\\\.\\\\d+|\\\\d+$)
3599 : failed : failed : 0.586258991 (s) : \"^[^0-9,]*([0-9][^0-9,]*[0-9]|[0-9]+|[0-9]e+0[0-9,]+|[0-9]$)$\"
3600 : failed : failed : 1.733321406 (s) : \\d*\\.\\d+|\\d*
3601 : failed : failed : 0.176145257 (s) : ^\\d{0,2}\\.\\d{0,2}$
3602 : failed : error init : 0.115128765 (s) : (\\\\d{1,2}\\\\.\\\\d{1,2})The first digit, one or two decimal places, is matched by \\d{1,2}.The second decimal place is matched by \\.\\d{1,2}What if I want
3603 : failed : failed : 0.134476382 (s) : ^[0-9]{1,3}
3604 : failed : failed : 8.934189229 (s) : [0-9]|[1-9][0-9]|100
3605 : failed : failed : 0.300217293 (s) : (\\b0|\\b[1-9][0-9]*\\.[0-9]{1,2}\\b)The RegEx matches % value from 0 - 100. The two decimal places are used. The two decimal places are used. The pattern matches a
3606 : failed : failed : 0.576219067 (s) : (.*)
3607 : failed : failed : 0.509581185 (s) : \"^(?=^.{0,100}$)(?<=^.{0,10})(?<!^.{0,9}$)0$\"
3608 : failed : failed : 1.636312152 (s) : r'\\%((20|30|40|50)\\d{2})'
3609 : unparsable : unparsable : 0.099807586 (s) : \"^0(.00)$|^1(.0)$|^2(.00)$|^3(.3)$|^4(.4)$|^5(.5)$|^6(.6)$|^7(
3610 : failed : failed : 0.152515041 (s) : ^[0-99]\\.[0-9]{2}$
3611 : failed : failed : 0.312926178 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3612 : failed : failed : 0.437936219 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3613 : failed : failed : 0.326845254 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3614 : failed : failed : 0.389138875 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3615 : failed : failed : 0.446641226 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3616 : failed : failed : 0.78290412 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3617 : failed : failed : 0.465332486 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3618 : failed : failed : 0.757471515 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3619 : failed : failed : 0.506378386 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3620 : failed : failed : 1.406965907 (s) : This will find any XML within a string starting with the <?xml header and ending with the closing root tag. Replace </note> with your closing root tag. (use singleline and case insensitive) - I use this to pull xml written in a web document.Match exampl
3621 : failed : failed : 0.988910352 (s) : \"^[0-9]{4}/[0-9]{4}$\"
3622 : unparsable : unparsable : 0.052335851 (s) : var reg = new RegExp(`^[0-9]{4}/\\
3623 : failed : failed : 1.693478094 (s) : \\d{1,2}/\\d{3}|\\d{4}/\\
3624 : unparsable : unparsable : 0.082524028 (s) : (1) \\d{4}/\\d{4}|(2) \\d{
3625 : unparsable : unparsable : 0.096561296 (s) : ^(?=.*[1-9])(?=.*0[1-9]
3626 : failed : failed : 5.348987409 (s) : [1-9]?[0-9]/[0-9]{3}/
3627 : unparsable : unparsable : 0.058339767 (s) : \\d{1,2}/\\d{1,2}/\\d{
3628 failed : unparsable : 0 (s) : Please check your regex.
3629 : unparsable : unparsable : 0.100608734 (s) : (?<![a-zA-Z0-9])0*(?<!
3630 : failed : failed : 0.151221653 (s) : ^(0?[1-9]|[12]\\d|3[01])\\/
3631 : failed : error init : 0.098058235 (s) : ^
3632 failed : unparsable : 0 (s) : Please check your regex.
3633 failed : unparsable : 0 (s) : Please check your regex.
3634 : unparsable : unparsable : 0.064315791 (s) : (
3635 : failed : failed : 0.207189105 (s) : \\
3636 : failed : error init : 0.121639328 (s) : ^
3637 : failed : failed : 2.970443459 (s) : \\
3638 failed : unparsable : 0 (s) : Please check your regex.
3639 : unparsable : unparsable : 0.088565615 (s) : [
3640 : failed : failed : 3.007497755 (s) : \\
3641 : failed : error init : 0.094737175 (s) : ^
3642 failed : unparsable : 0 (s) : Please check your regex.
3643 failed : unparsable : 0 (s) : Please check your regex.
3644 : failed : failed : 0.172759205 (s) : Y
3645 : failed : failed : 2.816881439 (s) : \"
3646 : unparsable : unparsable : 0.072376634 (s) : [
3647 : failed : failed : 0.22762655 (s) : \"
3648 : unparsable : unparsable : 0.139215022 (s) : (
3649 : unparsable : unparsable : 0.103926438 (s) : ([
3650 : failed : failed : 2.391116479 (s) : \\
3651 : failed : failed : 19.888378861 (s) : ^([0-9.\\s]+(-[0-9.\\s]+)*)$
3652 : failed : failed : 0.441178351 (s) : \"^\\d+(\\.\\d+)?$\"
3653 : failed : pumping failed : 289.106861466 (s) : ([a-zA-Z0-9]+,)+Explanati
3654 : failed : failed : 10.23479148 (s) : (?<![0-9a-zA-Z])[-+]?(?<![0-9.a-zA-Z])[0-9]+(?![0-9])
3655 : failed : failed : 0.196855242 (s) : ^[-+]?[0-9]{1,3}(\\.[0-9]{1,3})?$
3656 : failed : failed : 0.409100139 (s) : ^\\d+(\\.\\d+)?$
3657 : failed : failed : 1.629956638 (s) : (\\d*\\.?\\d*)
3658 : failed : failed : 0.57002717 (s) : \\b\\d+
3659 failed : unparsable : 0 (s) : Please check your regex.
3660 : failed : failed : 0.195165682 (s) : ^\\d{3,6}\\.?\\d{3,6}$
3661 : failed : failed : 3.376713095 (s) : \"
3662 : unparsable : unparsable : 0.067225572 (s) : (
3663 : failed : error init : 0.124670206 (s) : ^
3664 : unparsable : unparsable : 0.109219274 (s) : (
3665 failed : unparsable : 0 (s) : Please check your regex.
3666 : failed : error init : 0.105382249 (s) : ^
3667 : unparsable : unparsable : 0.065009368 (s) : [
3668 failed : unparsable : 0 (s) : Please check your regex.
3669 : unparsable : unparsable : 0.063464209 (s) : [
3670 : unparsable : unparsable : 0.060754683 (s) : [
3671 : failed : failed : 0.120820067 (s) : ^[1-9][0-9]*$
3672 : failed : failed : 0.258977071 (s) : import re valid_number = re.compile(r'^[1-9][0-9]*$') m = valid_number.match(\"99999\") print m
3673 : failed : failed : 7.053124443 (s) : ^[1-9][0-9]*[0-9]{2}$ Explanati
3674 : failed : failed : 11.294801048 (s) : 0.0\\d*\\..*\\d*The RegEx I created is 0.0\\d*\\..*\\d*My problem now is that my RegEx does not work for this examp
3675 : failed : failed : 0.141405168 (s) : ^[1234][0-9]\\d$
3676 : failed : failed : 1.802021585 (s) : \\d+
3677 : failed : failed : 0.187537319 (s) : This regex will match positive integers within the range of 0-32767.
3678 : failed : failed : 2.343521342 (s) : \\b(0|[1-9]\\d{1,2})\\b
3679 : failed : error init : 0.125463689 (s) : ^
3680 : failed : failed : 0.143700058 (s) : ^[0-9]*$
3681 : failed : failed : 3.690558051 (s) : ^\\+\\d{3}\\/\\d{2}\\/\\d{4}$
3682 : failed : failed : 9.793468078 (s) : ^\\+\\d{3}\\([\\d\\)]{3}\\).*$
3683 : failed : failed : 1.09676751 (s) : [0-9]{3}[0-9]{3}[0-9]{3}[0-9]{4}
3684 : unparsable : unparsable : 0.066227526 (s) : +#######(###)#######
3685 : unparsable : unparsable : 0.061834863 (s) : +\\+\\d{3}\\( \\d{3})? \\d{3}-\\d{4}
3686 : unparsable : unparsable : 0.093751341 (s) : +[0-9]{1,3}[-0-9]{3}[.][0-9]{4}
3687 : failed : failed : 0.980193924 (s) : A+\\(800)\\s+(555)\\d{6}
3688 : failed : failed : 0.673070176 (s) : \\+\\d+[- ]\\d{3}\\d{3}[- /.]\\d{5}Examp
3689 : unparsable : unparsable : 0.09894855 (s) : \"+((\\d\\d)\\s?\\d\\d\\d)\\s?(\\d\\d)(\\s?\\d\\d\\d)?(\\s
3690 : unparsable : unparsable : 0.074067615 (s) : import re def extractNumber(phon
3691 : unparsable : unparsable : 0.084027971 (s) : ^(
3692 : unparsable : unparsable : 0.094688083 (s) : (.+?
3693 : unparsable : unparsable : 0.076261308 (s) : \"([0
3694 : failed : error init : 0.107380937 (s) : .*?
3695 : unparsable : unparsable : 0.057255139 (s) : ^(
3696 : unparsable : unparsable : 0.062912307 (s) : /[a
3697 : failed : failed : 1.308821862 (s) : (.*)
3698 : unparsable : unparsable : 0.069720407 (s) : ^(((
3699 : unparsable : unparsable : 0.074484806 (s) : [0-
3700 : unparsable : unparsable : 0.071427559 (s) : ^[
3701 : failed : failed : 1.102408087 (s) : \\d{6}
3702 : failed : failed : 29.828767299 (s) : [0-9A-Z]{3}[A-Z0]{2}[0-9]{5}
3703 : failed : failed : 0.309785014 (s) : /^[a-zA-Z]{3}\\d{2}\\d{4}$/This describes a string that begins with a letter, followed by three digits, two more digits, and finally
3704 : unparsable : unparsable : 0.128007586 (s) : r\"(
3705 : failed : failed : 0.216018875 (s) : \\d{4}[0-9]\\d{3}[0-9]{2}[A-Z]\\d{3}If you want to match these exact words in a
3706 : failed : failed : 1.075991261 (s) : [^A-Za-z0-9]{5}
3707 : failed : failed : 0.403994702 (s) : ^\\\\d+\\\\d+\\\\w{1}\\\\w{3}$
3708 : failed : failed : 0.298051524 (s) : ^[a-zA-Z]{32}[0-9A-Z]{4}$
3709 : failed : failed : 0.478681887 (s) : \"^[A-Z]{2}[a-zA-Z0-9]{3}$\"
3710 : failed : failed : 0.478909163 (s) : The RegEx could be \"NA[012]?[1-9]?[0-9][0-9][0-9]?SE\"
3711 : failed : failed : 24.981086403 (s) : ^<title>(.*?)</title>$
3712 : failed : failed : 62.666725418 (s) : <title>(.*)</title>
3713 : failed : failed : 88.373360364 (s) : <title>(.*?)</title>
3714 : failed : failed : 26.514710532 (s) : ^<title>(.*)</title>(.*)$
3715 : failed : failed : 65.89217344 (s) : <title>(.*)</title>
3716 : failed : failed : 117.105064531 (s) : \"<title>(.*?)</title>\"
3717 : failed : failed : 99.552716306 (s) : <title>(.*)</title>
3718 : failed : failed : 38.583492315 (s) : \"<[^>]*>(this title)</[^>]*>\"
3719 : failed : failed : 51.893370782 (s) : (<title>).*<\\/title>
3720 : failed : failed : 0.280153468 (s) : \"^<title>(.*?)</title>$\"  Explanati
3721 : failed : failed : 0.14626271 (s) : The valid regex will 
3722 : failed : failed : 27.011809787 (s) : <[^>]*>\\s*<[^>]*>(.*)</[^>]*>
3723 failed : unparsable : 0 (s) : Please check your regex.
3724 : failed : failed : 0.29205968 (s) : <h(1-6>[a-zA-Z_0-9]*?)>(.*)</
3725 : failed : failed : 110.025722785 (s) : (<[^<>]+>+?)
3726 failed : unparsable : 0 (s) : Please check your regex.
3727 failed : unparsable : 0 (s) : Please check your regex.
3728 : unparsable : unparsable : 0.09146697 (s) : (\\d)\\s(<h)([1-6]>)(\\s\\<(h1-
3729 : unparsable : unparsable : 0.103997932 (s) : '^<h(\\d)\\-(\\d)>(.+)\\s+(.+)\\s+(.+
3730 : unparsable : unparsable : 0.090623363 (s) : <([a-z0-9-]+\\.[a-z0-9-]+)>(test|
3731 : failed : failed : 0.139751966 (s) : ^[0-9]{1,3}-?[0-9]{1,3}
3732 : failed : error init : 0.109915296 (s) : (?<![A-Za-z0-9-])
3733 : failed : failed : 0.152527705 (s) : \\d\\d\\d\\d-\\d\\d\\d
3734 : failed : failed : 0.164490874 (s) : ^\\d{3}-\\d{2}-\\d{4}$\"\"\"
3735 : unparsable : unparsable : 0.071668871 (s) : (?<![0-9]|[a-zA-Z]{2}).(?<
3736 : unparsable : unparsable : 0.090744149 (s) : ^([4-9][5-9]|[1-9][0-9])-([4-9
3737 : failed : failed : 0.570207397 (s) : (\\d{3})[-\\/](\\d{3})[-\\/](\\d{4})
3738 : failed : failed : 0.464766788 (s) : /\\d
3739 : unparsable : unparsable : 0.096539004 (s) : ^([0-9]{2})-([0-9]{3})-([0-9]{
3740 : unparsable : unparsable : 0.074342109 (s) : \\b([0-9]{3}-)\\b|\\b([0-9]{3}\\-
3741 : unparsable : unparsable : 0.070850651 (s) : ^(([0-9]{3}|\\([0-9]{3}\\)) \\s+ [0
3742 : unparsable : unparsable : 0.073923928 (s) : (?<areaCode>(\\(?\\d{3}\\))?[.]?(\\d{3}\\))?[
3743 : unparsable : unparsable : 0.061724155 (s) : \\d{2}\\s\\d{2}\\/\\d{4}\\s\\d{5}\\s[a-zA
3744 : failed : failed : 0.200958233 (s) : ^(1|5|6|7|8) \\d{3}-\\d{4} \\D{2}
3745 : failed : failed : 4.915741561 (s) : (\\d{3})\\s*(\\w*?)\\s*(\\d{4})
3746 : failed : failed : 0.178336254 (s) : \\d{3}\\.\\d{3}\\.\\d{4}\\-\\d{4}\\.\\d{3}
3747 : unparsable : unparsable : 0.078458206 (s) : ^\\([0-9]{3}\\) [0-9]{3}\\-[0-9]{4} [a
3748 : failed : failed : 0.456153442 (s) : ([\\d\\s.]+)
3749 : unparsable : unparsable : 0.123277843 (s) : [-+]?[1-9][0-9]?[0-9]/[0-9]?[0
3750 : unparsable : unparsable : 0.064520865 (s) : (\\(?123\\.?\\d+\\.\\)? (\\d{4}|\\d{2}/\\d
3751 : failed : failed : 0.515693303 (s) : ^(.{3,15})(\\.jpg|\\.gif|\\.png)
3752 : failed : pumping failed : 39.521019217 (s) : [\\w.]+\\. [\\w.]+$
3753 : failed : pumping failed : 283.116006983 (s) : (.+\\.((jpg|gif|png)))
3754 : failed : failed : 10.89125263 (s) : ^[a-zA-Z0-9\\.\\,\\?\\-\\_\\/\\*\\\\\\^\\[\\]]*\\.jpg$
3755 : failed : failed : 15.796195969 (s) : (\\.png|\\.jpg|\\.jpeg)$
3756 : failed : failed : 11.022229968 (s) : ^(.+[\\.](jpg|gif|png)$)$
3757 : failed : failed : 7.601690995 (s) : ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$
3758 : unparsable : unparsable : 0.070358239 (s) : ^(?P<ext>\\w+[.](jpg|gif|png))$
3759 : failed : pumping failed : 30.849805004 (s) : [^\\.]+\\.jpg|[^\\.]+\\.png|[^\\.]+\\.gif
3760 : unparsable : unparsable : 0.083888239 (s) : import reextension = input('Enter file extensi
3761 : failed : failed : 1.491297946 (s) : [-+]?\\d{1,3}\\,?
3762 : unparsable : unparsable : 0.07636897 (s) : (?(?=\\d{1,3}
3763 : failed : failed : 14.958085781 (s) : 1[^,]* or 0[^,]+ or 0?[^,]* or 0[,]*
3764 : failed : failed : 0.156157132 (s) : ^[-?\\+]\\d{1,3}
3765 : failed : pumping failed : 26.732232598 (s) : \\+([+-]?\\d{1,3}),
3766 : unparsable : unparsable : 0.069547143 (s) : (((-?[0-9]+(\\.[0-9]+)?)|(-?[0-9]+(\\.[0-9]+)?)\\.?) + ((\"[0-9A
3767 : failed : failed : 36.581645795 (s) : .{1,2}\\s*
3768 : failed : failed : 0.170081358 (s) : ^[+-]?(\\d{1,3}),?$
3769 : failed : failed : 0.936096728 (s) : [+\\d,]+?
3770 : failed : pumping failed : 65.390838303 (s) : \\+?[0-9]{1,3}(,[0-9]{3})*
3771 : unparsable : unparsable : 0.06844334 (s) : \"(^((0[0-9]|[1-9]\\d|1[0-3])(\\.\\d+
3772 : failed : failed : 18.45102923 (s) : [0-9]{1,2}\\.[0-9]{1,2}
3773 failed : unparsable : 0 (s) : Please check your regex.
3774 : failed : failed : 4.170434852 (s) : (?i)(^|,)([^,0-9.])
3775 : unparsable : unparsable : 0.060690663 (s) : /(\\d+
3776 : failed : failed : 5.302149688 (s) : (?<!\\d)(?<![.|,])0(?!\\d)(?![.|,])
3777 : failed : failed : 2.037809335 (s) : [1-9]\\d*\\.\\d+,1
3778 : failed : error init : 0.106348727 (s) : ^
3779 : failed : failed : 2.529069461 (s) : (?<=^|,)^\\d+,^\\d+$
3780 : failed : failed : 0.121920004 (s) : ^[0-9,]+$
3781 : failed : failed : 80.088847489 (s) : (?<=^|[^a-zA-Z])([a-zA-Z]+)(?=[^a-zA-Z]|$)
3782 failed : unparsable : 0 (s) : Please check your regex.
3783 : failed : failed : 0.179641514 (s) : import re
3784 : failed : failed : 2.762497559 (s) : (RegEx) [A-Za-z0-9 -]
3785 : failed : failed : 3.36842629 (s) : [a-zA-Z0-9_-]+
3786 : failed : failed : 1.506906712 (s) : \\w{2,13}
3787 : failed : failed : 1.159667544 (s) : r\"^[A-Za-z0-9;, ]+$\"
3788 : failed : failed : 0.528991739 (s) : \"r'\\w+'
3789 : failed : failed : 0.679355919 (s) : (\\w)
3790 : failed : failed : 0.43540767 (s) : /^[a-zA-Z0-9-_]+
3791 failed : unparsable : 0 (s) : Please check your regex.
3792 : unparsable : unparsable : 0.068827628 (s) : '(
3793 : failed : error init : 0.110010213 (s) : ^
3794 failed : unparsable : 0 (s) : Please check your regex.
3795 failed : unparsable : 0 (s) : Please check your regex.
3796 : failed : failed : 0.233770968 (s) : \\
3797 : unparsable : unparsable : 0.056472857 (s) : (
3798 : unparsable : unparsable : 0.07229438 (s) : ([
3799 : failed : error init : 0.131279865 (s) : ^
3800 failed : unparsable : 0 (s) : Please check your regex.
3801 : unparsable : unparsable : 0.053703358 (s) : ([0-9]{3}-){3}[
3802 : failed : failed : 0.932976965 (s) : (\\d{3})\\s\\d{3}\\
3803 : unparsable : unparsable : 0.077008475 (s) : \\(\\s*\\d{3}\\s*-\\
3804 : failed : failed : 0.161973157 (s) : ^[0-9][0-9]{3}
3805 : unparsable : unparsable : 0.076976755 (s) : @(?<start>[A-Za-
3806 : unparsable : unparsable : 0.064210624 (s) : (?<![0-9])\\d{
3807 : unparsable : unparsable : 0.071066865 (s) : ^\\(\\d{3}\\)[\\-\\.\\
3808 : failed : failed : 3.013798687 (s) : \\
3809 : unparsable : unparsable : 0.078127738 (s) : \"^[0-9]{1,3}-[
3810 : unparsable : unparsable : 0.065257081 (s) : [0-9]\\d{3}[-\\
3811 : unparsable : unparsable : 0.094681991 (s) : [0-9]{2}[0-9][0-9][0-9][
3812 : unparsable : unparsable : 0.084829058 (s) : (?<day>\\d+)\\.(?<month>\\d{1,2})(
3813 : unparsable : unparsable : 0.092827895 (s) : (?<=\\d{4})\\.(?=\\d{2})\\.(?=
3814 : unparsable : unparsable : 0.050149162 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2
3815 : unparsable : unparsable : 0.068870578 (s) : \"^[0-9]{4}[0-9]-[0-9]{2
3816 : unparsable : unparsable : 0.091803319 (s) : /(^[1-9]\\d{2}\\.)([1-9]\\d{
3817 : unparsable : unparsable : 0.081018753 (s) : \"^[0-9]{4}[.-][0-9]{3}[.-][
3818 failed : unparsable : 0 (s) : Please check your regex.
3819 : unparsable : unparsable : 0.075868273 (s) : [0-9]{4}-[0-9]{2}-[0-9]{
3820 : unparsable : unparsable : 0.061342552 (s) : \\d{4}\\.\\d{2}\\.\\d{2}\\.\\d{4
3821 : failed : failed : 0.827985796 (s) : /^[1-9]\\d*\\,?\\d*\\
3822 : unparsable : unparsable : 0.070872211 (s) : (?<=\\\\d{1,3}
3823 : failed : failed : 2.36627537 (s) : \\d{1,3}
3824 : unparsable : unparsable : 0.08408672 (s) : \\d\\d,\\d\\d\\d\\.\\d\\d(
3825 : failed : failed : 0.251573266 (s) : ^\\D*[0-1]?\\d*[,.]
3826 : failed : pumping failed : 61.662410011 (s) : [0-9]+(,[0-9]+)+
3827 : unparsable : unparsable : 0.077880976 (s) : (?P<digits>\\d{1,3}
3828 : failed : failed : 2.573436031 (s) : \\$1,000,000\\.00 | \\$1,000 | \\
3829 : unparsable : unparsable : 0.106855916 (s) : (?<=\\$)([\\d,\\.]{1,2
3830 : unparsable : unparsable : 0.071708604 (s) : '\\$(\\d{1,3}[,.]\\d{1
3831 : failed : failed : 1.003471209 (s) : /^[0-9]{2}[0-9]
3832 : failed : failed : 7.841994709 (s) : (?<![0-9])[0-9]
3833 : failed : error init : 0.102161577 (s) : ^
3834 : unparsable : unparsable : 0.128326633 (s) : (.*)?([0-9]){4}-([
3835 : unparsable : unparsable : 0.101267456 (s) : (?<!\\d)(\\d{2})(?!\\
3836 : failed : failed : 0.16656344 (s) : ddmmyy-ddd-ddd-ddd-dd
3837 : failed : failed : 3.993048425 (s) : (?<!-)\\d{3}
3838 : unparsable : unparsable : 0.09163846 (s) : DMMYY(-[0-9]{3})-[0
3839 : unparsable : unparsable : 0.072963011 (s) : ([0-9]{2}[\\-0-9]{
3840 : failed : failed : 0.149361635 (s) : \"DMDDDDD-9999\"
3841 : failed : failed : 0.330666078 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3842 : failed : failed : 0.354527827 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3843 : failed : failed : 0.378556877 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3844 : failed : failed : 0.265327715 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3845 : failed : failed : 0.301415825 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3846 : failed : failed : 0.440155629 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3847 : failed : failed : 0.401187013 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3848 : failed : failed : 0.470696395 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3849 : failed : failed : 0.43818872 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3850 : failed : failed : 0.243246236 (s) : Matches a string if it is valid in the form of MWF or TTHS. Maybe used for validating the \"days part\" of a class schedule field. The string should only accept any of the ff set of lette
3851 : unparsable : unparsable : 0.064459399 (s) : [0-9]?[0-9]|1[0-3]|[0-9]?[
3852 : unparsable : unparsable : 0.086993215 (s) : \\d{1,
3853 : failed : failed : 7.072050623 (s) : (?i)[0-9]\\d
3854 : unparsable : unparsable : 0.058521788 (s) : (\\d{1,
3855 : unparsable : unparsable : 0.061307947 (s) : ^(\\d{1,
3856 : unparsable : unparsable : 0.081434371 (s) : ^[1-9][0-9]|0?[1-9][0-9]|1[0-
3857 : unparsable : unparsable : 0.082995911 (s) : (\\d\\
3858 : unparsable : unparsable : 0.066482964 (s) : (^\\d{1,
3859 : unparsable : unparsable : 0.083982555 (s) : ([0-9]{1,2
3860 : failed : failed : 0.923978839 (s) : (1.5 - 1)H (0 - 0)M
3861 : unparsable : unparsable : 0.087555917 (s) : - ^-?[0-9]+(\\.[0-9]*)?$- ^[0-9]+\\.[0-9]+\\.[0-9]$- ^[0-9]+\\.?[0-9]+(
3862 : failed : failed : 12.657886385 (s) : ^(?=.*?[a-zA-Z])(?=.*?[0-9])(?=.*?\\.?[0-9]+).*$
3863 : failed : failed : 2.491801516 (s) : \\d+\\.?\\d*
3864 : failed : failed : 12.106097678 (s) : ^[-0-9]+(\\.[0-9]+)*$   You can test your answer by typi
3865 : failed : pumping failed : 49.841211424 (s) : (.*)^(.*).*$
3866 : failed : failed : 3.479829969 (s) : \"
3867 : failed : failed : 0.177144656 (s) : ^([0-9]{1,3})(\\.[0-9]{1,3})*$
3868 : failed : failed : 0.122730148 (s) : [^-\\d.]
3869 : failed : failed : 10.507584835 (s) : ([-+]?\\d+\\.?\\d*|\\d+)
3870 : failed : failed : 0.247771127 (s) : (1 + 0 + 3 + 1 + 4 + 1 + 5 + 1 + 6 + 2 + 7 + 2 + 8 + 3 + 9 + 1 + 1 + 0 + 1 + 2 + 0 + 0) / 36
3871 : failed : pumping failed : 209.348792989 (s) : [^A-Z]?CO.*[^A-Z]?GA.*[^A-Z]?TX.*
3872 : failed : pumping failed : 57.684779577 (s) : (.+?)\\s*\\/
3873 failed : unparsable : 0 (s) : Please check your regex.
3874 : failed : failed : 1.455828944 (s) : \\b[A-Z]{2}\\b
3875 : failed : failed : 2.112291005 (s) : ([A-Z]{2})(?!$)
3876 : failed : failed : 1.168122614 (s) : (\\b[A-Z]{1,2}\\b)([A-Z]{1,2})(\\b[A-Z]{1,2})\\b
3877 : failed : failed : 0.715004337 (s) : ^([A-Z][A-Z]+)([A-Z])$
3878 : failed : failed : 1.507286663 (s) : \\b[^A-Z]\\b[A-Z]{1}[^A-Z]\\b
3879 : failed : failed : 0.666687191 (s) : \"^[A-Z]{2}$\"No
3880 : failed : failed : 0.570086952 (s) : ^(A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z)$
3881 : unparsable : unparsable : 0.097598906 (s) : \\d{2}/\\d{2}/\\d{4
3882 : unparsable : unparsable : 0.084068426 (s) : (RegEx) /^\\d{2}/\\d{2
3883 : failed : error init : 0.152281364 (s) : ^
3884 : unparsable : unparsable : 0.093157532 (s) : ^[0-9]{2}[/-][0-9
3885 : unparsable : unparsable : 0.073132518 (s) : (?<![0-9])[0-9][0-
3886 : failed : failed : 0.825047742 (s) : \\d{1,2}/[12]\\d{3}
3887 : unparsable : unparsable : 0.061187953 (s) : ^[0-9]{1,2}[-/][
3888 : failed : failed : 20.498030824 (s) : [0-9]{2}-[0-9]{2}
3889 : unparsable : unparsable : 0.068905924 (s) : /\\d{2}\\/\\d{2}\\/\\d{
3890 : unparsable : unparsable : 0.08513462 (s) : ^                        # start of string  (                        # (1 start)
3891 : unparsable : unparsable : 0.072259625 (s) : [\\
3892 : unparsable : unparsable : 0.064837006 (s) : ^((
3893 : failed : error init : 0.091582937 (s) : ^
3894 : failed : failed : 1.022255162 (s) : \\d
3895 : unparsable : unparsable : 0.094351504 (s) : ([0
3896 : unparsable : unparsable : 0.064309049 (s) : ^[
3897 : failed : failed : 0.330107354 (s) : /\\d
3898 : unparsable : unparsable : 0.078897557 (s) : \"([0
3899 : unparsable : unparsable : 0.102028248 (s) : ([0-
3900 : failed : failed : 0.688772137 (s) : /
3901 : failed : failed : 0.35840674 (s) : \"22\\d.\\d\\.\\d$\"   Exercise
3902 : failed : failed : 2.826745744 (s) : (\\d{2}\\.)(\\d{2}\\.)(\\d{2})(\\_|\\.)(\\d{1})
3903 failed : unparsable : 0 (s) : Please check your regex.
3904 : unparsable : unparsable : 0.102471377 (s) : [A-Z][A-Z][0-9][0-9][0-9][0-9].[0-9][0-9][0-
3905 : failed : failed : 3.437554079 (s) : (\\d+)\\.(\\d+)\\.(\\d+)\\.\\d+
3906 : failed : failed : 0.433164146 (s) : \"^[0-9]?[0-9]?[0-9].*_[0-9]?[0-9].*$\"
3907 : unparsable : unparsable : 0.078319116 (s) : [a-zA-Z0-9]{3}\\.?[a-zA-Z0-9]{2}\\.?[a-z
3908 : unparsable : unparsable : 0.114393009 (s) : (^[0-9]{1,3}\\.?[0-9]{1,2}\\.[0-9]{1,2}\\.[
3909 : failed : failed : 31.219617783 (s) : \\b([0-9.]+\\.[0-9]+.\\d+)\\_(\\w+)$
3910 : unparsable : unparsable : 0.087753397 (s) : \\d{1,2}\\.\\d{1,2}\\.\\d{1,4}|\\d{1,3}\\.\\d{1
3911 : failed : failed : 2.674057218 (s) : (Possible answer) IT28
3912 : unparsable : unparsable : 0.079612995 (s) : [0-9]{
3913 : unparsable : unparsable : 0.093082561 (s) : (from htt
3914 : unparsable : unparsable : 0.090577807 (s) : [A-Z]{
3915 : failed : failed : 0.723588799 (s) : \\d+-\\d+
3916 : failed : failed : 0.618256632 (s) : \\d{8}-
3917 : failed : failed : 0.156845919 (s) : W800 0000 2921 0064
3918 : unparsable : unparsable : 0.072054772 (s) : [^\\s-]+-(
3919 : failed : failed : 0.167615017 (s) : IT28-W800
3920 : failed : failed : 0.126577873 (s) : ^IT28W\\d\\
3921 : unparsable : unparsable : 0.069977258 (s) : /(4[1-9][0-9
3922 : failed : failed : 0.148229769 (s) : ^(49)?[3-9]\\d
3923 : unparsable : unparsable : 0.063500216 (s) : (\\d{4})(\\d{2
3924 : failed : failed : 0.171549073 (s) : ^(4111|5111|54)\\\\
3925 : failed : failed : 0.49415483 (s) : 4\\d{4}(?!\\d)
3926 : failed : failed : 0.747551355 (s) : \\d{4}-\\d{6}
3927 : unparsable : unparsable : 0.074623245 (s) : [0-9]{4,16}(
3928 : failed : error init : 0.088799312 (s) : ^
3929 : unparsable : unparsable : 0.091357065 (s) : ^(4[1-9]|1
3930 : unparsable : unparsable : 0.081438879 (s) : (^4[0-9]{12}
3931 failed : unparsable : 0 (s) : Please check your regex.
3932 : failed : failed : 2.538754732 (s) : \\
3933 : failed : error init : 0.109346933 (s) : ^
3934 : failed : failed : 1.929036896 (s) : /
3935 failed : unparsable : 0 (s) : Please check your regex.
3936 failed : unparsable : 0 (s) : Please check your regex.
3937 : failed : error init : 0.116011665 (s) : |
3938 failed : unparsable : 0 (s) : Please check your regex.
3939 failed : unparsable : 0 (s) : Please check your regex.
3940 failed : unparsable : 0 (s) : Please check your regex.
3941 : unparsable : unparsable : 0.058551874 (s) : \"^[0-9]{9}[0-9]{9}[0-9]?[0-9]?[0
3942 : unparsable : unparsable : 0.069193141 (s) : ([0-9]{3}-)?([0-9]{4}|[0-9]{5})([0-9
3943 : failed : failed : 0.972730999 (s) : [0-9]{9}[0-9]{9}[0-9]{6}
3944 : unparsable : unparsable : 0.090490154 (s) : (?<!\\d)(?=\\d{9})(?!\\d{3})(?<!\\d{3}-
3945 : unparsable : unparsable : 0.073391622 (s) : (^\\d{12}\\-\\d{5}\\-\\d{3}\\-\\d{4}\\-\\d{2}$
3946 : unparsable : unparsable : 0.074862011 (s) : (\\d\\d\\d|9[8-9]\\d|3[7-8])\\d{3,4}(
3947 : failed : failed : 22.848979966 (s) : (0|[1-9]\\d*)
3948 : unparsable : unparsable : 0.090911242 (s) : (?<![0-9])-?[0-9]{9}-(?<![0-9])[0-
3949 : failed : failed : 0.180109258 (s) : /^[0-9]{3}[1-9]|9[0-9]{3}[1-9]|
3950 : unparsable : unparsable : 0.079076141 (s) : \"(\\d{7})[^\\\\d]*(\\d{9})[^\\\\d]*(\\d{13})[^\\\\d
3951 : failed : failed : 0.343614521 (s) : ^[^a-zA-Z0-9]*$
3952 : failed : failed : 3.612035585 (s) : ^[a-zA-Z0-9]*$
3953 : unparsable : unparsable : 0.06399972 (s) : (a|[0-9]|[a-z])(\\d
3954 : failed : failed : 0.460218814 (s) : ^[a-z0-9]*$
3955 : failed : failed : 1.280093834 (s) : A1
3956 : failed : failed : 7.744638186 (s) : a?\\d?
3957 : failed : failed : 0.865942621 (s) : \"^[a-zA-Z0-9-]*$\"
3958 : failed : failed : 1.157934503 (s) : ^[0-9a-zA-Z]*$
3959 : failed : failed : 18.139402703 (s) : \"[a-zA-Z0-9]*\"
3960 : unparsable : unparsable : 0.092589679 (s) : (?<=^\\s*)([a-zA-Z0-9]+)(?=\\s*$)Examp
3961 : unparsable : unparsable : 0.061165912 (s) : ([
3962 failed : unparsable : 0 (s) : Please check your regex.
3963 : failed : error init : 0.130687707 (s) : ^
3964 failed : unparsable : 0 (s) : Please check your regex.
3965 : failed : error init : 0.097740842 (s) : ^
3966 : failed : failed : 1.275438389 (s) : /
3967 failed : unparsable : 0 (s) : Please check your regex.
3968 : failed : failed : 0.16372401 (s) : \\
3969 failed : unparsable : 0 (s) : Please check your regex.
3970 : unparsable : unparsable : 0.085114832 (s) : *
3971 failed : unparsable : 0 (s) : Please check your regex.
3972 failed : unparsable : 0 (s) : Please check your regex.
3973 : failed : failed : 2.101092045 (s) : /
3974 failed : unparsable : 0 (s) : Please check your regex.
3975 : unparsable : unparsable : 0.069820013 (s) : [
3976 : failed : error init : 0.117331102 (s) : ^
3977 failed : unparsable : 0 (s) : Please check your regex.
3978 : failed : error init : 0.100728387 (s) : ^
3979 : failed : error init : 0.111950141 (s) : ^
3980 : unparsable : unparsable : 0.086286664 (s) : [
3981 : failed : error init : 0.104035532 (s) : ^
3982 failed : unparsable : 0 (s) : Please check your regex.
3983 : unparsable : unparsable : 0.097394143 (s) : [
3984 : failed : error init : 0.09729618 (s) : ^
3985 : failed : failed : 2.112522037 (s) : \"
3986 failed : unparsable : 0 (s) : Please check your regex.
3987 : failed : error init : 0.11597672 (s) : ^
3988 : failed : error init : 0.135488575 (s) : ^
3989 failed : unparsable : 0 (s) : Please check your regex.
3990 : unparsable : unparsable : 0.074001943 (s) : [
3991 : failed : failed : 0.210060143 (s) : ^(\\d+)\\s*[EW]\\s*(\\d+)
3992 : failed : failed : 9.174035346 (s) : ^[\\d]+\\D+\\d+N[\\d]+\\D+E[\\d]+$
3993 : failed : failed : 0.450015856 (s) : r\"^(\\d+)(\\D+).*$\"
3994 : failed : failed : 1.496388554 (s) : \\d+[NSWE]
3995 : failed : failed : 0.497656848 (s) : \"^(\\d+\\s\\d+)\\s(0N|0W)$\"
3996 : failed : failed : 3.715391946 (s) : (0N \\d\\W \\d+)$
3997 : failed : error init : 0.103867448 (s) : ^
3998 : failed : failed : 0.636407862 (s) : (?i)\\d+N\\s?\\d+W
3999 failed : unparsable : 0 (s) : Please check your regex.
4000 : failed : failed : 0.149206115 (s) : import re
4001 : unparsable : unparsable : 0.094753536 (s) : [0-9]{
4002 : unparsable : unparsable : 0.061173596 (s) : ^[1-9][0-9]?[0-
4003 : unparsable : unparsable : 0.064621363 (s) : \\d{
4004 : unparsable : unparsable : 0.157533426 (s) : ([0-2][0-9]|3[0-1
4005 : unparsable : unparsable : 0.071706591 (s) : /\\d{
4006 : unparsable : unparsable : 0.085035114 (s) : [a-z]{
4007 : failed : failed : 21.886710448 (s) : [0,12]$|(1[012])[0-9]$|24[0-9]
4008 : unparsable : unparsable : 0.069365834 (s) : (\\d\\
4009 : unparsable : unparsable : 0.057805157 (s) : \"([1-9]|1[012]
4010 : unparsable : unparsable : 0.071088645 (s) : \"^([23][0-5][0-9]|0[1-9]|1[0-2
4011 : unparsable : unparsable : 0.068046137 (s) : ((
4012 failed : unparsable : 0 (s) : Please check your regex.
4013 : unparsable : unparsable : 0.078024525 (s) : (
4014 failed : unparsable : 0 (s) : Please check your regex.
4015 failed : unparsable : 0 (s) : Please check your regex.
4016 : failed : failed : 1.695760672 (s) : \\
4017 : failed : failed : 0.387661943 (s) : /
4018 failed : unparsable : 0 (s) : Please check your regex.
4019 failed : unparsable : 0 (s) : Please check your regex.
4020 : failed : failed : 1.277718853 (s) : \\
4021 : unparsable : unparsable : 0.077158947 (s) : (\\d+\\*(\\d+|)(\\*(\\d+
4022 : unparsable : unparsable : 0.092708843 (s) : (\\d{4})\\*(\\d{3})\\*(\\
4023 : failed : failed : 0.159215691 (s) : .{2,10}
4024 : unparsable : unparsable : 0.064981466 (s) : [0-9]+(
4025 : unparsable : unparsable : 0.070362478 (s) : \"(^|[^\\d\\s*])(((\\d+
4026 : unparsable : unparsable : 0.071013566 (s) : (\\d*)([\\s\\/\\*])(\\d*
4027 : unparsable : unparsable : 0.058677358 (s) : [0-9]*[0-9][0-9
4028 : unparsable : unparsable : 0.107368915 (s) : [a-zA-Z0-9]+*|[0
4029 : failed : failed : 0.172640433 (s) : A regular expression that matches any of the followi
4030 : failed : failed : 31.28782478 (s) : [0-9]{6}-[0-9]{3}
4031 : failed : failed : 1.550711911 (s) : 0\\.0 to 100\\.[0-9]{2}
4032 failed : unparsable : 0 (s) : Please check your regex.
4033 : failed : failed : 0.828701104 (s) : r\"^(-?\\d+)\\.(0|[1-9]\\d*|100)$\"
4034 : failed : failed : 62.420303826 (s) : ^[0-9]*\\.[0-9]*$|\\.[0-9]*[0-9]$
4035 : failed : failed : 11.160758237 (s) : \\b(0|[1-9][0-9]*[0-9])\\.[0-9]\\b\"\"\"
4036 : failed : error init : 0.131693428 (s) : ^
4037 : failed : failed : 0.799248732 (s) : \"^(0|1)\\.\\d{2}$\"
4038 : failed : failed : 0.200087425 (s) : ^[01]?[0-9]?[0-9]?\\.[0-9]*?$
4039 : failed : failed : 2.051206585 (s) : (0-999|0.00)
4040 : failed : failed : 0.355544628 (s) : 0,100,100.00
4041 : failed : failed : 0.791076411 (s) : \\d{2}/\\d{2}/\\d{4}
4042 : unparsable : unparsable : 0.129955759 (s) : ^(\\d{1,2})/(\\d{1,2})/(\\d
4043 : unparsable : unparsable : 0.084353338 (s) : (\\d{2}\\/\\d{2}\\/(\\d{4})+
4044 : failed : failed : 0.124109016 (s) : ^([0-9]{2}/)[0-9]{2}/
4045 : failed : failed : 0.164749799 (s) : ^\\d{2}\\/\\d{2}\\/\\d{4}$
4046 : unparsable : unparsable : 0.064176491 (s) : [0-6][1-9][0-9][0-9]/[0
4047 : failed : failed : 1.401526856 (s) : (\\\\d{2}/\\\\d{2}/\\\\d{4})
4048 : failed : failed : 0.619074562 (s) : (MM/DD/YYYY)
4049 : unparsable : unparsable : 0.111534884 (s) : var dateRange = function() {    return /^(0[1-9]
4050 : unparsable : unparsable : 0.060632614 (s) : /\\d{1,2}\\/\\d{1,2}\\/\\d{
4051 : failed : failed : 0.679743174 (s) : \\d{4}[-/\\s]\\d{2}[-/\\s]\\d{4}
4052 : failed : failed : 0.946991099 (s) : \"(\\d{4})-(\\d{2})-(\\d{2})\"
4053 : failed : failed : 0.899808715 (s) : [01]\\d\\d-\\d\\d-\\d\\d
4054 : failed : failed : 0.259061889 (s) : YYYY-MM-DD pattern            TE
4055 : failed : failed : 0.452997401 (s) : \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\"
4056 : failed : failed : 1.62112328 (s) : r\"^\\d{4}-\\d{2}-\\d{2}$\"
4057 : unparsable : unparsable : 0.072213459 (s) : \"(?P<dd>\\d{1,2}-\\d{1,2}-\\d{4})\"
4058 : failed : failed : 0.170411285 (s) : YYYY-MM-DD
4059 : failed : failed : 0.156944644 (s) : ^(19|20)\\d{4}\\-(0?1\\d|1\\d\\d|2\\d\\d)\\d{2}$
4060 : failed : failed : 29.962061351 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2}
4061 : failed : error init : 0.100974398 (s) : ^
4062 : failed : failed : 2.400735396 (s) : /
4063 : failed : failed : 0.141407071 (s) : .
4064 : failed : failed : 0.871830019 (s) : \\d{4}-\\
4065 : unparsable : unparsable : 0.058683199 (s) : ^(19[0-9
4066 : unparsable : unparsable : 0.077558924 (s) : \"(\\\\d{4}
4067 : unparsable : unparsable : 0.091454738 (s) : [1-
4068 : failed : failed : 0.640986454 (s) : \\d{4}-
4069 : failed : failed : 0.819303692 (s) : \\d{4}\\-\\
4070 failed : unparsable : 0 (s) : Please check your regex.
4071 : unparsable : unparsable : 0.111039669 (s) : [0-9,]+\\.?[0-9]{1,2
4072 : unparsable : unparsable : 0.057232937 (s) : [0-9]{1,2}[,.]?[0-9
4073 : failed : failed : 2.275512666 (s) : \"^
4074 : failed : failed : 3.638797646 (s) : \\d{1,3}
4075 : unparsable : unparsable : 0.048628509 (s) : \"^[a-z]\\d{3}(-[a-z]\\
4076 : failed : failed : 0.432485918 (s) : This RegEx checks whether the input is an integer or a decimal number. It looks for
4077 : unparsable : unparsable : 0.07935399 (s) : (?<num>
4078 : unparsable : unparsable : 0.097209808 (s) : ^[0-9,]?[.][0-9]?[0-
4079 : failed : failed : 2.551721648 (s) : (\\d+\\.\\d?){3,}
4080 : failed : error init : 0.139047298 (s) : ^
4081 failed : unparsable : 0 (s) : Please check your regex.
4082 : failed : failed : 0.26785451 (s) : ^([1-9][0-9]|1[0-2])$
4083 : failed : failed : 0.172562948 (s) : ^[0-9]{1,2}[1-9]$
4084 : failed : failed : 0.44816748 (s) : \"^[1-12][0-9]$\"
4085 : failed : failed : 0.214313065 (s) : [1-2][3-9][0-6][0-9] The first digit must be 1 or 2. The second digit can be 3-9. The third digit can be 0-6. The fourth digit
4086 : unparsable : unparsable : 0.069630519 (s) : *[1-9]\\d*|[1-9]
4087 : failed : failed : 0.123319039 (s) : ^[1-9]\\d{0,2}$
4088 : failed : failed : 1.865354199 (s) : \\b\\d{1,2}\\b|\\b\\d{1,2}[0-3]\\b
4089 : failed : failed : 0.456773592 (s) : (^[1-2][0-9]), (^[12])$
4090 : failed : failed : 0.146149439 (s) : \\d{1,2}
4091 : failed : failed : 1.600539802 (s) : ^(?=.*[0-9])(?=.*[A-Z])[A-Z]{4}[0-9]{4}$
4092 : failed : failed : 7.034446469 (s) : ^N[0-9]+(\\\\.[0-9]+)?$
4093 : failed : failed : 0.738568428 (s) : N[A-Z]\\d{5} (or N[A-F]\\d{5})
4094 : failed : failed : 0.263530735 (s) : r'(N[1-9]\\d{2})(T[1-9]\\d{4})?'
4095 : failed : failed : 1.08966029 (s) : \"([0-9]{4})([A-Z]{1})$
4096 : failed : failed : 0.271777054 (s) : \"^[A-Z][0-9]{5}\\d{3}$\"
4097 : failed : failed : 1.645321799 (s) : \\d+ (?=\\D|$)
4098 : failed : failed : 1.097600257 (s) : [0-9A-Z]{3}[0-9A-Z]{6}
4099 : failed : failed : 0.221077934 (s) : ^[A-Za-z0-9]{5}\\d{2}\\-{3}\\d{2}[A-Z]$
4100 : failed : failed : 0.431155089 (s) : ^[N]+[0-9][0-9]$
4101 : failed : pumping failed : 112.680436353 (s) : .*\\d+[.]\\d+[.]\\d+[.]\\d+[.]\\d+
4102 : unparsable : unparsable : 0.060588161 (s) : r\"(192[0-9]|1[0-9]\\d|2[0-4]\\d|25
4103 : unparsable : unparsable : 0.062290715 (s) : ([0-9]{1,3}\\.){3}([0-9]{1,3})(\\.|\\
4104 : unparsable : unparsable : 0.072014978 (s) : ^(([0-9]|[1-9][0-9]|1[0-9]{2}|
4105 : unparsable : unparsable : 0.083479766 (s) : \\d{1,3}\\.[0-1]\\.[0-9]\\.[0-9]\\.[0-
4106 : failed : pumping failed : 17.006681405 (s) : (.*)\\.(.*)\\.(.*)\\.(.*)
4107 : failed : failed : 1.528500078 (s) : \\b
4108 : unparsable : unparsable : 0.080393164 (s) : (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{
4109 : failed : error init : 0.08807617 (s) : ^(?!^).*?
4110 : failed : pumping failed : 383.410730246 (s) : .*\\.(\\d+).*The.* matches 0 or more characters. Each section starts with a. followed by one
4111 : failed : failed : 1.63423597 (s) : ^(?=.{10,})(\\d+[.][0-9]*)?$
4112 : failed : failed : 29.133138301 (s) : [0-9]{3}[.]0[0-9]*\"\"\"
4113 : failed : pumping failed : 355.761636791 (s) : [^\\d]+\\.[^\\d]+$
4114 : failed : failed : 1.382745458 (s) : (.{0,3})([^.]*).*
4115 : failed : failed : 0.621275527 (s) : r'^\\d{4}(\\.\\d+)?'
4116 : failed : failed : 0.687450405 (s) : r'^\\d{4}
4117 : failed : failed : 0.596908244 (s) : \\s*^\\d+\\.(\\d{1,2}|\\d{3})([\\.\\,]\\d+)?$
4118 : failed : failed : 28.976076768 (s) : [a-zA-Z0-9]{2}\\.[0-9]{3}
4119 : failed : failed : 0.161822115 (s) : ^[a-zA-Z0-9]{3}\\.\\d{2,4}$
4120 : unparsable : unparsable : 0.084529118 (s) : *
4121 : failed : pumping failed : 67.283981684 (s) : (0|1)?[0-9]*\\.[0-9]*
4122 : failed : failed : 7.122226836 (s) : [^0-9.]Examp
4123 : failed : failed : 0.518061021 (s) : \"^[0-9]+(.[0-9]+)*$\"
4124 : failed : error init : 0.107428737 (s) : ^
4125 : failed : pumping failed : 99.238607819 (s) : .*(\\.(0|1))$
4126 : failed : failed : 19.531862115 (s) : (.00|1[0-9]\\d|[1-9]\\d\\d)|(.0{0,2}\\d|\\d\\d\\d)
4127 : failed : failed : 2.03804752 (s) : \"\\d{0,2}(\\.\\d{0,2})?\".
4128 : unparsable : unparsable : 0.07881378 (s) : re.compile(\"^(00|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]|6[0-9]|7[0-9]|
4129 : failed : failed : 6.817366159 (s) : (\\d\\d\\d)?\\.(0|1|2)
4130 : failed : failed : 2.295142712 (s) : \"\\d*\\.\\d{1,2}\\d*\"
4131 failed : unparsable : 0 (s) : Please check your regex.
4132 : unparsable : unparsable : 0.116722805 (s) : (
4133 : unparsable : unparsable : 0.100504549 (s) : [
4134 failed : unparsable : 0 (s) : Please check your regex.
4135 failed : unparsable : 0 (s) : Please check your regex.
4136 : unparsable : unparsable : 0.078470959 (s) : (
4137 failed : unparsable : 0 (s) : Please check your regex.
4138 failed : unparsable : 0 (s) : Please check your regex.
4139 failed : unparsable : 0 (s) : Please check your regex.
4140 : failed : failed : 2.790960922 (s) : \\
4141 : failed : error init : 0.16004938 (s) : ^
4142 : failed : failed : 0.126175471 (s) : [^0-9.]
4143 : failed : failed : 0.110277183 (s) : ^[-+]?
4144 : failed : failed : 2.928438395 (s) : (0|[1-9][0-9]*)(\\.0)?
4145 : unparsable : unparsable : 0.059587911 (s) : (\\d+\\.?\\d*|-?
4146 : failed : failed : 1.543487393 (s) : \\b(0|[1-9][0-9]*)\\.[0-9]\\.[0-9]\\.[0-9]+\\b
4147 : failed : failed : 3.856610195 (s) : [-+]?\\d+(\\.\\d+)?
4148 : unparsable : unparsable : 0.080542873 (s) : .*(?<number>-?[0-9]*\\.
4149 failed : unparsable : 0 (s) : Please check your regex.
4150 : failed : failed : 8.928289717 (s) : (?<!\\d)\\d+(\\.\\d+)$
4151 : failed : failed : 0.184806682 (s) : The pattern recognizes an email address with the following rul
4152 : failed : failed : 0.219819822 (s) : The pattern recognizes an email address with the following rul
4153 : failed : failed : 0.2093474 (s) : The pattern recognizes an email address with the following rul
4154 : failed : failed : 0.250835747 (s) : The pattern recognizes an email address with the following rul
4155 : failed : failed : 0.183135257 (s) : The pattern recognizes an email address with the following rul
4156 : failed : failed : 0.159589179 (s) : The pattern recognizes an email address with the following rul
4157 : failed : failed : 0.258403468 (s) : The pattern recognizes an email address with the following rul
4158 : failed : failed : 0.175352234 (s) : The pattern recognizes an email address with the following rul
4159 : failed : failed : 0.248174571 (s) : The pattern recognizes an email address with the following rul
4160 : failed : failed : 0.260194978 (s) : The pattern recognizes an email address with the following rul
4161 : failed : failed : 8.218271303 (s) : \\\".*\\\"
4162 : failed : failed : 7.791292623 (s) : ^\\\".*?\\\"$
4163 : failed : failed : 1.768232334 (s) : (Regex101)\\b
4164 : failed : failed : 10.498777617 (s) : ^\\\"(.*?)\\\"$
4165 : failed : failed : 7.752835054 (s) : ^\\\".*\\\"$
4166 : failed : error init : 0.108747522 (s) : ^
4167 : failed : error init : 0.122916256 (s) : (.*?)
4168 : failed : failed : 0.558540862 (s) : (Any acceptable RegEx)
4169 : failed : failed : 12.072201637 (s) : \"([^\"]*)\"
4170 : failed : failed : 9.83188884 (s) : (\\\".*?\\\")
4171 : failed : failed : 0.230778212 (s) : [0] (number)     \\-      4     \\-      6     \\-     \\-    0
4172 : unparsable : unparsable : 0.084415255 (s) : (4^4)-(5^5)-(6^4)+(5^5)-(6^4)-(4^4)-(5^4)+(6^4)-(4^4)-(
4173 : failed : failed : 0.299906844 (s) : \\b(year)=(\\d{4})\\b and \\+ (\\d{2})\\d{2}\\b
4174 : failed : failed : 0.488179847 (s) : (Example) \\d{4}\\-\\d{2}\\-\\d{2}\\-\\d{4}
4175 : failed : failed : 0.721970753 (s) : (\\d{4})-(0[1-9]|1[0-2])(\\d{3})$
4176 : failed : failed : 0.595484752 (s) : \"\\d{4}(\\d{2})\\d{1}
4177 : failed : failed : 2.830133729 (s) : \"(?i)
4178 : failed : failed : 0.970064272 (s) : \\b\\d{1,3}(\\d{2})$
4179 : failed : failed : 0.336334758 (s) : \\b(19\\d{2}|20\\d{4})\\b, Matching any two-digit numbers on each side of the word.
4180 : unparsable : unparsable : 0.088499963 (s) : \\b([2-9][3-9][0-9]{0,4}\\-[1-9][0-9][0-9]{0,4}\\-[0-9][1-
4181 : unparsable : unparsable : 0.10652699 (s) : +[0-9]+(.[0-9]{2})?|-?[0-9]+
4182 : failed : failed : 5.963881243 (s) : [-+]?\\d*\\.\\d+
4183 : failed : failed : 2.461917196 (s) : [-0-9]{0,1}[.][0-9]{1,2}[.][0-9]{1,2}
4184 : failed : pumping failed : 130.954605897 (s) : \\+?[0-9]+(\\.\\d+)?
4185 : failed : failed : 0.537377139 (s) : [-0-9]+(\\.[0-9]+)?
4186 : failed : failed : 3.955595934 (s) : [\\+\\-]?[\\d\\.]+
4187 : unparsable : unparsable : 0.055027945 (s) : ^\\+([10-9]|[1-9][0-9]|1[012])\\.([10-9]|[1-9][0-9]|
4188 : unparsable : unparsable : 0.084570635 (s) : (?<digit><d{1,3}
4189 : failed : failed : 0.165869462 (s) : ([+-]?)([1-9]?)(\\.[1-9])?
4190 : failed : failed : 2.402324377 (s) : ^\\d+\\.\\d{2}$
4191 : failed : failed : 0.106749517 (s) : image
4192 : failed : failed : 0.153786108 (s) : https
4193 failed : unparsable : 0 (s) : Please check your regex.
4194 failed : unparsable : 0 (s) : Please check your regex.
4195 : unparsable : unparsable : 0.074111258 (s) : [
4196 : unparsable : unparsable : 0.083906424 (s) : (
4197 : failed : failed : 2.180692256 (s) : \"
4198 : failed : failed : 1.798358515 (s) : /
4199 : failed : failed : 2.528803845 (s) : /
4200 : unparsable : unparsable : 0.059166723 (s) : (
4201 : failed : failed : 1.761873053 (s) : \\
4202 failed : unparsable : 0 (s) : Please check your regex.
4203 : unparsable : unparsable : 0.098115282 (s) : ([
4204 failed : unparsable : 0 (s) : Please check your regex.
4205 : failed : failed : 1.940840366 (s) : \"
4206 : unparsable : unparsable : 0.068349113 (s) : [
4207 failed : unparsable : 0 (s) : Please check your regex.
4208 failed : unparsable : 0 (s) : Please check your regex.
4209 failed : unparsable : 0 (s) : Please check your regex.
4210 : unparsable : unparsable : 0.066352149 (s) : [
4211 : failed : failed : 1.115719507 (s) : /
4212 : failed : failed : 2.410056695 (s) : \\
4213 : failed : failed : 1.98614518 (s) : \\
4214 : unparsable : unparsable : 0.081432657 (s) : (/
4215 failed : unparsable : 0 (s) : Please check your regex.
4216 : failed : error init : 0.121997177 (s) : ^
4217 : failed : error init : 0.135017664 (s) : ^
4218 : unparsable : unparsable : 0.095730663 (s) : (
4219 failed : unparsable : 0 (s) : Please check your regex.
4220 : unparsable : unparsable : 0.057641291 (s) : (
4221 : failed : failed : 0.860492258 (s) : [^a-zA-Z0-9]
4222 : failed : failed : 0.167037025 (s) : [a-zA-Z0-9*]
4223 : failed : pumping failed : 106.729055485 (s) : .*[A-Z]\\w*\\w\\w+.*
4224 : failed : pumping failed : 19.798672443 (s) : (?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,}\"\"\"
4225 : failed : failed : 1.727379115 (s) : [A-Za-z0-9]{8,}
4226 : unparsable : unparsable : 0.065278622 (s) : (^[a-zA-Z]{1,6}\\.){3,}2. Write a Python program that reads a user input string and counts the total number of digits, letters, and special characters (i
4227 : failed : failed : 2.349588157 (s) : ^(?=.*[A-Z])(?=.*\\D)(?=.*\\d)[A-Za-z\\d]{6,}$
4228 : failed : failed : 10.223531105 (s) : [A-Z][a-z]{5,}
4229 : failed : failed : 6.552297448 (s) : ^[a-zA-Z0-9]{6,}\\1[a-zA-Z0-9]{4}$
4230 : failed : failed : 0.158368306 (s) : ^(?=^[a-z])(?=^[A-Z])(?=^[0-9])[a-zA-Z0-9]{6,}$
4231 : failed : failed : 0.415219742 (s) : ^[0-9]\\.[0-9]*$,
4232 : failed : failed : 3.506229963 (s) : [0-9]
4233 : failed : failed : 0.189577964 (s) : ^\\d+(\\.[\\d]{1,2})?$
4234 : unparsable : unparsable : 0.07205911 (s) : ^[a-zA-Z\\s]{0,7}[0-9]{0
4235 : unparsable : unparsable : 0.09844606 (s) : ^(?!\\d{0,7})(?!\\.\\d*\\d|\\d+$
4236 : failed : failed : 5.071091232 (s) : ([a-zA-Z0-9]|[\\d]{1,9})
4237 : failed : failed : 2.041988088 (s) : /^[0-9]*$|^[1-9][0-9]*$|
4238 : unparsable : unparsable : 0.068647121 (s) : ^[a-zA-Z0-9_.-]{8,3}$
4239 : unparsable : unparsable : 0.101808438 (s) : (?![a-zA-Z\\d\\s]*\\d)\\d{1,
4240 : failed : failed : 34.476245785 (s) : ([0-9]{1,2},[0-9]{3,})
4241 : failed : failed : 16.406090655 (s) : \\?(.*)
4242 : failed : pumping failed : 115.220138126 (s) : ?[^& ]+$
4243 : failed : failed : 4.357082046 (s) : [^\\?=]?[a-zA-Z0-9+=\\?&]*
4244 : failed : failed : 16.611845017 (s) : ^(?=.*\\?)([^&#\\s]+).*$
4245 : failed : failed : 0.379533544 (s) : (?<=\\?)(value)[^&]+
4246 : unparsable : unparsable : 0.082864054 (s) : ^(?P<query>[\\w\\s?=&]+)$
4247 : failed : failed : 1.676054064 (s) : /(?=.)?
4248 : unparsable : unparsable : 0.103790995 (s) : (?P<query_part>[^?&]*?)(?=&|$)
4249 : failed : failed : 0.101964519 (s) : \\?
4250 : failed : failed : 15.875607867 (s) : \"([^=,!?]+)$\"
4251 : failed : failed : 0.502923616 (s) : ^(?='[^\\.']*\\.'$)(?=^[^\\.']*\\.'$)(?=^[^\\.']*\\.'$)(?![^.'\\s]*\\.')$
4252 : failed : failed : 0.599084052 (s) : ^[A-Za-z][A-Za-z0-9]*$
4253 : failed : failed : 0.21382363 (s) : ^[a-z]\\w+[a-z]$
4254 : failed : failed : 0.941773513 (s) : [^\\W_]*
4255 : failed : failed : 2.115684129 (s) : [a-zA-Z0-9-\\_\\.]+
4256 : failed : failed : 0.823482575 (s) : - ^[a-zA-Z ]+[_a-zA-Z0-9]*$Explanati
4257 : failed : failed : 0.164094023 (s) : The correct RegEx would be \"^[A-Za-z]+
4258 : unparsable : unparsable : 0.081244585 (s) : ^[a-zA-Z][a-zA-Z0-9._-\\'\\-\\[\\]]*$
4259 : failed : failed : 6.764363321 (s) : [^a-zA-Z\\-_](\\w+)[^a-zA-Z\\-_]
4260 : failed : failed : 8.444368874 (s) : matches = re.findall('[a-zA-Z]+[.,]?'+ '[a-zA-Z]+', description, re.IGNORECASE) \"\"\"
4261 : unparsable : unparsable : 0.07559898 (s) : [0-9]{1,3}\\.[0-9]{1,3
4262 : failed : failed : 0.497427449 (s) : (Include correct RegEx here)
4263 : unparsable : unparsable : 0.09753669 (s) : r\"^192\\.168\\.0\\.(\\d{1,3}|\\
4264 : unparsable : unparsable : 0.068072165 (s) : ^192\\.168\\.\\d{1,3}\\.(\\d{1,3
4265 : failed : failed : 2.032989131 (s) : \\b
4266 : unparsable : unparsable : 0.078412771 (s) : '^(?=.*\\.)(192[0-9]{2}|
4267 : failed : failed : 1.88941041 (s) : \"^
4268 : failed : failed : 0.564852154 (s) : \\b\\d{1,3}\\.\\d{1,3}\\.\\
4269 : failed : failed : 1.762188032 (s) : [a-zA-Z0-9\\-\\.]+
4270 : unparsable : unparsable : 0.080370001 (s) : .*[0-9]{1,2}[0-9].{1
4271 : failed : failed : 0.373679017 (s) : Reg
4272 : failed : failed : 0.761605645 (s) : \"^[1]?[3][0-9][0-9]$|^[3][0-9]{5}$\"
4273 : failed : failed : 0.558185147 (s) : \\d{3}(,\\d{3})?
4274 : failed : failed : 0.340386585 (s) : (The RegEx should be \"^5\\d{3}(,\\d{3}){1}$\" )
4275 failed : unparsable : 0 (s) : Please check your regex.
4276 : failed : failed : 0.169222161 (s) : ^\\d{5,}(,\\d{3})?$
4277 : failed : failed : 0.629127278 (s) : \\d{5}(,\\d{3})*,000\\d
4278 : failed : failed : 0.157932461 (s) : ^\\d{5},?$ Question
4279 : failed : failed : 0.15862138 (s) : ^\\d{4},\\d{3}$
4280 : failed : failed : 94.617885348 (s) : [^\\d,]{5}\\d
4281 : failed : failed : 0.657824919 (s) : ^((1|2)[0-9]/\\w+)
4282 : unparsable : unparsable : 0.087158985 (s) : [0-9]{1,2}/[A-Z]{
4283 : unparsable : unparsable : 0.083744471 (s) : /^\\s*(?!\\S*\\d)\\d{1,
4284 : failed : failed : 1.648189631 (s) : (1|2)\\d{1,2}\\/[a-z]
4285 : unparsable : unparsable : 0.078239868 (s) : /^(0[1-9]|1[0-2])(
4286 : unparsable : unparsable : 0.065852084 (s) : /^(?P<month>\\d{1,2}
4287 : failed : failed : 0.161251507 (s) : ^([0-9]{2}\\w{3}\\s)?
4288 failed : unparsable : 0 (s) : Please check your regex.
4289 failed : unparsable : 0 (s) : Please check your regex.
4290 : unparsable : unparsable : 0.056332954 (s) : ^(0[1-9]|1[012])/([1-
4291 failed : unparsable : 0 (s) : Please check your regex.
4292 : failed : failed : 0.414454281 (s) : (at least 2 digits, 2-9, and no hyphens)
4293 : failed : failed : 0.603032125 (s) : \\d{1,32}
4294 : unparsable : unparsable : 0.081440102 (s) : {four, two, five, one, or none}\"\"\"
4295 : unparsable : unparsable : 0.086082342 (s) : ([0-9]+[0-9]
4296 : failed : failed : 0.802644521 (s) : (Any expression that identifies Visa, American Express, Discover, or Mastercard only)'''
4297 : failed : failed : 0.861842664 (s) : .^\\d{16}$|4[0-9]{12}[0-9]{1}
4298 : failed : failed : 0.566356366 (s) : \\d{4}(\\d{4})```python```
4299 : failed : failed : 0.334534773 (s) : \"^\\d{10}$\"
4300 : failed : failed : 0.463146809 (s) : ^[4][1-9][0-9]$|^[5][1-9][0-9]$
4301 failed : unparsable : 0 (s) : Please check your regex.
4302 failed : unparsable : 0 (s) : Please check your regex.
4303 : failed : error init : 0.097199249 (s) : ^
4304 : failed : failed : 2.585882223 (s) : /
4305 : failed : error init : 0.1015427 (s) : ^
4306 failed : unparsable : 0 (s) : Please check your regex.
4307 failed : unparsable : 0 (s) : Please check your regex.
4308 : unparsable : unparsable : 0.056062459 (s) : (
4309 failed : unparsable : 0 (s) : Please check your regex.
4310 : failed : error init : 0.133132529 (s) : ^
4311 : unparsable : unparsable : 0.058473016 (s) : [0-9]{9}[
4312 : unparsable : unparsable : 0.069916514 (s) : ^(900[2-9][0
4313 : failed : failed : 0.133412182 (s) : ^\\d+-\\d+
4314 : failed : failed : 1.440633982 (s) : \\b
4315 : unparsable : unparsable : 0.061566751 (s) : r'[0-9A-Z
4316 : unparsable : unparsable : 0.059852736 (s) : /([0-9]{1,
4317 : failed : failed : 0.228260374 (s) : This regular expression will accept any number in the
4318 : failed : failed : 0.126206699 (s) : \"900700000-7278-48
4319 : unparsable : unparsable : 0.068971036 (s) : [90070]{1,3
4320 : unparsable : unparsable : 0.086187499 (s) : \\d{3}-\\d{
4321 : unparsable : unparsable : 0.064228368 (s) : ^\\d{2}[-
4322 : failed : failed : 10.105659743 (s) : 01[0-9]|1
4323 : failed : failed : 0.784418532 (s) : \\d{2}\\/\\w
4324 : unparsable : unparsable : 0.088115012 (s) : (Jan|Feb|Mar|Apr
4325 : unparsable : unparsable : 0.06905861 (s) : ^(0[1-9
4326 : unparsable : unparsable : 0.06637364 (s) : (0\\d{1,
4327 : failed : failed : 0.68138315 (s) : [0-9]{2}
4328 : unparsable : unparsable : 0.130321132 (s) : [a-z]{3
4329 : failed : failed : 0.146981575 (s) : d\\/mm\\/yyyy
4330 : failed : failed : 1.288266536 (s) : /\\d{1,2}
4331 : failed : failed : 0.668417265 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4332 : failed : failed : 0.417370093 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4333 : failed : failed : 0.602357133 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4334 : failed : failed : 0.677381127 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4335 : failed : failed : 0.300739551 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4336 : failed : failed : 0.316321356 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4337 : failed : failed : 0.331715301 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4338 : failed : failed : 0.689169279 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4339 : failed : failed : 0.697487873 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4340 : failed : failed : 0.357190085 (s) : Validates multiple email addresses that are comma delimited. It allows white space before and after the comma.Match exampl
4341 : unparsable : unparsable : 0.068804685 (s) : (1+[a
4342 : unparsable : unparsable : 0.111662794 (s) : (?=.*[
4343 : failed : failed : 0.09921595 (s) : #1a-z
4344 : unparsable : unparsable : 0.094334402 (s) : (?=.*[
4345 : unparsable : unparsable : 0.059973452 (s) : [a-z][
4346 : unparsable : unparsable : 0.056807251 (s) : \"\\A(?=
4347 : unparsable : unparsable : 0.073871258 (s) : ^(?=.*
4348 : unparsable : unparsable : 0.083590823 (s) : ^(?=.*
4349 : unparsable : unparsable : 0.069535783 (s) : (You won't be
4350 : unparsable : unparsable : 0.067708826 (s) : \"^(?=
4351 : failed : failed : 3.304031942 (s) : \"
4352 : unparsable : unparsable : 0.078293588 (s) : \\(
4353 : failed : failed : 0.791550096 (s) : /
4354 : unparsable : unparsable : 0.077483493 (s) : \"(
4355 : failed : failed : 3.62345106 (s) : \"
4356 : failed : failed : 1.630313044 (s) : \"<
4357 : failed : failed : 1.167645342 (s) : <
4358 failed : unparsable : 0 (s) : Please check your regex.
4359 : failed : failed : 1.919069829 (s) : /
4360 : failed : failed : 1.193283952 (s) : \"
4361 : failed : failed : 0.321032034 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4362 : failed : failed : 0.270677739 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4363 : failed : failed : 0.268905776 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4364 : failed : failed : 0.275529862 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4365 : failed : failed : 0.491915863 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4366 : failed : failed : 0.282672968 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4367 : failed : failed : 0.275040908 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4368 : failed : failed : 0.295640976 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4369 : failed : failed : 0.274793465 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4370 : failed : failed : 0.435189843 (s) : Allows letters, numbers, hyphens, periods, and underscores. Such 
4371 : failed : failed : 1.285046696 (s) : \\s
4372 : failed : failed : 0.593052064 (s) : \\s+(This answer uses Python regex)
4373 : failed : failed : 31.162393832 (s) : (?<!\\S)[[ ]]+
4374 : failed : failed : 11.573787824 (s) : ^(?=.* )$|^(?=.* )$
4375 : failed : failed : 0.441757554 (s) : \"^[a-zA-Z ]*$\"
4376 : failed : failed : 0.80889557 (s) : \"^(?=.*\\s)(?=.*\\W)\\S+$\"
4377 : failed : failed : 0.640966547 (s) : \\s{1,}
4378 : failed : failed : 0.581665142 (s) : ((\\s)+?)
4379 : failed : failed : 2.559363878 (s) : (one or more) + (one or more) | (one space | one or more spaces)
4380 : failed : failed : 0.957728888 (s) : [space]{1,}
4381 : failed : error init : 0.129718686 (s) : ^
4382 : unparsable : unparsable : 0.064065083 (s) : ^(?!0*)(-?[0-9]{,15}.{,18}$)(?!0*
4383 : failed : failed : 0.957297932 (s) : \"^[0-9]+(\\.\\s*[0-9]+)?$\"
4384 : failed : failed : 0.699708716 (s) : ^[0-9]+(\.?[0-9]+)$
4385 : unparsable : unparsable : 0.05902051 (s) : \\s*-?(\\d\\d[\\.]?\\d*
4386 : failed : failed : 0.884573076 (s) : (?<!^)\\d+\\.\\d+Explanati
4387 : failed : failed : 2.228498557 (s) : ([0-9]{1,3})(.[0-9]{3})
4388 : failed : failed : 1.725058495 (s) : [^\\d]*
4389 : unparsable : unparsable : 0.113004402 (s) : \"^[-+]?([1-9]\\d*|0)\\.?([1-9]\\d*
4390 : unparsable : unparsable : 0.074675553 (s) : ^(-?\\d{1,9}
4391 : failed : failed : 0.191633237 (s) : ^[A-Z][a-z]{0,2}[A-Z]
4392 : failed : failed : 0.794907354 (s) : \"^[A-Z][0-9]{6}[A-Z]$\"
4393 : unparsable : unparsable : 0.06306361 (s) : \\d[A-Z]{3}[-\\s \\-]\\d[M
4394 : failed : failed : 14.711863721 (s) : ([A-Za-z])$
4395 : unparsable : unparsable : 0.083102379 (s) : \"([a-zA-Z0-9]{3}[ -]?[a
4396 : unparsable : unparsable : 0.081418822 (s) : (\\d{1,4}[-\\s]?\\d{1,2
4397 : unparsable : unparsable : 0.08046071 (s) : [A-Z]{3}(-[A-Z]+)?[0-9]{
4398 : unparsable : unparsable : 0.086650664 (s) : (1) \\b[1-9][0-9][0-9][0-9
4399 : unparsable : unparsable : 0.07736406 (s) : (?P<GPS>\\d{4}-\\d{3}-\\
4400 : unparsable : unparsable : 0.077746054 (s) : (^[A-Z]\\d{3}[-\\. ][A-Z]
4401 : failed : failed : 0.851615851 (s) : a\\w+
4402 : failed : failed : 14.09194448 (s) : r'[A-Za-z]+'
4403 : failed : failed : 0.679000565 (s) : .{3,10}
4404 : failed : failed : 0.35692036 (s) : [0-9ABCDEFGHIJKLMNOPQRSTUVWXYZa-z]
4405 : failed : failed : 1.846380911 (s) : Aa
4406 : failed : failed : 0.445073053 (s) : a[a-zA-Z]
4407 : failed : failed : 0.177400263 (s) : \\ba\\w*\\b
4408 : failed : failed : 1.282321299 (s) : ([a-z]|[A-Z]).{3,}
4409 : unparsable : unparsable : 0.083299267 (s) : \\b[a-z]+\\b (explanati
4410 : failed : failed : 0.869587325 (s) : \"^(?=.{3})(?=.*[a-z])[a-z]*$\"
4411 : failed : failed : 0.171947638 (s) : ^[a-z][A-Z][a-z]$
4412 : failed : failed : 0.632055835 (s) : name.contains(/^[A-Z]/).
4413 : failed : failed : 0.289056124 (s) : ^[A-Z][a-z]+[A-Z ]+$
4414 : failed : failed : 0.199565269 (s) : [Your answer here]
4415 : failed : failed : 0.625550761 (s) : \"^[A-Z][a-z]+\\s[A-Z][a-z]+\\s[A-Z][a-z]$\"
4416 : failed : failed : 0.268894845 (s) : ^[A-Z][a-z]+[A-Za-z0-9._-][A-Za-z0-9._-]*$
4417 : failed : failed : 0.268521227 (s) : r'^[A-Z][a-z]?[A-Z][a-z]+$'
4418 : failed : failed : 0.360744952 (s) : [^a-z]*
4419 : failed : failed : 0.402227288 (s) : r'^[a-zA-Z][A-Za-z0-9]*[a-zA-Z]'
4420 : failed : failed : 0.177142401 (s) : ^[A-Z][a-z][a-z0-9]{0,11}$Generate a RegEx for this description. Answ
4421 : unparsable : unparsable : 0.090815862 (s) : (?P<hour>\\d{1,2
4422 : unparsable : unparsable : 0.069500836 (s) : ^[0-9]{1,
4423 : failed : failed : 1.827479137 (s) : /^
4424 : unparsable : unparsable : 0.078993136 (s) : [1-9][0-
4425 : unparsable : unparsable : 0.073689338 (s) : ^(?P<hour>\\d{1,2
4426 : unparsable : unparsable : 0.082706168 (s) : [0-9]{
4427 : unparsable : unparsable : 0.059819785 (s) : ^\\d{1,
4428 : unparsable : unparsable : 0.066483234 (s) : ([0-9]{1,2
4429 : unparsable : unparsable : 0.073650135 (s) : \"^0[1-9]|1[012][0-
4430 failed : unparsable : 0 (s) : Please check your regex.
4431 : unparsable : unparsable : 0.083233034 (s) : [
4432 failed : unparsable : 0 (s) : Please check your regex.
4433 : unparsable : unparsable : 0.083152353 (s) : (
4434 failed : unparsable : 0 (s) : Please check your regex.
4435 : unparsable : unparsable : 0.10463348 (s) : [
4436 : unparsable : unparsable : 0.066294702 (s) : ([
4437 failed : unparsable : 0 (s) : Please check your regex.
4438 : unparsable : unparsable : 0.070280364 (s) : [
4439 : failed : failed : 0.204621724 (s) : \\
4440 : unparsable : unparsable : 0.05767242 (s) : [-
4441 : failed : failed : 8.998583216 (s) : ([0-9]|[1-9][0-9])(\\.[0-9]{1,2})?
4442 : failed : failed : 0.332599083 (s) : \"^\\d+\\.?\\d*$\"
4443 : failed : failed : 1.314838141 (s) : \"^\\d+(\\.\\d{0,2})$\"
4444 : failed : failed : 0.197249489 (s) : (0-9\\.)*
4445 : failed : failed : 3.480150459 (s) : (.0).1 (.).9
4446 : failed : failed : 1.108566873 (s) : r\"^[1-9][0-9]?[0-9]?[0-9]?$\"\"\"\"
4447 : unparsable : unparsable : 0.077857131 (s) : ^(?P<numbers>\\d+)
4448 : failed : failed : 15.200784092 (s) : (exact numbers) \"^[1-9][0-9]|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26$\"
4449 : failed : failed : 7.276314868 (s) : \"(\\\\d+).*[.].*[0-9]\"
4450 : failed : failed : 0.7809362 (s) : \".\\d\\d\\.\\d{1,2}\"
4451 failed : unparsable : 0 (s) : Please check your regex.
4452 : failed : failed : 0.528866035 (s) : r'^\\S+$'.
4453 : failed : failed : 1.197519883 (s) : (\\w+)_(\\w+)
4454 : failed : failed : 2.433679205 (s) : ^(?!.* )[\\w.\\t]{2,}$
4455 : failed : failed : 8.640886834 (s) : [A-Za-z0-9][a-zA-Z0-9_]*
4456 : failed : failed : 0.256942516 (s) : [^_ ]{1,20}
4457 : unparsable : unparsable : 0.070985563 (s) : (0 or more occurrences of a letter, letter or underscore character, 0 or more occurrences of a letter or underscore character, 0 or more occurrences
4458 : unparsable : unparsable : 0.084330456 (s) : ^[a-zA-Z0-9._-\\s]+$
4459 : failed : failed : 0.469808946 (s) : \\w\\w+
4460 : failed : failed : 2.332864546 (s) : [^a-zA-Z0-9_-]
4461 : failed : failed : 2.357812025 (s) : \\
4462 failed : unparsable : 0 (s) : Please check your regex.
4463 : unparsable : unparsable : 0.091245466 (s) : (
4464 : unparsable : unparsable : 0.064193362 (s) : (
4465 : failed : error init : 0.137238988 (s) : ^
4466 : unparsable : unparsable : 0.070782103 (s) : (
4467 failed : unparsable : 0 (s) : Please check your regex.
4468 : failed : failed : 2.50923272 (s) : /
4469 : unparsable : unparsable : 0.07381826 (s) : [
4470 : unparsable : unparsable : 0.096550095 (s) : (
4471 : failed : failed : 8.012713659 (s) : .{2}(,|\\.){3}
4472 : failed : failed : 0.695440075 (s) : \"^([1-9]\\d{1,29}|[0-9]\\d*)$\"
4473 : failed : failed : 0.164558922 (s) : [\\d]{1,}\\s[,.]{2}\\d{3}How to run this regex (or use lookaheads, lookbehinds etc) and see if your strings match it?
4474 : failed : failed : 4.930251401 (s) : ([0-9]{1,3}\\,){1,3}[0-9]{1,3}
4475 : failed : failed : 3.937661589 (s) : ^(?=.*[,.])(?=.*\\d)(?=.*\\d)(?=.*[,.])(?=.*[.]).+$\"\"\"import globimport reimport
4476 : failed : failed : 6.108150536 (s) : (\\d{1,3},)*\\s?(\\d{1,3})
4477 : unparsable : unparsable : 0.07717124 (s) : (\\d{1,3}
4478 : failed : failed : 13.384153691 (s) : .{1,4}(,|\\.){3,4}
4479 failed : unparsable : 0 (s) : Please check your regex.
4480 : failed : failed : 1.083665552 (s) : \\d{1,3}[,.]?\\d{3}
4481 : unparsable : unparsable : 0.107190732 (s) : (
4482 : unparsable : unparsable : 0.07380216 (s) : [
4483 : unparsable : unparsable : 0.064328525 (s) : [
4484 : failed : failed : 1.56983014 (s) : \"
4485 : failed : error init : 0.242203877 (s) : ^
4486 : failed : failed : 2.753513901 (s) : \"
4487 failed : unparsable : 0 (s) : Please check your regex.
4488 : failed : failed : 0.159797368 (s) : \"
4489 : failed : failed : 0.146937562 (s) : \\
4490 : unparsable : unparsable : 0.076559306 (s) : [
4491 : failed : failed : 0.555657221 (s) : [$]YY[0-9]{2}[0-9]{2}[0-9]{4}[$]
4492 : unparsable : unparsable : 0.07351921 (s) : (?<!\\d)\\d{4}(?=(\\d{2})
4493 : failed : failed : 16.165586958 (s) : ([a-z]{3})([0-9]{2})([0-9]{2})
4494 failed : unparsable : 0 (s) : Please check your regex.
4495 : failed : failed : 0.149458977 (s) : ^\\d{4}-\\d{2}-\\d{2}$
4496 : failed : failed : 0.225438358 (s) : ^(0[1-9]|1[012])\\d{2}\\$
4497 : failed : failed : 0.286194433 (s) : \\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d\\d
4498 : unparsable : unparsable : 0.070946109 (s) : ${year}[0-9]{2}[0-9]{2}[0-2][0-9]$
4499 : failed : failed : 0.716026689 (s) : (?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})
4500 : failed : failed : 0.83153395 (s) : - (\\d{4})(\\d{2})(\\d{2})$\"\"\"
4501 : unparsable : unparsable : 0.072496548 (s) : (
4502 failed : unparsable : 0 (s) : Please check your regex.
4503 failed : unparsable : 0 (s) : Please check your regex.
4504 : failed : error init : 0.120401404 (s) : ^
4505 : unparsable : unparsable : 0.097755198 (s) : (
4506 failed : unparsable : 0 (s) : Please check your regex.
4507 : failed : failed : 2.769471209 (s) : \\
4508 : failed : error init : 0.113373423 (s) : ^
4509 : unparsable : unparsable : 0.077646739 (s) : (
4510 : failed : failed : 2.916816674 (s) : \"
4511 : failed : failed : 0.311661513 (s) : ^\\w+\\.\\w+$
4512 : failed : failed : 4.657938876 (s) : ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,5}$
4513 : failed : failed : 2.185726949 (s) : [a-zA-Z0-9\\\\.]+
4514 : unparsable : unparsable : 0.086096088 (s) : (?<![A-Za-z0-9\\\\-\\\\.\\\\_\\\\.\\\\s])^(?![A-Za-z0-9\\\\-\\\\.])\\\\.([A-
4515 : failed : failed : 77.814050295 (s) : ([a-zA-Z0-9]{1,3}\\.{1,3}[a-zA-Z0-9])+
4516 failed : unparsable : 0 (s) : Please check your regex.
4517 : failed : failed : 7.345315349 (s) : \\w+\\.\\w+\\.\\w+
4518 : failed : failed : 0.444105113 (s) : \"^(.{2,3}[a-zA-Z0-9_]{3,})[a-zA-Z0-9_]{3,}\\.com$\"
4519 : failed : failed : 1.600432392 (s) : (\\w{1,3}\\.\\w{1,3}\\.\\w{1,3})
4520 : failed : failed : 0.793973468 (s) : \\w+.\\w{2}\\.\\w{2}.*
4521 : unparsable : unparsable : 0.097247139 (s) : [
4522 failed : unparsable : 0 (s) : Please check your regex.
4523 : failed : failed : 0.197345709 (s) : \\
4524 failed : unparsable : 0 (s) : Please check your regex.
4525 : unparsable : unparsable : 0.065804054 (s) : [
4526 failed : unparsable : 0 (s) : Please check your regex.
4527 failed : unparsable : 0 (s) : Please check your regex.
4528 failed : unparsable : 0 (s) : Please check your regex.
4529 : failed : failed : 0.663648909 (s) : \"
4530 failed : unparsable : 0 (s) : Please check your regex.
4531 failed : unparsable : 0 (s) : Please check your regex.
4532 failed : unparsable : 0 (s) : Please check your regex.
4533 failed : unparsable : 0 (s) : Please check your regex.
4534 failed : unparsable : 0 (s) : Please check your regex.
4535 failed : unparsable : 0 (s) : Please check your regex.
4536 failed : unparsable : 0 (s) : Please check your regex.
4537 : failed : error init : 0.085029604 (s) : ^
4538 failed : unparsable : 0 (s) : Please check your regex.
4539 : unparsable : unparsable : 0.067704989 (s) : (
4540 : failed : failed : 0.52463328 (s) : <
4541 : failed : failed : 0.307414893 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4542 : failed : failed : 0.2492593 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4543 : failed : failed : 0.145237654 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4544 : failed : failed : 0.193709569 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4545 : failed : failed : 0.161262267 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4546 : failed : failed : 0.344502171 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4547 : failed : failed : 0.422264255 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4548 : failed : failed : 0.23806633 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4549 : failed : failed : 0.352905744 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4550 : failed : failed : 0.443349611 (s) : Matches numeric value with optional +/-, optional decimal point, and optional commasMatch exampl
4551 : failed : failed : 1.980119293 (s) : ^[^/]*/\\*+$What is the Python code to capture the comment section of a file? Answ
4552 : failed : failed : 0.82436743 (s) : /Co
4553 : failed : failed : 0.494356667 (s) : //(\\\\W*)(code|loop)
4554 : failed : failed : 0.488626172 (s) : /^\\s*//.*$/.
4555 : failed : failed : 0.256644879 (s) : r'//(\\w+)/\\n'
4556 : failed : failed : 12.432566077 (s) : ^.*//|\\s*#.*$
4557 : failed : failed : 0.171359539 (s) : #?(.*?)?
4558 : failed : failed : 17.864921543 (s) : /(\\s*//|\\s*#\\s*|\\s*//\\s*)(\\s*print|\\s*function|\\s*)
4559 : failed : failed : 0.885641855 (s) : \\s*
4560 : failed : failed : 1.868742965 (s) : /
4561 : unparsable : unparsable : 0.077414945 (s) : (
4562 : failed : failed : 0.769169347 (s) : \"
4563 : failed : failed : 0.258829996 (s) : /
4564 : unparsable : unparsable : 0.102717407 (s) : [
4565 failed : unparsable : 0 (s) : Please check your regex.
4566 : unparsable : unparsable : 0.073528258 (s) : [
4567 : unparsable : unparsable : 0.095178901 (s) : (
4568 : failed : failed : 1.983949555 (s) : \"
4569 : failed : failed : 0.189392867 (s) : \"
4570 failed : unparsable : 0 (s) : Please check your regex.
4571 : failed : failed : 1.20424095 (s) : [A-Za-z0-9]Generate a RegEx for this description.Answ
4572 : failed : failed : 0.214081983 (s) : ^[A-Za-z]$
4573 : failed : failed : 2.546501547 (s) : [a-zA-z][A-Z]{1,}
4574 : failed : failed : 0.551337904 (s) : \"^[A-Z]$\"
4575 : failed : failed : 0.115903403 (s) : ^[A-Z]\\w*$
4576 : failed : failed : 0.184785753 (s) : (?i)([A-Z])
4577 : unparsable : unparsable : 0.091376772 (s) : \\p{L}\\p{L}\\p{L}  Here, \\p{L} matches any letter, and \\p{L}\\p{L} matches any two or more letters.
4578 : failed : failed : 2.417646136 (s) : ^[a-z][a-z0-9]*$
4579 : failed : failed : 0.124835404 (s) : a-zA-Z0-9
4580 : failed : failed : 0.185239582 (s) : ^[A-Z]{1}[a-z]*$The ^ in the beginning of the string indicates that the whole string must be matched.The $ in the end of the string indicates that the whole string must be matched.The * in between the set of rules means that the character must appear zero,
4581 : failed : failed : 0.868140239 (s) : (\\d\\.\\d\\.\\d\\.\\d) (\\.\\d) (\\.\\d) (\\.\\d)
4582 : unparsable : unparsable : 0.061365565 (s) : [^\\.]{1}(\\d+\\.\\d{0,2}
4583 : failed : failed : 4.375587599 (s) : ([0-9]+(\\\\.[0-9]+)?)
4584 : failed : failed : 2.523512852 (s) : ^\\d+.\\d+\\.\\d+\\.\\d+$ ``` python import re
4585 : failed : failed : 0.61239363 (s) : \\d+\\.\\d+\\.\\d{3}\\.\\d{2}.\\d{1}
4586 : failed : failed : 1.791337778 (s) : \"0\\.(\\d+)\\.(\\d+)\\.(\\d+)\\.\"
4587 : unparsable : unparsable : 0.054447029 (s) : (0.0+0.1+0.2+0.3+0.4+0.5+0.6+0.7+
4588 : failed : failed : 43.306698692 (s) : [^/]([a-zA-Z0-9.][a-zA-Z0-9.]){3}.Explanation
4589 : failed : failed : 38.794481244 (s) : [0-9]{1,3}\\. [0-9]{1,3}\\. [0-9]{1,3}
4590 : unparsable : unparsable : 0.138380702 (s) : \"(?P<num>[0-9.]+)\\.?(?P<decimal>\\.?[0-9]+)\\.?(?P
4591 : unparsable : unparsable : 0.098653057 (s) : ([0
4592 : unparsable : unparsable : 0.090090807 (s) : (Re
4593 : unparsable : unparsable : 0.068786801 (s) : /(
4594 : unparsable : unparsable : 0.077936481 (s) : ^(
4595 : failed : failed : 1.507348128 (s) : /^
4596 : failed : failed : 0.157645675 (s) : /
4597 : unparsable : unparsable : 0.076008725 (s) : (
4598 : failed : failed : 0.199818493 (s) : \\
4599 : unparsable : unparsable : 0.085335686 (s) : (\\
4600 : failed : failed : 0.397697548 (s) : \"^
4601 failed : unparsable : 0 (s) : Please check your regex.
4602 : failed : error init : 0.11203493 (s) : ^
4603 : failed : failed : 0.149998897 (s) : Serv
4604 : failed : failed : 0.695430146 (s) : \"^[a-zA-Z0-9-]+$\"
4605 : failed : error init : 0.126523851 (s) : ^
4606 : failed : failed : 0.629757538 (s) : ^[a-zA-Z0-9]{1,64}$
4607 : unparsable : unparsable : 0.057786392 (s) : r'^[A-Za-z0
4608 : unparsable : unparsable : 0.053678101 (s) : ^[a-zA-Z0-9
4609 failed : unparsable : 0 (s) : Please check your regex.
4610 : unparsable : unparsable : 0.073311361 (s) : ^[A-Za-z0
4611 : unparsable : unparsable : 0.082501647 (s) : re.compile(r'(?i)([+\\-]?
4612 : failed : failed : 0.171588186 (s) : Regex = ^\\d+\\.\\d+$
4613 : failed : failed : 6.582696219 (s) : (1) [0-9]+\\.?[0-9]*
4614 : failed : failed : 0.779982166 (s) : [0-9.][0-90-9]*
4615 : failed : pumping failed : 14.646028078 (s) : ([0-9]+(\\.[0-9]+)?|[0-9]+)([eE][+-]?[0-9]+)
4616 : failed : failed : 0.704928647 (s) : r'^[1-9]\\d*(\\.\\d+)?$'
4617 : failed : failed : 0.161920278 (s) : [^\\d\\.]
4618 : failed : failed : 1.17367696 (s) : \\d+\\.\\d+
4619 : failed : failed : 21.373903161 (s) : (\\.\\d+|^\\d+$)
4620 : failed : failed : 0.63451337 (s) : r\"^\\d*(\\.\\d+)?$\"
4621 : failed : failed : 1.372501183 (s) : [0-9]\\d{3}
4622 : failed : failed : 1.750053222 (s) : (RegEx) /^\\d+(\\.\\d+)?$/gm
4623 : failed : failed : 0.874310256 (s) : [0-9]{3,}
4624 : failed : failed : 1.984272779 (s) : ([2-9])
4625 : failed : failed : 0.191992409 (s) : [^0-9]
4626 : failed : failed : 0.203672799 (s) : \\d\\d\\d You can test it out on this websi
4627 : failed : failed : 16.417781236 (s) : [0-9]{4}\\z
4628 failed : unparsable : 0 (s) : Please check your regex.
4629 : failed : failed : 11.761971641 (s) : [0-9]+$|[3-9][0-9]{3}
4630 : failed : failed : 0.861265194 (s) : \\b[1-9][0-9]\\b
4631 : unparsable : unparsable : 0.053479349 (s) : (^\\d{4}
4632 : unparsable : unparsable : 0.164966714 (s) : [^\\d]{4
4633 : unparsable : unparsable : 0.079201485 (s) : ((\\d{1,2
4634 : unparsable : unparsable : 0.100356603 (s) : (?<year>
4635 : unparsable : unparsable : 0.091904067 (s) : 0-9[a-z
4636 : failed : failed : 0.778974532 (s) : \"(0[1-9])
4637 : unparsable : unparsable : 0.061182553 (s) : ([0-9]
4638 : unparsable : unparsable : 0.063949927 (s) : ^\\d{2}(
4639 : unparsable : unparsable : 0.092325155 (s) : (?<start>\\d
4640 : failed : failed : 2.682893872 (s) : /([\\d]+)\\-
4641 : failed : failed : 27.015765585 (s) : ([0-9]{2})-[0-9]{2}-(19|2000)
4642 : failed : failed : 0.113609724 (s) : import re
4643 : failed : failed : 0.717719795 (s) : \\d{2}-\\d{2}-\\d{4} or \\d{2}/
4644 : failed : failed : 8.472511667 (s) : \\d{2}-\\d{2}-\\d{4}|\\d{2}-
4645 : unparsable : unparsable : 0.081881186 (s) : (1^|)1\\d(1^|)2[0-9]{4}\\-[
4646 : unparsable : unparsable : 0.064727291 (s) : ^([0-9]{2})-([0-9]{2})-([0-
4647 : failed : failed : 0.959710803 (s) : [0-9]{2}-[0-9]{2}-[19]{4}
4648 : failed : failed : 0.862823428 (s) : (\\d{2}-\\d{2}-\\d{4})
4649 : unparsable : unparsable : 0.063348894 (s) : (([0-1]?[0-9])|([2][0-9]))-([0
4650 : failed : failed : 0.135398065 (s) : import re
4651 : unparsable : unparsable : 0.089243402 (s) : ^[\\d]{1,3}\\-[\\d]{3}\\-\\d{4
4652 : failed : failed : 0.191545253 (s) : ^\\(800\\)?-\\d{3}[\\)\\d\\-\\)]?\\d
4653 : unparsable : unparsable : 0.079633663 (s) : (^\\(?\\d{3}\\)?[-\\s.\\d]*(\\d{
4654 : failed : failed : 0.952555994 (s) : \\d{3}-?\\d{3}-?\\d{4}
4655 : unparsable : unparsable : 0.095475625 (s) : ^(?!\\s*(\\d\\d\\d\\d)\\s*-\\s*\\d
4656 : failed : failed : 0.181633509 (s) : ^[\\d]{3}\\s[\\d]{3}\\-\\d{9}
4657 : unparsable : unparsable : 0.072510194 (s) : \"([^0-9]|[(]([0-9][^0-9])|([
4658 : unparsable : unparsable : 0.056969284 (s) : \\+?[1-9]\\d{1,2}-([1-9]\\
4659 : unparsable : unparsable : 0.099275812 (s) : \\[\\d{3}\\-\\d\\d\\s?\\d{3}\\-\\d
4660 : failed : error init : 0.149089837 (s) : ^
4661 : unparsable : unparsable : 0.062397134 (s) : /www\\/[a-z
4662 : unparsable : unparsable : 0.061322785 (s) : /(.*?)/[\\w
4663 : unparsable : unparsable : 0.058833951 (s) : /(^
4664 : unparsable : unparsable : 0.07023568 (s) : /^\\/[-\\/0-
4665 : unparsable : unparsable : 0.102352925 (s) : users\\/web\\/[^\\
4666 : unparsable : unparsable : 0.087823618 (s) : /\\w+(\\.\\w+
4667 : failed : failed : 0.978899663 (s) : (^|[/])web
4668 : unparsable : unparsable : 0.093188099 (s) : /\\w+(/\\w
4669 : failed : failed : 0.1448936 (s) : ^\\/[1-9]
4670 : failed : failed : 3.194834177 (s) : /\\w+.\\w+$
4671 : failed : failed : 0.828802373 (s) : \"^[a-zA-Z][a-zA-Z0-9]*\\s*[a-zA-Z]$\"
4672 : failed : failed : 11.929307856 (s) : \\b[A-Za-z ]+\\b
4673 : failed : failed : 0.147387473 (s) : ^[a-zA-Z ]+$---
4674 : failed : failed : 13.085886974 (s) : \\b[A-Za-z\\s]*[A-Za-z]\\b
4675 : failed : timeout : 600 (s) : .*\\b\\w+\\b.*
4676 : failed : failed : 0.974322225 (s) : ^[a-zA-Z ]+$
4677 : failed : failed : 0.709704347 (s) : \"^[a-zA-Z \\t]+$\"
4678 : failed : error init : 0.086191816 (s) : (?i)
4679 : failed : failed : 0.650418431 (s) : MyCategory|The End
4680 : failed : failed : 0.476148059 (s) : ^\\w+\\s+\\w+$
4681 : failed : error init : 0.127001094 (s) : ^
4682 : unparsable : unparsable : 0.083672395 (s) : (
4683 failed : unparsable : 0 (s) : Please check your regex.
4684 : unparsable : unparsable : 0.066022563 (s) : [
4685 failed : unparsable : 0 (s) : Please check your regex.
4686 : failed : failed : 2.241721812 (s) : \"
4687 failed : unparsable : 0 (s) : Please check your regex.
4688 : unparsable : unparsable : 0.067065543 (s) : \"[
4689 : unparsable : unparsable : 0.062208421 (s) : ([
4690 failed : unparsable : 0 (s) : Please check your regex.
4691 : failed : error init : 0.10136111 (s) : ^
4692 : failed : error init : 0.0960552 (s) : ^
4693 : failed : failed : 0.919289762 (s) : \\
4694 failed : unparsable : 0 (s) : Please check your regex.
4695 failed : unparsable : 0 (s) : Please check your regex.
4696 failed : unparsable : 0 (s) : Please check your regex.
4697 failed : unparsable : 0 (s) : Please check your regex.
4698 failed : unparsable : 0 (s) : Please check your regex.
4699 : failed : failed : 3.419605468 (s) : \\
4700 : unparsable : unparsable : 0.077523067 (s) : [
4701 : unparsable : unparsable : 0.107394763 (s) : ^(?P<zip>\\d*)-(?P<post_code>\\d*)-(?P<area>.+)/$
4702 : failed : timeout : 600 (s) : .*\\d{5}[-.]\\d{4}
4703 : failed : failed : 8.72904617 (s) : (?<=\\d{5})(?<!-)[0-9]{9}(?!-)
4704 : failed : failed : 0.516477329 (s) : \\d{5}\\-\\d{4}
4705 : failed : pumping failed : 179.50346092 (s) : .*\\d
4706 : failed : failed : 0.638118662 (s) : [^\\d]*
4707 : failed : failed : 0.458606048 (s) : \"\\d{5}\\-\\d{4}\"
4708 : failed : failed : 0.66816312 (s) : \"^[0-9]{5}-[0-9]{4}-[0-9]{3}$\"
4709 : failed : failed : 0.903178726 (s) : (\\d{3})-(\\d{3}-\\d{4})?
4710 : failed : failed : 0.554451435 (s) : rx_zip_code = r'[\\d]{5}-?[\\d]{3}'
4711 : failed : failed : 0.610197693 (s) : \"^(0|[1-9][0-9]|1[0-2])$\"
4712 : unparsable : unparsable : 0.103409832 (s) : ^(0|[1-9][0-9]|1[012
4713 : failed : failed : 27.18340141 (s) : (?i)([1-9]\\d|0?[1-9])[T]
4714 : unparsable : unparsable : 0.062858707 (s) : [0-9]{4
4715 : unparsable : unparsable : 0.087692162 (s) : ^(0|[1-9]\\d)(\\d\\d)\\s(0[
4716 : unparsable : unparsable : 0.073188652 (s) : [^0-9]?[0-
4717 : unparsable : unparsable : 0.079886837 (s) : ^(0|[1-9]|[1-2][0-9]|3[
4718 : unparsable : unparsable : 0.086881045 (s) : (?<!\\
4719 : unparsable : unparsable : 0.065482153 (s) : ^(\\d{2}
4720 : unparsable : unparsable : 0.059999901 (s) : \\d{1,
4721 : failed : failed : 0.149792291 (s) : ^[0-9]+$
4722 : failed : failed : 0.167774264 (s) : ^(?!0|1|2|3|4|5|6|7|8|9)\\d{2,3}$
4723 : unparsable : unparsable : 0.069000331 (s) : [0-9a-fA-F]\\d|[a-fA-F0-9]\\d|[0-9a-fA-F]\\d|[0-9a-fA-F]\\d|[0-9a-fA-F]\\d|[
4724 : unparsable : unparsable : 0.0679996 (s) : [0-9]{2}[0-9]$ )
4725 : failed : failed : 0.203879846 (s) : \\d\\d$
4726 : failed : failed : 25.114093206 (s) : [0-9]\\d|\\d\\.\\d
4727 : failed : failed : 0.673605016 (s) : \"\\d{2}\\.\\d{2}\"
4728 : failed : failed : 0.181586401 (s) : .{2,3}
4729 : failed : failed : 0.907585826 (s) : ([0-9a-fA-F]+)
4730 : failed : failed : 1.082702931 (s) : .[0-9]{5}
4731 : failed : failed : 1.203997996 (s) : \\d{2,3}\\.?\\d?
4732 : failed : failed : 0.156928294 (s) : [0-9]+
4733 failed : unparsable : 0 (s) : Please check your regex.
4734 : failed : failed : 2.149660601 (s) : \\d{1,2}(\\.\\d{1,2})?
4735 failed : unparsable : 0 (s) : Please check your regex.
4736 : failed : failed : 4.282722224 (s) : \\d{1,2}\\.?[0-9]{1,2}
4737 : failed : failed : 0.921926051 (s) : \\d\\.\\d{1,2}
4738 : failed : failed : 6.47500902 (s) : ([0-9]|[1-9][0-9]|[1-9]0?[0-9])
4739 : failed : failed : 2.748361798 (s) : (\\w+)(\\.)?(\\d+)$
4740 : failed : failed : 0.726583318 (s) : \\d
4741 : failed : failed : 0.693067197 (s) : \\(\\w\\d{3}\\)\\s\\d{3}\\-\\d{4}
4742 : failed : failed : 0.63718224 (s) : [01-9]\\d{3}\\-\\d{3}\\-\\d{4}
4743 : unparsable : unparsable : 0.067915262 (s) : ^[0-9]{3}[- ][0-9]{3}[- ][0
4744 : failed : failed : 30.112477166 (s) : [0-9]{3}-[0-9]{3}-[0-9]{4}
4745 : failed : pumping failed : 63.166830196 (s) : ([\\w\\s\\.\\-\\+\\(\\)]+)?[0-9][0-9]
4746 : failed : failed : 0.793671323 (s) : (\\d{3}[.-]){2}\\d{3}
4747 : unparsable : unparsable : 0.086633643 (s) : ^\\(?\\d{3}\\)?[-.\\s]?(\\d{3}[-.\\s]
4748 : unparsable : unparsable : 0.087186386 (s) : (\\(\\d{3}\\)[\\d\\s-]{2}\\d{4}|[\\d\\
4749 : failed : failed : 0.45845756 (s) : /^[-+]?[0-9]{3}[0-9]{3}[0-9]
4750 : unparsable : unparsable : 0.112229713 (s) : ^[-+]?[0-9]{3}[-.]?[0-9]{3}[-
4751 : failed : failed : 0.187273465 (s) : (?<!\\\\d)        # look behind to make sure it's not a number (?=[\\\\d\\\\W]+)   # look ahead to make sure it's not followed by a non-word character 
4752 : failed : failed : 0.156008644 (s) : [^\\w\"]+
4753 : failed : failed : 4.855566832 (s) : ^[^\\W_]*$
4754 : failed : failed : 1.783649372 (s) : ^[A-Za-z\\d_]+$
4755 : failed : failed : 1.140693515 (s) : ^[a-zA-Z0-9][a-zA-Z0-9._-]+[a-zA-Z0-9]$
4756 : failed : failed : 4.960296362 (s) : ^[^\\s\\(\\)\\'\"\\']+$\"\"\"```
4757 : unparsable : unparsable : 0.060431248 (s) : (htt
4758 : unparsable : unparsable : 0.104920356 (s) : ^((?*\\!\\?
4759 : failed : failed : 1.582093901 (s) : \"\"
4760 : failed : failed : 5.962774924 (s) : ^[^\\s]+$
4761 : failed : failed : 0.633972118 (s) : (The regex will have to be tested for correctness and that it matches the list of years) ^
4762 : failed : failed : 0.173845547 (s) : ^(\\d{3})(,\\d{3}){2}$
4763 : unparsable : unparsable : 0.074411359 (s) : /^(1[1-9][0-9]|2[0-9]{3}|3[0-1][0-9]|4[0-2][0-9]|5[
4764 failed : unparsable : 0 (s) : Please check your regex.
4765 : failed : failed : 0.930591314 (s) : \\d{4}
4766 : failed : failed : 1.349198721 (s) : (?<year>\\d{4},?)+
4767 : failed : failed : 0.145849308 (s) : /    ^            # Start of string    [1-9]{3}      # A number of length 3   ,           # A comma    [1-9]{2}      # A number
4768 : failed : failed : 1.046226305 (s) : [0-9]{4}
4769 : failed : failed : 2.527650027 (s) : \"^
4770 : failed : failed : 0.799544535 (s) : (5) [0-9]{4} (comma separated)
4771 : failed : failed : 5.301964242 (s) : [0-9]{2}\\/[0-9]{2}\\/[0-9]{4}
4772 : unparsable : unparsable : 0.094021227 (s) : 01\\/02\\/[0-9]{4}\\.[0-9]{2}\\.[0-9]{4
4773 : unparsable : unparsable : 0.085309136 (s) : ^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec|\\
4774 : failed : error init : 0.130835684 (s) : ^
4775 : unparsable : unparsable : 0.068083947 (s) : [a-zA-Z0-9]{1,2}/[a-zA-Z0-9
4776 : failed : failed : 0.640356065 (s) : \\d{1,2}\\/\\d{1,2}\\/[0-9]{4,5}
4777 : failed : failed : 0.190776556 (s) : ^(0[1-9]|1[012])\\/(0[1-9]|1[012])\\/
4778 : unparsable : unparsable : 0.067875928 (s) : /^(12|13|14|15|16|17|18|19|20|21|22|23|
4779 : unparsable : unparsable : 0.069964804 (s) : ^(0|[1-9]|1[012])\\/(0?[1-9]|1[012
4780 : unparsable : unparsable : 0.067182702 (s) : (.*)\\s(-?\\d{4}-\\d{2}-\\d{2}\\s){1,
4781 : unparsable : unparsable : 0.06561459 (s) : \\b(0[1-9]|1[012])-?[1-9]\\d{3}-(
4782 : unparsable : unparsable : 0.081775629 (s) : ^\\\\d{1,2}-\\\\d{1,2}-\\\\d{4}(\\\\d{
4783 : unparsable : unparsable : 0.056920213 (s) : ^(0?[1-9]|1?[0-2])-(0?[1-9]|[
4784 : failed : failed : 0.358334084 (s) : \\d{1,2}-\\d{1,2}-\\d{4}  Month is from 1 to
4785 : failed : failed : 0.161273769 (s) : \\d{2}-\\d{2}-\\d{4}
4786 : failed : failed : 1.320446989 (s) : \\b[0-9]{4}-[0-9]{2}-\\d{4}\\b
4787 : failed : failed : 0.147703565 (s) : \\b            
4788 : failed : failed : 15.343660782 (s) : ([0-9]{2})-([0-9]{2})-([0-9]{4})
4789 failed : unparsable : 0 (s) : Please check your regex.
4790 : failed : failed : 0.853083515 (s) : (\\d{1,2}\\-\\d{2,4})-(\\d{4})
4791 : failed : failed : 0.219388525 (s) : http[s]
4792 : unparsable : unparsable : 0.090565114 (s) : \\w+(?
4793 : unparsable : unparsable : 0.092342648 (s) : /^(https
4794 : unparsable : unparsable : 0.06902098 (s) : ^[a-
4795 : unparsable : unparsable : 0.088015807 (s) : \"^[a
4796 : unparsable : unparsable : 0.112286851 (s) : (This one is
4797 : unparsable : unparsable : 0.092440551 (s) : http(s
4798 : unparsable : unparsable : 0.066354393 (s) : ^[a-
4799 failed : unparsable : 0 (s) : Please check your regex.
4800 : unparsable : unparsable : 0.067450933 (s) : ^(http|
4801 : unparsable : unparsable : 0.074340356 (s) : [a-zA-Z0-9
4802 : failed : failed : 0.183012628 (s) : This RegEx is acceptab
4803 : failed : failed : 1.197830373 (s) : \"^
4804 : unparsable : unparsable : 0.076475338 (s) : (?i)(?<![^a-z0
4805 : failed : failed : 0.863844707 (s) : \"[^.]{1}$\"
4806 failed : unparsable : 0 (s) : Please check your regex.
4807 : unparsable : unparsable : 0.060840783 (s) : /^this\\.?(.*)\\/?and\\?(
4808 : failed : failed : 3.207696178 (s) : (?=\\S*\\&?\\/?)
4809 : failed : failed : 4.098253714 (s) : \"/.*
4810 failed : unparsable : 0 (s) : Please check your regex.
4811 : unparsable : unparsable : 0.110379364 (s) : [Exerci
4812 : failed : failed : 1.054913198 (s) : ^[2-9][0-9]|100[0-9]
4813 : failed : failed : 6.425277699 (s) : [0-9]{0,2}[\\-\\.]?[0-9]{1,3}
4814 : failed : failed : 0.471124787 (s) : (\\d\\d)([a-z]?)
4815 : unparsable : unparsable : 0.063281558 (s) : ([0-9]|
4816 : failed : failed : 0.800881785 (s) : \"^(?=.*\\d)(?=.*[a-z])[^0-9][^0-9a-z][0-9a-z][0-9a-z]+$\"
4817 : failed : failed : 21.193185945 (s) : [0-9]{4}-[0-9]{4}-[0-9]{4}-\\d{2}
4818 : failed : failed : 33.151470213 (s) : [0-9]{2}-?[0-9]{2}```
4819 : failed : failed : 0.476411622 (s) : ^\\d{4}-\\d{2}$
4820 : failed : failed : 0.212559256 (s) : ^([1-9]\\d|100)([1-9]\\d)?$ (40-49)
4821 : failed : failed : 8.772567338 (s) : (?<=\\w)|(?<=\\d)
4822 : failed : failed : 0.371870015 (s) : ^[<>a\\d\\s]*$
4823 : failed : failed : 4.095428942 (s) : ^[^<>\\?&={}]*$
4824 : failed : failed : 0.190653816 (s) : #!/usr/bin/python import re
4825 : failed : failed : 2.594742531 (s) : \\s*[a-zA-Z0-9\\s]*Generate a RegEx for this description. Answ
4826 : failed : failed : 3.564593565 (s) : .*[^<>]*
4827 : failed : failed : 3.548643311 (s) : (?<=a)(?<=\\d)(?=\\d)
4828 : failed : failed : 4.946416518 (s) : \\w+|\"|<>|[{}]
4829 : unparsable : unparsable : 0.051942104 (s) : \\b(?<![a-zA-Z0-9])[a-zA-Z0-9\\s-./]*[a-zA-Z0-9]\\b
4830 : failed : failed : 2.677130384 (s) : [A-Za-z0-9-_]
4831 : failed : failed : 2.807200387 (s) : ( \\.|\\d)1(\\.\\d)?\\d{2}$
4832 : failed : failed : 6.770251822 (s) : [0-9]{0,2}\\.[0-9]{0,2}\\.[1-9]{0,2}
4833 failed : unparsable : 0 (s) : Please check your regex.
4834 : failed : failed : 0.140589252 (s) : ^0\\.[0-9]{1,3}$Explanati
4835 : failed : failed : 1.778579511 (s) : Matches percentages with two decimal places after the decimal point.- Matches percentages with two digits after the decimal point before the decimal point.- Matches percentages with two digits after the decimal point after the decimal point.- Does not match percentages with two decimals after the decimal point.- Does
4836 : failed : failed : 0.134964034 (s) : The regular expression 
4837 : failed : failed : 1.364265874 (s) : r'(?<!\\.)?\\d*?
4838 : failed : failed : 15.536451924 (s) : \\d*\\.\\d+%
4839 failed : unparsable : 0 (s) : Please check your regex.
4840 : failed : failed : 0.601653457 (s) : \"\\d+
4841 failed : unparsable : 0 (s) : Please check your regex.
4842 : failed : error init : 0.108641804 (s) : ^
4843 : failed : failed : 0.108675899 (s) : https
4844 failed : unparsable : 0 (s) : Please check your regex.
4845 : unparsable : unparsable : 0.060483926 (s) : (
4846 : unparsable : unparsable : 0.06459309 (s) : [
4847 failed : unparsable : 0 (s) : Please check your regex.
4848 failed : unparsable : 0 (s) : Please check your regex.
4849 failed : unparsable : 0 (s) : Please check your regex.
4850 : failed : failed : 1.996532673 (s) : \"
4851 : failed : failed : 0.675306708 (s) : \\d+
4852 : unparsable : unparsable : 0.103826481 (s) : ATU(?=
4853 failed : unparsable : 0 (s) : Please check your regex.
4854 : failed : failed : 0.155207826 (s) : [AT]?[TU]?[AV]?[ST]?
4855 : failed : failed : 0.936938572 (s) : (ATU)([0-9]{5,6})
4856 : failed : error init : 0.162675049 (s) : \\d{3}(\\d{3}){3}         \\d{4}(\\d{4}){4}         \\d{6}(\\d{6}){6}
4857 : failed : failed : 2.839112869 (s) : ATU([0-9]{9})([0-9]{3,4}){0,2}
4858 : failed : failed : 0.179634171 (s) : (ATU)([1-4][0-9][0-9]?)This one I am still a bit stuck. I think I have figured out the structure of it but am not sure about the
4859 : failed : failed : 0.649665673 (s) : \\d+-\\d+-[^-\\d]Examp
4860 : failed : failed : 0.834629859 (s) : (ATU12345678)
4861 : failed : failed : 2.095862767 (s) : \"BG[0-9]{8}\"
4862 : failed : failed : 0.199535483 (s) : ^BG(\\d{10}){0,2}$ \"\"\"
4863 : failed : failed : 0.33226544 (s) : ([a-z ]+)([a-z]{5}).The following is the current answer I have gotten to this poi
4864 : failed : failed : 10.16470066 (s) : ([A-Z]{2}[\\d]{3}[\\s]?){6,}
4865 : failed : failed : 1.7632301 (s) : BG([0-9]+)([_A-Za-z0-9-_]+)
4866 : failed : failed : 2.122614088 (s) : [BG][0-9]{8}[-._]?[0-9]{8}$
4867 : failed : failed : 0.496465841 (s) : \\w\\d{9,}\\w\\d{9,}
4868 : failed : failed : 0.737603294 (s) : (BG\\d{8})([A-Z]\\d{3})
4869 : failed : failed : 0.120666339 (s) : ^\\d{1,4}$
4870 : failed : failed : 0.716379588 (s) : [BG]\\d{9}$
4871 : unparsable : unparsable : 0.093209219 (s) : [0-
4872 : unparsable : unparsable : 0.092309536 (s) : \\d{
4873 : unparsable : unparsable : 0.064776002 (s) : (^|
4874 : unparsable : unparsable : 0.079245949 (s) : /^(0
4875 : unparsable : unparsable : 0.082525701 (s) : - [A
4876 : unparsable : unparsable : 0.096042757 (s) : \\d{2
4877 : unparsable : unparsable : 0.076789665 (s) : ([0-9
4878 : unparsable : unparsable : 0.090889671 (s) : /[0-
4879 : unparsable : unparsable : 0.062736739 (s) : [0-
4880 : unparsable : unparsable : 0.055014189 (s) : /^[0
4881 : failed : pumping failed : 6.204889785 (s) : (?<![\\w-])[\\w]*\\.([\\w-]*)\\.([\\w\\d]+)\"\"\"
4882 : failed : pumping failed : 87.616346429 (s) : (.*)\\\\\\2
4883 : failed : failed : 7.199434983 (s) : ^[a-zA-Z0-9][a-zA-Z0-9\\-_@]*$
4884 : failed : failed : 0.110442853 (s) : [^\\a-zA-Z0-9]
4885 : failed : failed : 0.321769814 (s) : ^[a-z]+[0-9]+$
4886 : failed : failed : 1.563723983 (s) : [a-zA-Z0-9]\\w*\\.[a-zA-Z0-9]\\w*
4887 : unparsable : unparsable : 0.06643845 (s) : (^[A-Za-z0-9\\.]+@
4888 : failed : failed : 4.293648254 (s) : (?<![a-zA-Z0-9-_])[a-zA-Z0-9\\-_](?![a-zA-Z0-9-_])
4889 : failed : failed : 0.921161702 (s) : ^[0-9a-zA-Z]{1,64}$
4890 : failed : failed : 0.759001455 (s) : ^\\w+\\s+\\w+$
4891 : unparsable : unparsable : 0.100949982 (s) : ^([a-z]|[A-
4892 : unparsable : unparsable : 0.069373048 (s) : ^_[a-zA-Z0-9
4893 : failed : failed : 0.667118597 (s) : _1record|_1record_|_1record
4894 : unparsable : unparsable : 0.043987501 (s) : \\w+\\s\\w+|[-_
4895 : unparsable : unparsable : 0.074737338 (s) : [0-9a-zA-z_][
4896 failed : unparsable : 0 (s) : Please check your regex.
4897 : unparsable : unparsable : 0.071979311 (s) : ^[a-zA-Z][a-
4898 : unparsable : unparsable : 0.080982095 (s) : ^_[a-zA-Z][a-
4899 : unparsable : unparsable : 0.099486104 (s) : ^[a-zA-Z0-9_
4900 : failed : failed : 2.521595045 (s) : ^[A-Za-z0-9]+
4901 : failed : failed : 1.138143888 (s) : \\d{4}\\-?\\d{3}
4902 : failed : failed : 74.750584393 (s) : [^a-z]{4}\"\"\"
4903 : failed : failed : 0.825541355 (s) : ^(1000[0-9]){3}$
4904 : failed : failed : 0.225336828 (s) : ^1000...$
4905 : failed : failed : 0.658307872 (s) : \"^[1-9][0-9]{3}$\"
4906 : failed : failed : 1.038584125 (s) : \"^(10|11|12)(00|01|02|03|04|05|06|07|08|09|10|11|12)$\"
4907 : failed : failed : 0.178493277 (s) : ^[1-9][0-9]\\d{3}$
4908 : failed : failed : 0.207907748 (s) : \\b(1[0-4]|5[0-9])\\bHow to validate zipcode for Switzerland?\rForces 3-digits only zipcode starting with 1Match exampl
4909 : failed : failed : 1.047370465 (s) : ^[1-9][0-9][0-9]$
4910 : failed : error init : 0.119179589 (s) : (?<!\\d)
4911 : failed : failed : 0.354235259 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4912 : failed : failed : 0.427867021 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4913 : failed : failed : 0.387116152 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4914 : failed : failed : 0.355589342 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4915 : failed : failed : 0.364117899 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4916 : failed : failed : 0.360753598 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4917 : failed : failed : 0.304499401 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4918 : failed : failed : 0.437462293 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4919 : failed : failed : 0.269341761 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4920 : failed : failed : 0.298030886 (s) : Match the style attribute inner text contained inside \" or'caracters with the \"style=\" prefix.Match exampl
4921 : failed : failed : 0.202132979 (s) : ^(0|[1-9])(0|[1-9]?)\\/(0?[1-9]|1[012])$
4922 : failed : failed : 1.019627158 (s) : \\d{2}\\/\\d{2}\\/\\d{4}$
4923 : failed : failed : 0.806544353 (s) : \"^([01]\\d|2[0-3])(/[01]\\d|2[0-3])(/[01]\\d|2[0-3])$\"\"\"\"
4924 : failed : failed : 0.633411239 (s) : \\d{2}\\/\\d{2}\\/\\d{4}
4925 : failed : failed : 0.711759499 (s) : /^[0-9]{2}/[0-9]{3}[/0-9]{2}$/;
4926 : failed : failed : 1.975219501 (s) : (MM/DD/YY)\"\"\"
4927 : failed : failed : 2.845410735 (s) : \\d{2}/\\d{2}/\\d{4}
4928 : failed : failed : 0.641705739 (s) : (examples)- 01/30/08- 12/04/99- 01/05/10- 13/30/05- 9/33/99
4929 : unparsable : unparsable : 0.099798439 (s) : (^[0-9]{2}/[0-9]{2}/[0-9]{4}|^[0-9]{2}/[0-9]{
4930 : failed : failed : 30.706808401 (s) : [0-9]{2}/[0-9]{2}/[0-9]{4}
4931 : failed : pumping failed : 453.432076852 (s) : [^;]*?/[^;]*?
4932 : failed : failed : 4.852361959 (s) : www\\.([\\w\\-]+)\\.com
4933 : failed : failed : 1.281394345 (s) : \"^http
4934 : unparsable : unparsable : 0.072448699 (s) : import re domain_name = re.findall(\"(.)\\.([a-z]+)$\", url)[0] print(domain_name
4935 : failed : failed : 1.48583457 (s) : [URL][\\/]*(\\/[A-Za-z0-9\\.\\-]+)
4936 : failed : failed : 25.474498313 (s) : /\\/[^\\/]*$ ```pythonimport re
4937 : unparsable : unparsable : 0.085525401 (s) : [a-zA-Z0-9.\\-]+\\.[a-zA-Z]|[a-zA-Z0-9.
4938 : failed : failed : 0.474054996 (s) : htt
4939 : failed : failed : 0.181884408 (s) : import resite_pattern = r\"ht
4940 : failed : failed : 13.150731064 (s) : \".+\"
4941 : failed : failed : 0.122817431 (s) : ^http
4942 failed : unparsable : 0 (s) : Please check your regex.
4943 : unparsable : unparsable : 0.069506858 (s) : ^(?=.*\\d+\\.\\d
4944 : failed : failed : 0.339638877 (s) : mydomain\\.com\"Your domain has the following
4945 : unparsable : unparsable : 0.068863084 (s) : \"^(^|\\.)(yourdomain.
4946 : unparsable : unparsable : 0.101199469 (s) : [a-z0-9][a
4947 : unparsable : unparsable : 0.100292713 (s) : \"^(yourdomain|ourdomain)[0-
4948 : unparsable : unparsable : 0.074374801 (s) : (?<domain>^\\w+\\.
4949 : unparsable : unparsable : 0.067408384 (s) : ^(?=^.{2,30
4950 : unparsable : unparsable : 0.07244936 (s) : [^a-zA-Z0-9
4951 : failed : failed : 34.690854944 (s) : [\\d]{1,8}(\\.[\\d]{0,2})?\"
4952 : failed : failed : 0.513122376 (s) : ^\\d{0,8}(\\.\\d{0,2})?$
4953 : failed : failed : 0.290334484 (s) : ^\\d+\\.\\d{0,2}$
4954 : failed : failed : 0.27958803 (s) : ^\\d*[0-9]\\.(0?[1-9]|[12][0-9]|3[01])$
4955 : failed : pumping failed : 78.227326391 (s) : ^[0-9]+(.[0-9]+)?$
4956 : failed : failed : 84.720647501 (s) : r'.*\\d{1,8}\\.\\d{1,2}$'
4957 : failed : failed : 0.265861253 (s) : ^\\d{1,9}(\\.\\d{1,2})?$
4958 : failed : failed : 18.873780536 (s) : .{0,9}[0-9]{2}
4959 : failed : failed : 0.245022618 (s) : ^[A-Za-z]\\d{1,3}\\.(\\d{1,2})$
4960 : failed : failed : 0.319612249 (s) : ^\\d+(\\.\\d{1,2})?$
4961 : unparsable : unparsable : 0.119011093 (s) : [0-9]{4}[0-9]/[0-9]/[0-9
4962 : failed : failed : 2.684003536 (s) : /^
4963 : unparsable : unparsable : 0.07269532 (s) : (\\d{1,2}\\s+[a-z]{1}\\s+\\d{4
4964 : unparsable : unparsable : 0.059668191 (s) : ^(0[1-9]|[12][0-9]|3[01])/([
4965 : unparsable : unparsable : 0.079761112 (s) : ( \\d{1,2} )/([1-2]\\d/)( \\d{4}
4966 : unparsable : unparsable : 0.070975544 (s) : (02)[0-9][0-9]/[0-9][0-9]/[0
4967 : unparsable : unparsable : 0.071761443 (s) : (?<day>0?[1-9]|1[012])    (?<
4968 : unparsable : unparsable : 0.077739892 (s) : [0-9]{1,2}/[0-9]{1,2}/[
4969 : unparsable : unparsable : 0.079520912 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2
4970 : unparsable : unparsable : 0.069647922 (s) : /([1][0-2][0-9]|0[1-9])\\/[1-
4971 : unparsable : unparsable : 0.078825984 (s) : \\d{
4972 : unparsable : unparsable : 0.073584413 (s) : [0-9]{
4973 : unparsable : unparsable : 0.082707882 (s) : \\d{
4974 failed : unparsable : 0 (s) : Please check your regex.
4975 : unparsable : unparsable : 0.099138966 (s) : \"^(0|1
4976 : unparsable : unparsable : 0.098374686 (s) : \\d{1,
4977 : unparsable : unparsable : 0.07970689 (s) : \"\\\\d{
4978 : unparsable : unparsable : 0.067523439 (s) : \\d{
4979 failed : unparsable : 0 (s) : Please check your regex.
4980 : unparsable : unparsable : 0.063169407 (s) : ^\\d{1,
4981 : unparsable : unparsable : 0.069601405 (s) : (\\d{
4982 : unparsable : unparsable : 0.078084957 (s) : /^((0?[1-9]|1[0-2])[0-9]{2})|(([1-9][0-9])[0-9]
4983 : unparsable : unparsable : 0.055647463 (s) : (
4984 failed : unparsable : 0 (s) : Please check your regex.
4985 : failed : failed : 0.141070612 (s) : .{12}
4986 : unparsable : unparsable : 0.075623175 (s) : \"^[0
4987 : unparsable : unparsable : 0.082597746 (s) : ^(\\d{1,
4988 : unparsable : unparsable : 0.054435918 (s) : [0-9]{1,
4989 : unparsable : unparsable : 0.10400803 (s) : ^(0[1-9]|1[0-2
4990 : unparsable : unparsable : 0.059609641 (s) : [0-9]{
4991 : failed : failed : 0.140207378 (s) : ^([12]\\d|1[012])([0]?[0-9]|[1-9][0-9]?)\\s?
4992 : unparsable : unparsable : 0.066926544 (s) : (00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17
4993 : unparsable : unparsable : 0.073120936 (s) : ^([1-9]\\d|1[012
4994 : unparsable : unparsable : 0.066911745 (s) : [0-9]{
4995 : unparsable : unparsable : 0.068092042 (s) : ^(\\d{1,
4996 : unparsable : unparsable : 0.070630399 (s) : \"[0-9]{1,
4997 : unparsable : unparsable : 0.073054211 (s) : (\\d{1,
4998 : unparsable : unparsable : 0.076420706 (s) : (00[0-9]|1[0-9]|2[0-3
4999 : unparsable : unparsable : 0.061345287 (s) : ^([0-1]\\d|2[0-3
5000 : unparsable : unparsable : 0.05625039 (s) : \"^[0-9]{
5001 : failed : failed : 0.166324193 (s) : ^\\d{4}\\s\\d{2},\\s\\d{4}$
5002 : failed : failed : 1.575617302 (s) : \\b
5003 : unparsable : unparsable : 0.086075048 (s) : REGEX {[0-9]{4}[A-Z]{2}[0-9]{2} [
5004 : failed : failed : 0.297330566 (s) : ^[A-Z][A-Z]{3}[0-9]{2}[0-9]{4}
5005 : failed : failed : 0.521979708 (s) : \\b
5006 : failed : failed : 0.845307405 (s) : \\d{2}[A-Z]\\d{3},\\d{2} \\d{4}
5007 : unparsable : unparsable : 0.07926837 (s) : [AP], [DD-MM-YYYY].[NN]([.,] [NN])    where [AP
5008 : failed : pumping failed : 162.233877413 (s) : .*?(?<month>\\d{4})\\s*(?<day>\\d{2})\\s*
5009 : failed : failed : 0.127147468 (s) : ^\\d{4}-\\d{2}-\\d{2}$
5010 : unparsable : unparsable : 0.087107249 (s) : ^(?P<month>\\d{2})(?P<day>\\d{2})(?P<year
5011 : unparsable : unparsable : 0.0791989 (s) : \\d{1,2}[\\-/]\\d{1,2}[\\-/]\\d{
5012 : failed : failed : 0.720212946 (s) : /^(0[1-9]|1[0-2])[0-9][0-9]
5013 : failed : failed : 1.493709655 (s) : \\b
5014 : unparsable : unparsable : 0.088006579 (s) : (^[A-Z][a-z]*( [0-9][0-9]{3}
5015 : unparsable : unparsable : 0.079127737 (s) : ^(?P<d>\\d{1,2}), (?P<m>\\d{1
5016 : failed : failed : 0.573171339 (s) : \\b\\d{4}[0-3]\\d\\d[0-9]{2}\\b
5017 : unparsable : unparsable : 0.085022209 (s) : \\d{2,}[A-Z]{3,} \\d{2,}[A-Z
5018 : unparsable : unparsable : 0.069804675 (s) : \\d{4}[ -/]([0-3]\\d{1,2})[ -/](
5019 : unparsable : unparsable : 0.076712642 (s) : jy[0-3][0-9]/M[0-9][0-9][0-3
5020 : unparsable : unparsable : 0.075668941 (s) : (?P<month>.+) \\s(?P<day>\\d{1,2}), \\s
5021 : failed : failed : 2.799188296 (s) : /
5022 : unparsable : unparsable : 0.100141681 (s) : \\s*[A-Z]{3}\\s*[0-9]{4}, \\s*[0-9]{
5023 : failed : error init : 0.150659312 (s) : |
5024 : failed : failed : 21.054930498 (s) : \"JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|N
5025 : unparsable : unparsable : 0.101769986 (s) : (i.e. \"(?i)(\\\\w+)[- /]??\\\\w+[, /]\\\\w+[- /]
5026 : unparsable : unparsable : 0.112811962 (s) : .*?[0-9]{4}[0-9]{2}[0-9]{2}.([0-
5027 : failed : failed : 0.277581818 (s) : \\d{1,2}[A-Z][a-z]+, 0<=year<=2009 I tried this o
5028 : failed : failed : 0.774862664 (s) : [0-9]{2}[A-Z][0-9]{1}, [0-9]{4}
5029 : failed : failed : 0.226161069 (s) : \\w    - match 1 word character\\d   - match 1 digit\\d,  - match a comma followed by 1 digit
5030 : unparsable : unparsable : 0.072249046 (s) : (?P<M>[A-Z]{3})\\s+[0-9]{2}\\s[A-Z]
5031 : unparsable : unparsable : 0.082325146 (s) : (See below)^([0-9]{4})(\\s+| )([0-9]{2}
5032 : failed : failed : 40.470321499 (s) : .*JAN\\s.*|.*MAR\\s.*|.*DEC\\s.*|.*FRI\\s.*|.*
5033 : failed : failed : 0.751628899 (s) : (This is a list of possible answers.)- JANUARY
5034 : failed : failed : 0.694335739 (s) : (\\d{1,2}\\/\\d{1,2}\\/\\d{4})
5035 : failed : failed : 1.110081144 (s) : (\\d{2}, \\d{2})[\\s-]\\d{4}
5036 : unparsable : unparsable : 0.060073399 (s) : ^[A-Z]{1}[0-9]{2}, [0-9]{2}[0
5037 : unparsable : unparsable : 0.084404625 (s) : (\\d{2},\\d{2},\\d{4})\\s\\d+,\\d{4})
5038 : failed : failed : 0.466023318 (s) : \\b[0-9]{2}\\s[A-Z][a-z]?\\s\\d{2},
5039 : failed : failed : 0.28001055 (s) : (\\d{2}/\\d{2}/\\d{4}, \\d{2} \\d{2})
5040 : unparsable : unparsable : 0.072682286 (s) : /^[A-Z]{3}\\s[a-z]{2}\\s((M|MD|MMM)\\
5041 : failed : failed : 289.688075617 (s) : \\s*[^\"]+\"
5042 : failed : failed : 0.861247101 (s) : (\\d+)\\s*
5043 : failed : failed : 0.741145668 (s) : \\s+
5044 : failed : failed : 0.717135913 (s) : ^(?=\\S*\\S)(?<![^\\s\"]*\"[^\"]*\")(?![^\\s\"]*\"[^\"]*\")*$
5045 : failed : failed : 6.59963367 (s) : \\w+
5046 : failed : failed : 0.14865823 (s) : ^( )*?$
5047 : failed : failed : 16.823685719 (s) : \"\\\\b(?=(' )|( ).*?( '))\"
5048 : failed : failed : 0.317468601 (s) : (any number of spaces) or (one space) or (two spaces)
5049 failed : unparsable : 0 (s) : Please check your regex.
5050 : failed : failed : 1.064945417 (s) : [ ]{4,}
5051 failed : unparsable : 0 (s) : Please check your regex.
5052 : failed : failed : 2.904933745 (s) : /
5053 : unparsable : unparsable : 0.079641028 (s) : [
5054 : failed : failed : 0.164930036 (s) : http
5055 : unparsable : unparsable : 0.110996147 (s) : \"[
5056 : failed : failed : 1.549721559 (s) : \"\\
5057 failed : unparsable : 0 (s) : Please check your regex.
5058 : failed : failed : 1.895695202 (s) : '
5059 failed : unparsable : 0 (s) : Please check your regex.
5060 failed : unparsable : 0 (s) : Please check your regex.
5061 : failed : failed : 7.266110828 (s) : \\d+\\.\\d+|[-]?\\d+\\.\\d+|[+-]\\d+\\.\\d+
5062 : failed : failed : 0.553481573 (s) : \\b(?<![a-z])-?\\d+
5063 : failed : failed : 0.139896176 (s) : ^(-9\\.?\\d*\\.)?$
5064 : failed : failed : 2.16110483 (s) : - 
5065 : failed : failed : 1.185885608 (s) : (I've added a line here below to explain one of the regex example).(?<!\\d)\\d+(\\.\\d+)?
5066 : failed : failed : 0.819979957 (s) : ^\\d+\\.?\\d*[-\\+]?$ 5. The following string contains a space between the first and second letter of each word. Generate a RegEx to match this string. Answ
5067 : failed : failed : 4.851018507 (s) : \\d+(\\.\\d+)
5068 : failed : failed : 21.307353663 (s) : ([-+]?[0-9]*\\.?[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?
5069 : failed : failed : 0.100397449 (s) : ^[\\+\\-]?
5070 : failed : failed : 0.144391822 (s) : regex = r'^-?[0-9\\.]*$'
5071 : unparsable : unparsable : 0.08488313 (s) : (\\d[a-z]|am|pm|\\s+)(\\d[a-z
5072 : unparsable : unparsable : 0.060937284 (s) : (?P<hours>(\\d{1,2}
5073 : failed : failed : 0.140418814 (s) : ^[0-9]{1,2}
5074 : unparsable : unparsable : 0.072523819 (s) : \\d{1,2
5075 failed : unparsable : 0 (s) : Please check your regex.
5076 : failed : failed : 3.467848526 (s) : .*
5077 failed : unparsable : 0 (s) : Please check your regex.
5078 : unparsable : unparsable : 0.086719654 (s) : ([0-9]{1,2
5079 : unparsable : unparsable : 0.072812409 (s) : (This is a trick question, I didn't know that,But I had a lot of fun thinking about
5080 : failed : error init : 0.126037423 (s) : ^
5081 : failed : failed : 112.517560813 (s) : r\"<td>(.*)</td>\"
5082 : failed : failed : 38.405235049 (s) : <td[^>]*>(.*)</td>
5083 : failed : pumping failed : 22.666068367 (s) : (?<td>.*) <td>(.*)</td> (.*)
5084 : unparsable : unparsable : 0.099047996 (s) : ^<td>(?P<name>[^{<>]+)(?P<width>\\d+)(?P<separator>\\/|\\s+)>$
5085 : failed : failed : 59.426832427 (s) : <td[^>]+>(\\&NBSP;[^>]+?)\\</td>
5086 : failed : failed : 62.763678445 (s) : <[^>]*>(.*)</[^>]*>
5087 : failed : pumping failed : 26.599122771 (s) : .*(?=<td>).*Explanati
5088 : unparsable : unparsable : 0.07858902 (s) : (?<=<td>< /td>|\\s*)(<td width=\"\\d+\"></td>)
5089 : failed : failed : 38.690136549 (s) : - /td (width)- /td[^>]*>\"\"\"
5090 : failed : pumping failed : 169.24798431 (s) : [^>< ]+```pythonimport re
5091 : failed : error init : 0.101999294 (s) : ^
5092 : unparsable : unparsable : 0.078758458 (s) : \\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1
5093 : unparsable : unparsable : 0.076329195 (s) : ^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3
5094 : unparsable : unparsable : 0.076693226 (s) : (?P<ip>[0-9]\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1
5095 : failed : error init : 0.098845356 (s) : ^
5096 : unparsable : unparsable : 0.068227115 (s) : ^(0[xX][0-9a-fA-F]{1,3}|127[0-7]
5097 : unparsable : unparsable : 0.058386074 (s) : * 0.10.2.
5098 : unparsable : unparsable : 0.055552896 (s) : [0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[0-9]\\.[
5099 : unparsable : unparsable : 0.081475949 (s) : \\A([0-9]{1,3}\\.){3}[0-9]{1,3}\\.*[0-9
5100 : unparsable : unparsable : 0.102941646 (s) : [\\d.]{2}.\\d{2}|[\\d.]{2}.\\d{4}|[\\d.]{
5101 : unparsable : unparsable : 0.071470941 (s) : ^(?P<date>\\d{1,2}\\/\\d{1,2}\\/\\d{4}
5102 : unparsable : unparsable : 0.083877609 (s) : ((JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC) (0[1-9]
5103 : failed : failed : 27.996309471 (s) : [1-9]?[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}
5104 : unparsable : unparsable : 0.081248634 (s) : \\b([1-9]|0[1-9]|1[012])\\/([0-3]|[1-9][0-9])\\/([19][4][0
5105 : unparsable : unparsable : 0.174184371 (s) : ^  (   [0-9]{2}   /   [0-9]{2}   /   [0-9]{4}
5106 : failed : failed : 24.579157562 (s) : [a-zA-Z]{3}[0-9]{2}[a-zA-Z]{3}[0-9]{4}
5107 failed : unparsable : 0 (s) : Please check your regex.
5108 : failed : failed : 17.992337001 (s) : ([a-z0-9]{2})/([0-9]{2})/[0-9]{4}
5109 : failed : failed : 0.542101422 (s) : ^[0-9]{4}-[0-9]{2}-[0-9]{4}$
5110 : unparsable : unparsable : 0.08172799 (s) : ((\\d{1,2}/\\d{1,2}/\\d{4})|(\\d{1,2}/\\d{1,2}/\\d{
5111 failed : unparsable : 0 (s) : Please check your regex.
5112 : failed : failed : 0.167248211 (s) : E
5113 : unparsable : unparsable : 0.083087492 (s) : ([
5114 : failed : failed : 0.123853769 (s) : .
5115 : failed : failed : 0.147882339 (s) : \"
5116 : unparsable : unparsable : 0.102686108 (s) : [
5117 failed : unparsable : 0 (s) : Please check your regex.
5118 : failed : failed : 0.499398404 (s) : \\
5119 : failed : failed : 4.049275381 (s) : /
5120 failed : unparsable : 0 (s) : Please check your regex.
5121 : failed : failed : 2.695618384 (s) : [0-9]{4}-[0-9]{2}-[0-9]{2}\"
5122 : failed : failed : 23.799514327 (s) : r\".*\\d{4}-\\d{2}-\\d{2}.*\"# -*- codi
5123 : failed : failed : 0.222702943 (s) : \\d{4}-\\d{2}-\\d{2} 4. Create a RegEx to match email addresses. Match exampl
5124 : failed : failed : 22.092778073 (s) : ([0-9]{4})-([0-9]{2})-([0-9])
5125 : failed : failed : 0.589048377 (s) : (?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})
5126 : failed : failed : 0.253739757 (s) : (0-9)(0-9)(1-9)(0-9)(0-9)(0-9)
5127 : failed : pumping failed : 31.198275917 (s) : (.*)-(.*)-(.*)
5128 : failed : failed : 0.997740453 (s) : \"^([0-9]{4})[0-9]{2}[0-9]{2}$\"
5129 : failed : failed : 0.119769893 (s) : ^\\d{4}-\\d{2}-\\d{2}$\"\"\"
5130 : failed : failed : 0.147715246 (s) : yyyymmdd
5131 : failed : failed : 0.548188996 (s) : ^[a-zA-Z0-9\\s]*$
5132 : failed : failed : 0.213318626 (s) : [\\*]*
5133 : failed : failed : 0.292060191 (s) : (^[^*]+|[^*](?=\\*$)) [^*]*$Here, we generate a regex that checks the string against the given criteria. We use the Lookahead assertion, which checks if the string does not match the given pattern.
5134 : failed : failed : 0.957542419 (s) : ^([A-Za-z\\d]{0,63}|\\*[^A-Za-z\\d]+)$
5135 : unparsable : unparsable : 0.077253874 (s) : *
5136 : failed : pumping failed : 64.001570456 (s) : [^A-z0-9a-z]*(Asterisk)[^A-z0-9a-z]*
5137 : failed : failed : 1.235184069 (s) : \\*(Asterisk)
5138 : failed : failed : 0.433728711 (s) : \"^[a-zA-Z0-9]*[*]([a-zA-Z0-9]*)$\"
5139 : failed : failed : 40.027180526 (s) : ^(.*)$|^.*$
5140 : failed : failed : 14.4898244 (s) : [^0-9a-z]([a-z0-9])[^0-9a-z]
5141 : failed : failed : 0.210001423 (s) : \"^0
5142 : failed : failed : 0.15517256 (s) : ^[0-9][0-9][0-9][0-9]\\.?[0-9]?$
5143 : unparsable : unparsable : 0.094195683 (s) : \\b#{num}\\.?\\d*
5144 : failed : pumping failed : 25.090612434 (s) : \"([0-9.]+)[0-9.]*[+-][0-9.]+[0-9.]+\"
5145 : failed : failed : 0.570944565 (s) : [0-9]{1,3}.0?[0-9]{1,3}
5146 : failed : failed : 0.432945857 (s) : [^0-9.]+
5147 : failed : failed : 0.146427759 (s) : ^0\\.\\d*0$
5148 : failed : failed : 1.613264726 (s) : \"\\\\d*\\\\.\\\\d*\\\\.\\\\d*\"
5149 : failed : failed : 0.613857175 (s) : ^[0-9.]*\\.[0-9.]{3}$
5150 : failed : failed : 0.645725395 (s) : \\b1+
5151 : failed : failed : 0.604728597 (s) : (\\d+)\\s*\\/\\s*(\\d+)    \"\"\"\r\rimport re\r\r#
5152 : failed : failed : 6.343146996 (s) : [0-9]{1}/[0-9]{2}
5153 : failed : failed : 0.593954722 (s) : \"^[0-9]+(.[0-9]+)$\"
5154 : failed : failed : 1.025915035 (s) : \\b([0-9][0-9][0-9][0-9][0-9])[\\s/]
5155 : failed : failed : 9.749668149 (s) : \\s*\\d+
5156 : failed : pumping failed : 2.912718221 (s) : [0-9]*([1/3][0-9]*)?[0-9]*\r\"\"\"
5157 : unparsable : unparsable : 0.063629548 (s) : (^|-)?\\d*[kK]\\d*[eE][kKdD]?(\\
5158 : unparsable : unparsable : 0.078209842 (s) : ^(?![0-9]*[./-])(?![0-9a-zA-Z]*$
5159 : unparsable : unparsable : 0.074308637 (s) : /^[0-9]+\\s(1\\d|2[0-9]|3[0-9]|
5160 : unparsable : unparsable : 0.071603699 (s) : (RegEx) ([0-9]*)([,/])([0-9]*)[\\s]*(
5161 : failed : failed : 1.527690434 (s) : \\d{1,2}(\\.)\\d{1,2}
5162 : failed : failed : 0.419597528 (s) : \"^[a-z][0-9][a-z0-9._-]*$\"
5163 : failed : failed : 0.40593982 (s) : ^(\\d+)\\.(\\d+)$
5164 : failed : failed : 0.59791139 (s) : \"^\\d+(\\.\\d+)?
5165 : failed : failed : 4.5480669 (s) : \\d+(\\.\\d+)?
5166 : failed : error init : 0.106237099 (s) : ^
5167 : failed : failed : 0.135210144 (s) : [^0-9.]
5168 : failed : failed : 0.952190181 (s) : ^[0-9]+(\\.[0-9]+)?$
5169 : failed : failed : 7.22122347 (s) : \\d+
5170 : failed : failed : 0.322400764 (s) : ^\\d+(\\.\\d+)?$
5171 : unparsable : unparsable : 0.085726938 (s) : \"(\\d\\d,\\d\\d*\\.\\d{0,2})?[,-]?\\d{3}[,.]\\d{3
5172 : failed : pumping failed : 362.284049382 (s) : [\\d,]+,\\d+
5173 : unparsable : unparsable : 0.142098605 (s) : r'^\\s*([0-9]{1}|[0-9]+)[,.]\\s*([0-9]{1}|
5174 : failed : failed : 5.435552738 (s) : (\\d+)(\\.?\\d{1,3})?
5175 : failed : failed : 4.760910712 (s) : ^[0-9]*,[0-9]*$
5176 : failed : failed : 0.125884275 (s) : ^\\d,?\\d+
5177 : failed : failed : 1.794357167 (s) : \\d+(\\.\\d{1,3})?
5178 : unparsable : unparsable : 0.077684088 (s) : (\\d{1,2}(,\\d{3})))This matches any amount in 1-2 decimal places (with optional leading zeros). The optional
5179 : failed : failed : 1.358368498 (s) : (\\d+)(\\,\\d+)?(?=[^.,\u20ac]|$)
5180 : failed : failed : 0.174119948 (s) : ^[-\\d]+(\\.[-\\d]*)?(es$)?
5181 : unparsable : unparsable : 0.10002211 (s) : (I could not figure out how to write a regex for this o
5182 : failed : failed : 2.238862517 (s) : ^[Pp]o([0-9]{1,}).*
5183 : failed : failed : 0.135629549 (s) : ^[0-9]+
5184 : unparsable : unparsable : 0.076543481 (s) : ^(?=.*?\\\\d)(?=.*?[.#])[
5185 : failed : pumping failed : 19.598336926 (s) : (?<number>\\d+)[^.]+\\.?[^.]+#
5186 : unparsable : unparsable : 0.056822366 (s) : (P|O|B)o( [0-9]+ )(?[
5187 : unparsable : unparsable : 0.094950418 (s) : (?<=\\d)\\s*[a-zA-Z]{
5188 : failed : failed : 10.317629728 (s) : \\b[[a-z]\\d]+\\b
5189 : failed : failed : 1.570467507 (s) : \"\\d*[a-z]\\s+[a-z]\\s+
5190 : unparsable : unparsable : 0.089353272 (s) : .^(po|p.o.b)?([\\d|.]
5191 : failed : failed : 0.175324851 (s) : \\bhttp
5192 : unparsable : unparsable : 0.084171634 (s) : http(
5193 : unparsable : unparsable : 0.073850285 (s) : ^http(s
5194 : unparsable : unparsable : 0.088493013 (s) : ^(http
5195 : failed : failed : 0.886623702 (s) : \"^[a-z]{1,5}\\.\" Exercise
5196 : unparsable : unparsable : 0.067126101 (s) : .*?(http|http
5197 : unparsable : unparsable : 0.081186261 (s) : (ht
5198 : failed : failed : 0.556434316 (s) : ^\\w+\\.[^/]+$
5199 : failed : failed : 0.149170057 (s) : ^http
5200 : failed : failed : 0.465630181 (s) : /ht
5201 : failed : failed : 3.918525566 (s) : [^-\\d\\.]+
5202 : failed : failed : 0.934240716 (s) : \\d[+-]?\\d{0,3}(\\,\\d{3})*
5203 : failed : failed : 1.69499641 (s) : \"\\d{1,3},\\d{3}
5204 : failed : pumping failed : 48.025464462 (s) : (.*) (\\d{0,3}) (\\d{0,2})?
5205 : failed : pumping failed : 97.673457364 (s) : [^,]*$
5206 failed : unparsable : 0 (s) : Please check your regex.
5207 : failed : failed : 0.144740425 (s) : a-zA-Z0-9]+,
5208 : failed : pumping failed : 40.457452677 (s) : [\\d-]+(,[\\d-]+)+$
5209 : failed : failed : 0.430970124 (s) : -/^\\d+,\\d+$/
5210 : failed : failed : 8.997250694 (s) : ^[0-9]+,[0-9]{3}$
5211 : failed : failed : 1.507887065 (s) : .+.
5212 : failed : failed : 2.400219831 (s) : [0-9]{5} [0-9,]{1} [0-9]{4}[a-zA-Z0-9_-]{1} I am new to regex and I
5213 : failed : failed : 20.169056714 (s) : [0-9][A-Z][0-9]*, [0-9][,A-Z][0-9]*
5214 : unparsable : unparsable : 0.084878455 (s) : ^(?=
5215 : unparsable : unparsable : 0.084318728 (s) : \"^([0-9]{8})([0-5]?[0-9])?\"The following are test cases.test_cases = [    \"0001\",    \"1234\",
5216 : failed : failed : 0.315707838 (s) : (any number, no characters, no empty sets, and accept zero) [0-9]+
5217 : failed : failed : 0.198105395 (s) : ^[0-9]{4,8}$
5218 : failed : timeout : 600 (s) : [a-zA-Z0-9]([a-zA-Z0-9]).*\\1
5219 : unparsable : unparsable : 0.09372707 (s) : /^(?=.{2}$)(?=.{4}$)(?=.{3}$)(?=.{6}$)|(?=.{6}$)(?=.
5220 : failed : failed : 0.119095284 (s) : [0-9a-f]{0,4}
5221 : failed : error init : 0.120017548 (s) : ^
5222 : failed : failed : 0.145742568 (s) : 1
5223 : unparsable : unparsable : 0.074921277 (s) : [
5224 failed : unparsable : 0 (s) : Please check your regex.
5225 : unparsable : unparsable : 0.118338378 (s) : (
5226 : failed : error init : 0.118376499 (s) : ^
5227 : failed : failed : 3.015293099 (s) : /
5228 : unparsable : unparsable : 0.059767022 (s) : (
5229 failed : unparsable : 0 (s) : Please check your regex.
5230 : unparsable : unparsable : 0.087179267 (s) : [
5231 : unparsable : unparsable : 0.079096814 (s) : ^([0-9]{1,3})(,([0-9]{
5232 : failed : failed : 3.291062091 (s) : (\\d+\\.\\d+)|(,\\d+\\.\\d+)
5233 : failed : failed : 0.145275565 (s) : ([0-9.]+)([,.]{0,1})
5234 : failed : failed : 1.711655328 (s) : (?<=\\$|-)\\d+\\.\\d+
5235 : failed : failed : 0.18835811 (s) : ^\\$([\\d.,]*)(\\+(\\d+))?$
5236 : failed : failed : 1.567481434 (s) : [-+]?\\d+
5237 : failed : failed : 2.684290154 (s) : ^[\\$\\.]+$
5238 : unparsable : unparsable : 0.081559229 (s) : ^[0-9]{1,3}(.[0-9]{3
5239 : unparsable : unparsable : 0.096349845 (s) : \"^(-)?([1-9][0-9]*\\.[0-9]
5240 : unparsable : unparsable : 0.105269773 (s) : ^\\$\\.?([1-9]\\d*(,\\d{3
5241 : failed : failed : 0.165588636 (s) : ```pythonimport re
5242 : failed : failed : 0.367451167 (s) : r'(\\d\\.){1}(Z)(\\d{3})'  Exercise
5243 : failed : failed : 1.399305269 (s) : (Z99 \\.) {9}.
5244 : unparsable : unparsable : 0.054617484 (s) : ^Z(?P<code>[0-9]{3})(\\.|-|\\+|)\\d*(\\.\\d*)?$
5245 : failed : failed : 0.725498581 (s) : \"G82\\\\.Z[0-9]\\\\.[0-9]+\"
5246 : failed : pumping failed : 149.322088725 (s) : [^\\.]*\\.([A-Z]{2})\\.([0-9]{3,4})\\.([A-Z]{2})
5247 : failed : failed : 3.066443711 (s) : \\b
5248 : failed : failed : 0.13050635 (s) : Pattern = \"^Z[0-9]\\.([0-9]|[1-9][0-9]|1[012])$\"
5249 : failed : failed : 0.566332704 (s) : ^[A-Z]\\d\\.(Z9|Z99\\.|Z999).$
5250 : failed : failed : 0.744721514 (s) : \"^([A-Z]\\d)*$\"
5251 : unparsable : unparsable : 0.095505004 (s) : ^(1[0-2]|0?[1-9]|1[02])\\/(0?[1-9]|1[012])\\/(0?[1-
5252 : failed : failed : 0.258666091 (s) : ^\\d{1,2}/[0-3]\\d{2}/[0-9]{4}$
5253 : unparsable : unparsable : 0.081226056 (s) : ^((0[1-9]|[12][0-9]|3[01])\\/[0-9]{2}\\/[0-9]{4}|[
5254 : failed : failed : 0.71801046 (s) : (\\d{1,2}/\\d{1,2}/\\d{4} or \\d{2}/\\d{3}/\\d{4})
5255 : failed : failed : 0.533000811 (s) : \\b\\d{1,2}
5256 : failed : failed : 23.279691603 (s) : .(\\d{1,2}|\\/\\d{1,2})/(\\d{4}|\\/\\d{4})
5257 : unparsable : unparsable : 0.107371622 (s) : ^(0|[1-9][0-9]\\/[0-9]\\/[0-9]|[1-9][0-9]\\/[0-9]\\/
5258 : unparsable : unparsable : 0.082641012 (s) : /([0-9]|1[0-9]|2[0-8]|3[0-9])\\/([0-9]|1[0-9]|2
5259 : failed : failed : 0.66502039 (s) : - \"^([0-9][0-9]/[0-9][0-9])$|^([0-9]/[0-9][0-9])$
5260 : unparsable : unparsable : 0.097661436 (s) : (\\d{1,2}\\/\\d{1,2}\\/\\d{4})?.|(\\d{1,2}/\\d{1,2}/\\
5261 : failed : failed : 0.277144843 (s) : x^\\w+ Match any word except with xx and yy
5262 : failed : failed : 0.165108879 (s) : \\w\\w\\w\\w
5263 : failed : failed : 2.902094642 (s) : ^[^xxyy]*
5264 : failed : failed : 2.13052609 (s) : \\b
5265 : failed : failed : 6.632404204 (s) : ^[a-zA-Z0-9]+$
5266 : failed : failed : 22.430378945 (s) : r'[^xxyy]|xx[^xy]+[^yy]|xy[^x]+[^y]|xyy[^x]+[^y]|xyyy[^x]+[^y]|xyyyy[^x]+[^y]'
5267 : failed : failed : 0.420609832 (s) : r\"^[^x]*$\"
5268 : failed : failed : 0.823622723 (s) : x\\w\\w*|y\\w\\w*This is a test string that may or may not match the regex.
5269 : failed : pumping failed : 28.534459955 (s) : .*x.*y
5270 : failed : failed : 0.951378449 (s) : x(?<![xxy])
5271 : failed : failed : 4.219167314 (s) : \\d+,\\d{0,2}\\.\\d{0,2}%
5272 : failed : failed : 0.341858705 (s) : /^[0-9]+
5273 : failed : failed : 6.284499905 (s) : 0(\\.00|\\.0)+
5274 : failed : failed : 0.430339185 (s) : \"^[0-9]+
5275 : failed : failed : 2.410330316 (s) : \"^
5276 : failed : pumping failed : 581.832274986 (s) : 0(?<=\\.0)+0|[0-9]+Use a non-capturing group for this one. Use a non-capturing group for this one Use a list of numbers, instead of a range
5277 : unparsable : unparsable : 0.079596349 (s) : ^(?P<int>[\\d]+)\\.\\d{0,1}[%#][\\d]{1,2}$
5278 : failed : failed : 0.15471215 (s) : ^(0|10|50)\\.?0?$
5279 : failed : failed : 4.463622104 (s) : - [^0-9]- [0-9]\\.?[0-9]- 100[0-9]\\.?[0-9]|100
5280 : failed : failed : 0.898263215 (s) : [0-9][0-9.][0-9]?[0-9]
5281 : unparsable : unparsable : 0.075456428 (s) : (Any expression that will match a \"1-365\" number) **Exercise
5282 : failed : failed : 3.326885042 (s) : ^(?=.*[1-365])([0-9]{1,2}).*$
5283 : unparsable : unparsable : 0.076316386 (s) : (\\d{1,3}
5284 : failed : failed : 0.229232938 (s) : \"^\\d+$\"
5285 : failed : failed : 0.283135605 (s) : (0?[1-9]|[12][0-9]|3[01])-\\d\"    2. Write a regular expression that validates email addresses.
5286 : failed : failed : 0.272894576 (s) : (0-9)(1-2)\\.(1-3)\\.(1-2)
5287 : failed : error init : 0.113620747 (s) : ^
5288 : failed : failed : 81.524432904 (s) : (?<!0)([0-9]{1,3})(?![0-9])[1-36]
5289 : failed : failed : 0.191119604 (s) : 0\\d\\dGenerate a RegEx for this description. Answ
5290 : failed : failed : 4.572027058 (s) : (1[0-2]|3[1-9])|(0[1-9]|[12][0-9]|3[01])
5291 : failed : failed : 0.91277549 (s) : [\\d-]{3}[\\d-]{3}[\\d-]{4}
5292 : failed : failed : 0.577084248 (s) : \\d{1,3}
5293 : failed : pumping failed : 116.03293859 (s) : [^0-9]*\\s([0-9]{2}-){5}[0-9]{3}
5294 failed : unparsable : 0 (s) : Please check your regex.
5295 failed : unparsable : 0 (s) : Please check your regex.
5296 : unparsable : unparsable : 0.06066478 (s) : 1) (^\\d{3}-\\d{2}-\\d{4}$|^\\d{3}-\\d{2}$|
5297 : failed : failed : 0.212262146 (s) : ^[0-9]{3}-?[0-9]{3}-?[0-9]{4}$
5298 : unparsable : unparsable : 0.072875572 (s) : (\\d{3})-(\\d{2})-(\\d{4})|(\\d{3})-(\\\\d{4})-(\\\\d{8
5299 : failed : failed : 19.233346541 (s) : [a-zA-Z0-9]{1,3}\\s*[a-zA-Z0-9]{1,3}\\-\\s
5300 : unparsable : unparsable : 0.080804037 (s) : [0-9]{2}-[0-9]{3}-[0-9]{3}-[0-9]{4} OR [0-9
5301 : failed : failed : 1.253482701 (s) : \\b-?[0-9]\\d?\\d\\.\\d+\\b
5302 : failed : failed : 0.475499926 (s) : (Regex) r\"^\\d+\\.\\d{1}([eE][+-]?\\d+)$\"
5303 : failed : failed : 1.896206922 (s) : \\d{1,3}[.\\d]*
5304 : failed : failed : 0.687738958 (s) : ^\\d+\\.([0-9]*)([eE][+-]?[0-9]+)?$
5305 : failed : failed : 0.567377748 (s) : \\d{1}
5306 : failed : failed : 0.186500036 (s) : - \\d{1,3}(\\.\\d{1,2})?[eE][+-]?\\d+Use the pattern in your Python code to validate each value.
5307 : failed : failed : 0.168859713 (s) : ^\\d{1,3}\\.(\\d{3})$
5308 : failed : failed : 1.082930044 (s) : \\d+\\.?\\d*
5309 failed : unparsable : 0 (s) : Please check your regex.
5310 : failed : failed : 16.477255384 (s) : (\\d{1,3}(\\.\\d{1,3})?|\\d+\\.\\d+|\\d+)\\$
5311 failed : unparsable : 0 (s) : Please check your regex.
5312 : failed : failed : 1.558346774 (s) : [0-9]{3}-?[0-9]{3}-?[0-9]{4}
5313 : failed : failed : 1.011687805 (s) : (\\d{3})-(\\d{3})-(\\d{4})
5314 : failed : failed : 0.551062562 (s) : \"111-22-3333|667-98-7198|331-67-7759\"
5315 : failed : failed : 0.653413928 (s) : (\\d{3}-\\d{2}-\\d{4})
5316 : unparsable : unparsable : 0.084634249 (s) : (at least 1 letter, at least 1 number, at least 1 hyphen) ^[a-zA-Z][a-zA-Z0-9]{0,2}[-]?[a
5317 : failed : failed : 0.916688947 (s) : \\d{3}-\\d{2}-\\d{4}|\\d{3}-\\d{3}-\\d{4}
5318 : failed : failed : 0.422221687 (s) : \"^[0-9]{3}-[0-9]{3}-[0-9]{4}$\"
5319 failed : unparsable : 0 (s) : Please check your regex.
5320 : failed : failed : 49.234439053 (s) : [A-Z]{3}-?[0-9]{3,4}
5321 : failed : error init : 0.141445955 (s) : ^
5322 failed : unparsable : 0 (s) : Please check your regex.
5323 : failed : error init : 0.122646564 (s) : ^
5324 : failed : failed : 3.463482531 (s) : -
5325 : failed : error init : 0.124016355 (s) : ^
5326 : unparsable : unparsable : 0.087654896 (s) : [
5327 failed : unparsable : 0 (s) : Please check your regex.
5328 failed : unparsable : 0 (s) : Please check your regex.
5329 : failed : failed : 2.322070227 (s) : /
5330 failed : unparsable : 0 (s) : Please check your regex.
5331 : failed : failed : 0.211557639 (s) : ^SEP([a-z]+) (\\S+)$ The final answer 
5332 : unparsable : unparsable : 0.105711288 (s) : ^(?=.*\\S)(?=.*\\SEP)(?=.*\\S)(?=.*\\S\\S\\S)(?=.*\\
5333 : failed : failed : 251.181688365 (s) : ^(?=^|SEP)([a-z]+)([a-z]+$)Explanati
5334 failed : unparsable : 0 (s) : Please check your regex.
5335 : failed : error init : 0.117087729 (s) : ^
5336 : failed : failed : 0.116279719 (s) : ^[^SEP0-9][^SEP0-9]{9}$
5337 : failed : failed : 2.054921495 (s) : \\w+
5338 : failed : failed : 2.937849456 (s) : /^
5339 : failed : failed : 1.04771004 (s) : \"^[a-z]+\\d\\+\\d[a-z]+$\"
5340 : failed : failed : 0.153002994 (s) : ^[^SEP]+$
5341 : unparsable : unparsable : 0.085240502 (s) : (^|\\s)(1[0-9]|2[0-3]
5342 : unparsable : unparsable : 0.104132105 (s) : ([0-9]{2
5343 : unparsable : unparsable : 0.078557847 (s) : /^([0-9]|1[0-2
5344 : unparsable : unparsable : 0.08719172 (s) : (0,[0-9]{3
5345 : unparsable : unparsable : 0.097944726 (s) : ^\\d{
5346 : unparsable : unparsable : 0.086717493 (s) : (0|1[0-9]|2[0-3
5347 : unparsable : unparsable : 0.09065184 (s) : /^[0-9]{1,
5348 : unparsable : unparsable : 0.078256955 (s) : [0-9]{1,
5349 : unparsable : unparsable : 0.085901398 (s) : (
5350 : unparsable : unparsable : 0.060122336 (s) : /^[\
5351 : failed : failed : 14.662517863 (s) : [^.com/.net/][^.co.uk/][^.org/]\"\"\"import re
5352 : failed : failed : 1.74560074 (s) : \\b
5353 : failed : failed : 3.419067334 (s) : \\.com|\\.net|\\.biz$
5354 : failed : pumping failed : 21.802577838 (s) : (?!^)(?!.*\\.co\\.uk$)(?!.*\\.net$)(?!.*\\.biz$)(?!.*$).*
5355 : failed : pumping failed : 191.433252838 (s) : (.*?)\\/
5356 : failed : failed : 1.526510517 (s) : /
5357 : failed : failed : 2.075116486 (s) : r\"(?i)
5358 : failed : failed : 15.763146159 (s) : \\.([^.]+)\\.([a-z]+)
5359 : failed : error init : 0.10071159 (s) : ^
5360 : failed : failed : 7.748300448 (s) : \".com|.net|.org|.org\"
5361 : failed : failed : 1.154395919 (s) : \\b([1-9][0-9]{0,2})\\.(\\d{3}(,\\d{3})*)$
5362 : unparsable : unparsable : 0.04627763 (s) : [1-9][0-9]{0,9},? (1 or more digits, followed by 0 to 9 digits (0 or more times), and an
5363 : failed : failed : 0.177242677 (s) : ^[12,123]\\d{3}
5364 : failed : failed : 0.313102486 (s) : r'^\\d{3}[\\d.]{2,}$'
5365 : failed : failed : 1.081803357 (s) : \\d{1,3}\\.\\d{3}
5366 : failed : failed : 5.922396878 (s) : \\d{1,3}
5367 : failed : failed : 0.134755765 (s) : ^\\d
5368 : unparsable : unparsable : 0.094973791 (s) : (.*?)(,|\\.?\\d{1,3}
5369 : failed : failed : 0.252795405 (s) : ^([1-9][0-9]{0,2})[,.]([1-9][0-9]{3,})$
5370 : failed : failed : 0.795116302 (s) : \\d{2}\\.\\d{4}\"\"\"
5371 : unparsable : unparsable : 0.12548995 (s) : (^
5372 : failed : failed : 0.439081611 (s) : \"\\\\
5373 : failed : failed : 3.099439627 (s) : \\d
5374 : unparsable : unparsable : 0.089028555 (s) : \"\\(\\
5375 failed : unparsable : 0 (s) : Please check your regex.
5376 : failed : failed : 1.58961049 (s) : \\d
5377 : unparsable : unparsable : 0.078602921 (s) : (
5378 : unparsable : unparsable : 0.075896871 (s) : [123
5379 : failed : failed : 1.881218938 (s) : \\d
5380 failed : unparsable : 0 (s) : Please check your regex.
5381 : failed : failed : 0.454684515 (s) : ( \\+[0-9]{4} \\s* \\[.*] \\s*-\\s* \\+[0-9]{4} \\s* \\-\\s* \\[.*] \\s*)-?
5382 : failed : pumping failed : 61.379777004 (s) : \\+\\d+[-\\s]?\\d+
5383 : failed : pumping failed : 138.858949405 (s) : [^-+\\w]+Explanati
5384 : failed : failed : 1.001065634 (s) : (5)-(0)-(8)-(0)-(1)-(0)-(0)
5385 : failed : failed : 47.14778267 (s) : [a-zA-Z0-9-]{4}\\s[a-zA-Z0-9-]{2}\\s[a-zA-Z0-9-]{3}
5386 : failed : failed : 1.125706697 (s) : (\\d{1,3})-(\\d{1,3})-(\\d{1,4})
5387 : failed : failed : 0.860719707 (s) : (\\+\\d{1,}\\s*-\\s*\\d{1,}\\s*-\\s*\\d{1,})
5388 failed : unparsable : 0 (s) : Please check your regex.
5389 : failed : failed : 0.754254649 (s) : \\b([0-9]{8}\\s|[0-9]{5}\\s)\\b
5390 failed : unparsable : 0 (s) : Please check your regex.
5391 : failed : failed : 0.709686475 (s) : \\d{4}[0-9]{2}[A-Z][A-Z]
5392 : failed : pumping failed : 262.967777787 (s) : .+\\d+(-\\d{3}\\d{3})$
5393 : failed : failed : 7.406946516 (s) : (?<!Z )[1-9]\\d{3}[- \\s.]?[1-9]\\d{4}
5394 : failed : failed : 3.216178774 (s) : ^(.*?)$'''
5395 : failed : failed : 0.67141689 (s) : \\d{4}[A-Z]{2}[0-9]\\s+\\w{3}\\s+
5396 : failed : failed : 0.129572153 (s) : ^[0-9A-Z]([0-9A-Z]|[0-9][0-9A-Z])[0-9]{2}$
5397 : failed : failed : 0.138677788 (s) : ^[A-Z]{2}[1-9]\\d{1,2}$
5398 : failed : failed : 0.869874234 (s) : \\d{3}-\\d{2}-\\d{2}Descripti
5399 : failed : failed : 0.845408268 (s) : \"^[0-9]{3}[0-9]{2}[0-9]{3}[A-Z]{3}[0-9]{2}$\"The
5400 : failed : failed : 0.158417448 (s) : ^([0-9]{1,3}[- ]*[0-9]{1,2}[- ]*[0-9]{1,3})$
5401 : unparsable : unparsable : 0.062858753 (s) : - (?<!\\s)([^\\>]*?)- (?<![0-
5402 : failed : failed : 0.146515003 (s) : ^[a-zA-Z0-9]\\w*$
5403 : failed : failed : 0.984215749 (s) : (\\w+)
5404 : failed : failed : 2.62570424 (s) : [A-z0-9-_.]+
5405 : failed : failed : 3.240180031 (s) : ^[\\s\\S]*<[^>]*>$
5406 : unparsable : unparsable : 0.076839604 (s) : ^\\s*[a-zA-Z0-9 _
5407 : failed : failed : 1.698629513 (s) : (?<=[<>^])[\\s]+
5408 : failed : failed : 39.599704367 (s) : \".*a\".
5409 : failed : pumping failed : 239.825673925 (s) : [^<>]+\"\"\"
5410 : failed : failed : 4.639568536 (s) : ^[^<><^>]*
5411 : failed : failed : 1.354520431 (s) : [re.compile('(?i)\\b[a-zA-Z]*[\u0622]\\w*\\b', re.IGNORECASE)] # Exercise 5import randomimport string
5412 : unparsable : unparsable : 0.135007767 (s) : [ ]\"([a-zA-Z0-9]*[a-zA-Z0-9 ]*[a-zA-Z0-9 ]*[a-zA-Z0-9 ]*[a-zA-Z0-
5413 : unparsable : unparsable : 0.0749441 (s) : (?i)([a-z][a-z\u00e6-z\u00f8-\u00e6-\u062b-\u06d2-\u06dc-\u06dd-\u06de-\u06df]+[a-z])
5414 : failed : failed : 9.198411443 (s) : [(noun) ([0-9]{3})([a-z])]\"\"\"
5415 : failed : failed : 2.112332432 (s) : r'(?i)(?<![\\u0600-\\u06FF])
5416 : unparsable : unparsable : 0.101307855 (s) : re.compile(\"[\u0101\u0113\u012b\u014d\u016b\u02b1\u02b2\u02b3\u1e5b\u1e5f\u1e63\u1e64\u1e65\u1e66\u1e67\u1e68\u0283\u02b9\u02ba\u02bb\uace9\uacfc\uac19\uac40\uac41\uac42\ufffd
5417 : failed : failed : 0.668729645 (s) : [H][a-z][a-z][0-9]
5418 : failed : failed : 5.159811182 (s) : [aeiou]{2,}[^\\saeiou]*|[^\\saeiou]{3,}
5419 : failed : failed : 0.270060757 (s) : \\u0600\\u0641\\u0642\\u0646\\u0647\\u0645\\u064k\\u065b\\u06f5\\u06c2\\u066e
5420 : failed : failed : 0.309945724 (s) : pattern = re.compile(\"(?i)^[A-Za-z0-9 ]+$\")```
5421 : unparsable : unparsable : 0.071600288 (s) : ^(?=.{8,25}$)(
5422 : unparsable : unparsable : 0.078239452 (s) : ^(?=.*[a-z])(?
5423 : unparsable : unparsable : 0.057833436 (s) : ^((?=.*[a-z])(
5424 : unparsable : unparsable : 0.063313102 (s) : ^[^a-zA-Z0-9
5425 : unparsable : unparsable : 0.080080033 (s) : ^(?=.*\\d)(?=
5426 : unparsable : unparsable : 0.081939991 (s) : ^(?=.*[a-z])(?
5427 : unparsable : unparsable : 0.059740373 (s) : ^(?=.*\\d)(?=.*[
5428 : unparsable : unparsable : 0.062173431 (s) : /^(?=.*\\d)(?=
5429 : unparsable : unparsable : 0.116548001 (s) : ^(?=.*[a-z])(
5430 : unparsable : unparsable : 0.080588544 (s) : ^(?=.*[a-z])(?
5431 : failed : failed : 1.042727163 (s) : [SH][0-9]{3,10}
5432 : failed : failed : 2.415542881 (s) : [^A-Za-z0-9\\s]+
5433 : unparsable : unparsable : 0.07564491 (s) : (?<num_of_words> \\d+) (?<num_of_letters>\\S+) (?<num_of_vowels>\\S+)
5434 : failed : failed : 2.89325794 (s) : \"^SH[a-z]+(?=NP[a-z]+)$\"
5435 : failed : failed : 0.139840522 (s) : [SH, OF, 1-2 digits]
5436 : failed : failed : 0.270681878 (s) : \"SH[A-Z][a-z]*[0-9]+D$\"3. Write a Python script that uses Regular Expressions to extract the following information from a text fi
5437 : failed : failed : 2.883697794 (s) : [^a-zA-Z0-9]
5438 : failed : failed : 10.933569177 (s) : [^A-Za-z0-9][A-Za-z0-9]{2,}[^A-Za-z0-9]
5439 : failed : failed : 0.725157133 (s) : \"^SH+$\"
5440 : unparsable : unparsable : 0.083500909 (s) : ^SH(?P<stem>[a-z])[0-9]*$
5441 : failed : failed : 0.611037302 (s) : \\d{4}-\\d{2}-\\d{2}
5442 : failed : failed : 0.4534413 (s) : \\b\\d{4}-\\d{2}-\\d{2}\\
5443 : unparsable : unparsable : 0.088011323 (s) : ^(?!.*[\\/.])(?=.*\\d{4}$
5444 : unparsable : unparsable : 0.08539433 (s) : [0-9][0-9][0-9][0-9][0
5445 : failed : failed : 0.416935933 (s) : /^\\d{3}-\\d{2}-\\d{4}
5446 : unparsable : unparsable : 0.087123693 (s) : #(?<month>[01]?[0-2]?[0-
5447 : unparsable : unparsable : 0.086406081 (s) : (\\d{4}-\\d{2}-\\d{2}
5448 : unparsable : unparsable : 0.092270156 (s) : (?=\\d{4}-\\d{2}-\\d{2
5449 : unparsable : unparsable : 0.083130897 (s) : ^[0-1]\\d{4}[-0-9]{3
5450 : failed : failed : 0.677514661 (s) : [\\d]{4}
5451 : failed : failed : 0.933447813 (s) : ^[0-9a-fA-F]{6}$
5452 : failed : failed : 0.513840044 (s) : (example)
5453 : failed : failed : 0.683037668 (s) : #[0-9A-Fa-f]{3}
5454 : failed : failed : 0.148748158 (s) : ^[0-9A-Fa-f]{3}[-\\s\\.]?[0-9A-Fa-f]{3}
5455 : failed : failed : 0.162825761 (s) : ^(?=[^#]|^[a-fA-F0-9]{6}$)#(?<!#)(?!#)[a-fA-F0-9]{3}$
5456 : failed : error init : 0.103598408 (s) : ^
5457 : failed : failed : 12.056465008 (s) : (\\w|\\d|\\s)+
5458 : failed : failed : 0.161686971 (s) : ^[A-Fa-f0-9]{2}[A-Fa-f0-9]{3}[A-Fa-f0-9]{5}$
5459 failed : unparsable : 0 (s) : Please check your regex.
5460 : failed : failed : 0.250457954 (s) : \"^#[A-Fa-f0-9]{3}$\"Generate a RegEx for this description. Answ
5461 : failed : failed : 2.415106376 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6}$
5462 : failed : failed : 2.007813022 (s) : ^(?=.*[a-z])(?=.*\\d)[a-z\\d]{6}$
5463 : failed : failed : 6.522863616 (s) : ^[a-zA-Z0-9]{6,}$
5464 : failed : failed : 5.30308826 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6}$
5465 : failed : failed : 0.674644715 (s) : \"^([a-z]|[A-Z])([a-z0-9])+$\"
5466 : failed : failed : 3.722982982 (s) : ^(?=.*\\d)(?=.*[a-z]).*$
5467 : failed : failed : 1.923378026 (s) : ^(?=.*[a-z])(?=.*[A-Z]).*\\d+$
5468 : failed : failed : 0.142409587 (s) : [^A-Za-z0-9_]
5469 : failed : failed : 2.927567993 (s) : ^(?=.*[a-z])(?=.*[A-Z]).{8,}$
5470 : failed : failed : 14.525358755 (s) : [a-z][A-Z]*[0-9]
5471 : unparsable : unparsable : 0.129625452 (s) : (?<start_hour>\\d{1,2}\\s?)(?<start_minute>\\d{1,2
5472 : unparsable : unparsable : 0.079899155 (s) : \"0([0-9][0-9]|1[0-2
5473 failed : unparsable : 0 (s) : Please check your regex.
5474 failed : unparsable : 0 (s) : Please check your regex.
5475 : unparsable : unparsable : 0.059197658 (s) : Time between \
5476 : unparsable : unparsable : 0.059909529 (s) : (^(1[0-9]|2[0-3
5477 : failed : failed : 0.222995235 (s) : After hour 12, minutes 0-59, and seconds 0-59 AM/PM
5478 : unparsable : unparsable : 0.08057066 (s) : ^(0[1-9][0-9]|1[0-2]
5479 : unparsable : unparsable : 0.122262355 (s) : ^(([1-3][0-2]|3)[0-9]|0[0-9]|[1-9
5480 : unparsable : unparsable : 0.090374511 (s) : \"(0[1-9]|1[012])[0-5]\u2003[0-
5481 : failed : failed : 1.988502896 (s) : [0-9]\\.?[0-9]
5482 : failed : failed : 0.838357934 (s) : [$]\\d+\\.\\d{1,2} Explanati
5483 : failed : failed : 0.254966534 (s) : ^\\\\d+(\\\\.\\\\d+)+$
5484 : failed : failed : 0.160069596 (s) : ^[1-9][0-9]?[0-9]?[0-9]
5485 : failed : failed : 0.633574733 (s) : ^\\d+\\.?$
5486 : failed : failed : 1.568143482 (s) : \\b[1-9]\\d{0,6}\\.\\d{3}\\b
5487 : failed : pumping failed : 3.096644801 (s) : .*[0-9]*.\\d+
5488 : failed : failed : 0.804515667 (s) : (\\d)(\\.){2,}
5489 : failed : failed : 0.680725865 (s) : \\d\\.\\d?
5490 : failed : failed : 0.187340587 (s) : ^^(-?\\d{1,2}\\.\\d{1,2}|100\\d$)
5491 : failed : failed : 0.144116888 (s) : \"^\\s*\\d{1,2}\\s+[a-z]{3,4}\\s+\\d{4,5} [a-z]{3,4}$\"
5492 : failed : failed : 0.236853336 (s) : r'^\\d{1,2}([a-z][a-z ]{2},?)\\s\\d{4}$'
5493 : unparsable : unparsable : 0.088872944 (s) : (?P<day>\\d{3})(?P<month>\\w\\s\\w\\s\\w)(?P<year>\\d{4})
5494 : unparsable : unparsable : 0.086448461 (s) : ^([0-9]{1,2}|[1-2][0-9]|3[1-2])? - day (optional)            (([0-9]|1[0-
5495 : failed : failed : 0.650308742 (s) : \\d{1,2}
5496 : failed : failed : 0.202578359 (s) : ^\\d{1,2}[ ]?[a-zA-Z ]{1,3}\\s[ ]?\\d{4}$\"\"\"
5497 : failed : failed : 5.922639692 (s) : \\d{2} 
5498 : failed : failed : 0.499856297 (s) : r\"^[0-9]{2}[ -][0-9]{2}[ -][0-9]{4}$\"
5499 : unparsable : unparsable : 0.067973707 (s) : [a-z]{2}\\d{2}[a-z]\\d{4}|\\d{1,2}\\d{1,2}\\d{2}|\\d{4}[
5500 : failed : failed : 0.235674462 (s) : (?i)^([0-9]{4}[ -]{1}[0-9]{2})$
5501 : failed : failed : 27.992124501 (s) : (^|[^\\d\\.])\\\\d+
5502 : failed : failed : 0.869736667 (s) : \\d+\\.?\\d*
5503 : failed : failed : 0.743975369 (s) : ^0(\\.0+)?(e[+-]?\\d+)$
5504 : unparsable : unparsable : 0.076169451 (s) : ^[+-]?(([0-9]+[.])?[0-9]*(E
5505 : failed : failed : 0.335067927 (s) : (int|float)\\.\\+\\d\\.\\.\\+
5506 : failed : failed : 0.17283756 (s) : ^[-+]?
5507 : unparsable : unparsable : 0.08515932 (s) : -?\\+?([0-9]+(\\.[0-9]+)?|\\.?[0
5508 : unparsable : unparsable : 0.059629524 (s) : [0-9]|[1-9][0-9]*e[+-
5509 : unparsable : unparsable : 0.067502485 (s) : ^[0-9]*\\.[0-9]*(e[+-]
5510 : failed : failed : 1.407265042 (s) : \\b[-+]? \\d*
5511 : failed : failed : 0.180956521 (s) : Matches all kind of UR
5512 : failed : failed : 0.150470117 (s) : Matches all kind of UR
5513 : failed : failed : 0.125986639 (s) : Matches all kind of UR
5514 : failed : failed : 0.17587005 (s) : Matches all kind of UR
5515 : failed : failed : 0.124749426 (s) : Matches all kind of UR
5516 : failed : failed : 0.161721555 (s) : Matches all kind of UR
5517 : failed : failed : 0.175444414 (s) : Matches all kind of UR
5518 : failed : failed : 0.168843041 (s) : Matches all kind of UR
5519 : failed : failed : 0.225722844 (s) : Matches all kind of UR
5520 : failed : failed : 0.202740453 (s) : Matches all kind of UR
5521 : unparsable : unparsable : 0.086467676 (s) : [0
5522 : failed : failed : 5.458703097 (s) : (.*)
5523 : failed : failed : 0.253030294 (s) : \"^\\
5524 : unparsable : unparsable : 0.100511856 (s) : [^\\
5525 : failed : failed : 0.125387669 (s) : \"%Y-
5526 : unparsable : unparsable : 0.096407122 (s) : \"^(
5527 : unparsable : unparsable : 0.074748504 (s) : \"^(
5528 failed : unparsable : 0 (s) : Please check your regex.
5529 : unparsable : unparsable : 0.077767549 (s) : (.{3
5530 : failed : failed : 1.276727564 (s) : (1)
5531 : unparsable : unparsable : 0.06529052 (s) : ^[a-f0-9]{4}\\.([a-f0-9]{4}\\.){3}\\[a
5532 : failed : failed : 0.964226633 (s) : \\b(?![a-zA-Z0-9\\.])\\w{7}\\.
5533 : failed : failed : 0.715467395 (s) : /^[0-9a-zA-Z]+(\\.[0-9a-zA-Z]+){3}
5534 : unparsable : unparsable : 0.089436127 (s) : ([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\
5535 : unparsable : unparsable : 0.083400992 (s) : ^.*\\b(?=.{1,64}\\b)\\w\\d{2}\\.(\\w\\d{1,
5536 : unparsable : unparsable : 0.06185729 (s) : .(?=.{8})(?=.{12})(?=.{16})(?=.{20})(
5537 : unparsable : unparsable : 0.063551127 (s) : ([a-zA-Z]{1,3}[.][0-9]{1,2}[.][0-
5538 : failed : error init : 0.15274465 (s) : ((?<=\\d)\\.\\d+\\.\\d+\\.\\d+)|
5539 : failed : failed : 0.150352899 (s) : This RegEx should be generat
5540 : unparsable : unparsable : 0.079328458 (s) : [0-9a-f]{4}[0-9a-f]{4}[0-9a-
5541 : failed : failed : 0.169910929 (s) : r'\\bsearch\\b'
5542 failed : unparsable : 0 (s) : Please check your regex.
5543 : failed : pumping failed : 157.476685662 (s) : (search|[^\\s]*search)
5544 : failed : failed : 5.583919015 (s) : search(.*)
5545 : failed : failed : 0.127238249 (s) : search[^a-z]
5546 : failed : failed : 0.511405161 (s) : search*_
5547 : failed : failed : 0.435448468 (s) : /\\b
5548 : failed : failed : 0.582796318 (s) : ^[a-z][a-z0-9*]{0,100}$
5549 : failed : failed : 0.184775151 (s) : search^(?=[A-Za-z0-9_]*$).{5,30}$
5550 failed : unparsable : 0 (s) : Please check your regex.
5551 : failed : failed : 0.656715982 (s) : ^[0-9]{10}|[0-9]{10}.{0,2}$
5552 : failed : failed : 9.671941496 (s) : ^[^.\\d]*\\.[^.\\d]{1,2}$
5553 : failed : failed : 0.213015495 (s) : ^(\\d{10})\\.(\\d{0,2})$
5554 : failed : failed : 0.183220995 (s) : ^\\d{1,9}(\\.\\d{0,2})$
5555 : failed : failed : 0.633484895 (s) : \\d{10}[.]\\d
5556 : failed : failed : 0.233889064 (s) : ^\\d{1,10}(\\.\\d{1,2})?$
5557 : failed : failed : 1.581556631 (s) : (?<![^.\\d])([0-9]{2})(?!\\.)[0-9.]{10}
5558 : failed : failed : 112.806267758 (s) : [0-9]{10}[\\.][0-9]{1,2}
5559 : failed : failed : 0.423667601 (s) : /^\\d{10}\\.
5560 : failed : failed : 0.122611027 (s) : ^.[0-9]{1,10}$
5561 : failed : failed : 0.448877417 (s) : \"^\\d+(\\.\\d+)?$\"
5562 : failed : failed : 0.249311271 (s) : [^0-9a.][0-9]+.[0-9]*This RegEx will match numbers that are not preceded or followed by any of the lowercase letters, the period, or the exclamation point.
5563 : failed : failed : 4.431328752 (s) : \\d+\\.\\d{2}
5564 : failed : failed : 0.673877781 (s) : [^a-zA-Z0-9] and the decimal part is [0-9.] and can have values after a decimal point'''
5565 : failed : failed : 17.858072635 (s) : \\d{0,}\\.?\\d{1,5}
5566 : failed : failed : 0.361709571 (s) : ^\\d+(\\.\\d+)?$
5567 : failed : pumping failed : 144.477072345 (s) : [0-9]+\\.[0-9]*
5568 : failed : failed : 1.585415005 (s) : [0-9]\\\\d*[\\\\.\\\\d]* Exercise
5569 : failed : failed : 11.020877395 (s) : ([0-9]\\d\\.){0,1}[0-9]
5570 : failed : failed : 0.346860918 (s) : ^[0-9a-zA-Z]+$
5571 : failed : failed : 0.109723751 (s) : Valid         Reg
5572 : failed : failed : 0.214049448 (s) : import revalid_email = lambda ema
5573 : failed : pumping failed : 123.699976264 (s) : (([A-Za-z0-9\\._]+)\\.Test)
5574 : failed : pumping failed : 58.328720444 (s) : [A-Za-z0-9._%+-]+(?=\\.[A-Za-z0-9.-]+)
5575 : failed : failed : 0.278109607 (s) : [A-Za-z]+[A-Za-z0-9]*
5576 : failed : failed : 0.184468107 (s) : ^[A-Za-z0-9]$
5577 : failed : failed : 6.869191257 (s) : (?<![@#$])[a-z0-9]+[a-z0-9._]+(?![@#$])
5578 : unparsable : unparsable : 0.084235673 (s) : `^[A-Za-z0-9_\\\\-.]+$`3. Write a Regular Expression for validating the followi
5579 : failed : pumping failed : 190.286200929 (s) : [a-zA-Z0-9_.]*\\.[a-zA-Z0-9]
5580 : failed : failed : 0.94875298 (s) : ^[a-zA-Z0-9_\\-\\.]+$
5581 : failed : failed : 0.133853849 (s) : .
5582 failed : unparsable : 0 (s) : Please check your regex.
5583 failed : unparsable : 0 (s) : Please check your regex.
5584 : failed : failed : 1.755841478 (s) : /
5585 : failed : failed : 2.161356386 (s) : \"\\
5586 : unparsable : unparsable : 0.05826318 (s) : [
5587 : failed : failed : 0.140983671 (s) : http
5588 failed : unparsable : 0 (s) : Please check your regex.
5589 : failed : failed : 0.108619215 (s) : This
5590 failed : unparsable : 0 (s) : Please check your regex.
5591 : failed : failed : 0.173936856 (s) : Content-Ty
5592 : failed : failed : 0.130743092 (s) : Content-Ty
5593 : failed : failed : 0.158871146 (s) : \"Content-Ty
5594 : failed : failed : 1.508723088 (s) : [ \\w\\W]+
5595 : failed : failed : 0.244033462 (s) : /^[\\w\\s]+$/ Exercise
5596 : unparsable : unparsable : 0.112250685 (s) : \\[([^\\]]+)\\]
5597 : failed : error init : 0.142700991 (s) : ^
5598 : failed : failed : 0.149107881 (s) : \"\"\"Content-Ty
5599 : unparsable : unparsable : 0.064303124 (s) : (Content-Ty
5600 : failed : pumping failed : 138.972257718 (s) : \"Content (\\s*)([^,]+)=([^,]+)$\"
5601 : failed : failed : 0.152545809 (s) : ^[0-9]{1,2}$
5602 : failed : failed : 102.855990393 (s) : [\\d]{3}\\d{2}\\d{2}|[\\d]{3}\\d{3}|[\\d]{3}\\d{4}
5603 : failed : failed : 0.254461439 (s) : ^([0-9]{1,7}|99)[0-9]{3}$ or ^([0-9]{1,7}|99)\\d{3}$
5604 : failed : failed : 0.221701766 (s) : ^[0-9]{4}(0[1-9][0-9]|1[012])[0-9]{4}$
5605 : failed : failed : 1.723864367 (s) : 01([0-5][0-9]|6?[0-9])
5606 : unparsable : unparsable : 0.064999495 (s) : [0229-0331]
5607 : failed : failed : 0.183177103 (s) : ^[0-9]{4}[0-9]{2}[0-9]{2}$
5608 : failed : failed : 0.679423971 (s) : \\b0229|0331|0630\\b
5609 : failed : failed : 0.142168235 (s) : ^(\\d{4})(-?)(\\d{2})(\\d{2})$
5610 : failed : failed : 0.495739289 (s) : \"^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$\"
5611 : failed : failed : 0.591986622 (s) : ^\\/\\*.*?\\*
5612 : failed : failed : 1.365235727 (s) : ((^|( |\\/))/[^\\n\\r\\t\\f]*\\n(|\\s+|-))*
5613 : success : init : 2.631240491 (s) : \\s*([^/]+)*
5614 : failed : failed : 1.588610591 (s) : /
5615 : failed : failed : 32.157024085 (s) : ^\\/\\* [^/\\*]*    # Non-matching characters (zero or more)
5616 : failed : pumping failed : 182.239022913 (s) : ^/\*|\*/|//.*$
5617 : failed : failed : 1.182475944 (s) : /^(/[^/]*)?(/[^/\\r\\n]*)?
5618 : failed : failed : 24.197487259 (s) : \\*\\s*(.+?)\\*
5619 : failed : failed : 3.206542336 (s) : /\\s*//|\\s*/*|/\\*\\*/Replace all comments in the given input string with the generated RegEx.\"\"\"
5620 : failed : failed : 1.024349009 (s) : /^((#.*?)|(/*.*?\\*/))$/ Explanati
5621 : failed : failed : 0.927850076 (s) : (with comments)import re
5622 : unparsable : unparsable : 0.076194077 (s) : ^BFPO ([0-9]+)\\/([0-9]+)\\/([0-9]+\\/([0-9]+)\\/([0-9]+)\\/([0-9]+)$Gener
5623 : failed : failed : 1.927422128 (s) : [A-Za-z][A-Za-z0-9]*(\\s?[A-Za-z][A-Za-z0-9]*)*
5624 : failed : error init : 0.131332855 (s) : (?<!\\d)
5625 : unparsable : unparsable : 0.061807186 (s) : (?i)(\\\\w+
5626 : failed : failed : 13.960672259 (s) : ([A-Z][a-z]+) ([^,]) ([A-Z][a-z]+)
5627 : failed : failed : 2.599116316 (s) : ^(BFPO \\d+|C/O \\d+)\\s+([A-Z0-9]{1}[^A-Z]*),.*$
5628 : failed : failed : 3.568492067 (s) : [any lowercase character, a digit, any punctuation character, or any whitespace character]
5629 : failed : failed : 3.23448849 (s) : ^(?=.*BFPO)\\d*$
5630 : failed : failed : 0.13364625 (s) : /^
5631 : failed : failed : 0.627056875 (s) : \\\\w{7}\\\\W[a-zA-Z0-9_]
5632 : unparsable : unparsable : 0.076835937 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%]).{7,
5633 : unparsable : unparsable : 0.0736396 (s) : ^(?=.{8,})[a-zA-Z0-9!@#$%^&*()-_=+{}|\\\\\\/\\.\\
5634 : unparsable : unparsable : 0.083446448 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.{7,})(?!.*(.).
5635 : failed : failed : 3.236186133 (s) : [^a-zA-Z0-9]
5636 : failed : pumping failed : 5.345730432 (s) : (.*[^\\w])(.*\\w)(.*[^\\w])Generate some match examples. Answ
5637 : unparsable : unparsable : 0.0833195 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.{7,})(?!.*[a
5638 : unparsable : unparsable : 0.05920994 (s) : ^(?=.*[a-z])(?=.*\\d)(?=.*[A-Z])[a-z\\dA-Z]{7,
5639 : unparsable : unparsable : 0.076893716 (s) : ^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*\\-
5640 : unparsable : unparsable : 0.091844309 (s) : ^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d]{7,
5641 : unparsable : unparsable : 0.086190078 (s) : ^(0[1-9]|1[012
5642 : unparsable : unparsable : 0.074373794 (s) : \\d{1,
5643 : unparsable : unparsable : 0.07564472 (s) : r\"(\\d{1,2
5644 : unparsable : unparsable : 0.057309266 (s) : \\d{
5645 : unparsable : unparsable : 0.072445888 (s) : \"0(1[012])[0-9]|2[0-3]|[0-9]?[0-
5646 : unparsable : unparsable : 0.060014144 (s) : ^\\d{
5647 : unparsable : unparsable : 0.071525427 (s) : ^\\d{1,
5648 : unparsable : unparsable : 0.068982523 (s) : \"^\\d{
5649 : unparsable : unparsable : 0.069191503 (s) : /^\\d{
5650 : unparsable : unparsable : 0.076728907 (s) : /^\\d{
5651 : failed : failed : 2.208196507 (s) : \\d{1,2}(,\\d{1,2})+
5652 : failed : failed : 4.532185372 (s) : (?<!\\d)(\\d{1,2})(\\.\\d{0,3})?
5653 : failed : failed : 3.399471323 (s) : (?<=^|[\\,\\.])  (?<!d{1,2})  ^
5654 : failed : failed : 0.190621302 (s) : ^\\d{1,3}([,.]\\d{1,3})?$
5655 : failed : failed : 6.004543315 (s) : \\d+,\\+\\d*\\.\\d{1,2}(,\\d{1,3})*
5656 : failed : failed : 0.625311673 (s) : \\d{1,2}([.\\d]{0,3}){0,1}
5657 : unparsable : unparsable : 0.081978072 (s) : ^(?<!
5658 : unparsable : unparsable : 0.077149223 (s) : (\\d{1,2})([.,]\\d{0,5})(\\d{1,2})(
5659 : failed : failed : 0.23791917 (s) : ^\\d{1,3}(,\\d{1,3})?$In the above example, the comma is
5660 : unparsable : unparsable : 0.058778554 (s) : [0-9]{1,2}(,[0-9]{1,2})? (\\.[0-9
5661 : unparsable : unparsable : 0.066991169 (s) : +
5662 failed : unparsable : 0 (s) : Please check your regex.
5663 : unparsable : unparsable : 0.072673985 (s) : (
5664 : unparsable : unparsable : 0.060767482 (s) : [+
5665 : failed : error init : 0.078180632 (s) : ^
5666 : failed : error init : 0.090425326 (s) : ^
5667 : unparsable : unparsable : 0.073091085 (s) : [+
5668 : unparsable : unparsable : 0.062857781 (s) : (
5669 failed : unparsable : 0 (s) : Please check your regex.
5670 failed : unparsable : 0 (s) : Please check your regex.
5671 : unparsable : unparsable : 0.065805523 (s) : +[1-9][0-9][0-9]|[1-9]0[0-9][0-9]
5672 : failed : failed : 0.690068925 (s) : [\\+][1-9][0-9]{3}\\x00[1-9]{2}\\x00[0-9]{4}
5673 : unparsable : unparsable : 0.067106665 (s) : +\\d?\\d{4}$
5674 : failed : failed : 2.924729504 (s) : [+3](\\\\+1\\\\d{4})?(x|\\\\d{4}).
5675 : failed : error init : 0.118076398 (s) : ^
5676 : failed : error init : 0.11362224 (s) : ^
5677 : failed : failed : 12.421656239 (s) : ^\\+\\d{1,3}\\d{3}\\-\\d{4}$
5678 : unparsable : unparsable : 0.054571948 (s) : \\+[1-9]\\d{9}|\\d{1,2}-\\d{4}|\\d{1,2}-\\d{1,2}-\\d{
5679 : unparsable : unparsable : 0.059850949 (s) : ^([+1][\\d]{4})?[ -]?([1][\\d]{3})?(\\+[1][\\d]{3})?[ -]?([1][\\
5680 : failed : failed : 0.851291898 (s) : ^\\+\\d{1,3}[a-zA-Z]{0,2}\\d{4}$
5681 : unparsable : unparsable : 0.06324769 (s) : (at least 6 digit
5682 : unparsable : unparsable : 0.109208537 (s) : ^(0?[1-9]|1[0-2]
5683 : failed : failed : 4.879341883 (s) : [0-9]00-[0-9]
5684 : unparsable : unparsable : 0.094821927 (s) : (^0\\d{1,
5685 : failed : failed : 2.125133888 (s) : [0-9] [0-9] 
5686 : failed : failed : 0.535880986 (s) : hh\\
5687 : unparsable : unparsable : 0.06865491 (s) : ([0-9]|1[0-
5688 : unparsable : unparsable : 0.070549603 (s) : /\\d{1,
5689 failed : unparsable : 0 (s) : Please check your regex.
5690 : unparsable : unparsable : 0.096047268 (s) : ^(?=0?[1-9]|1[0-2])(?=0?[1-9][0-9
5691 : unparsable : unparsable : 0.066434108 (s) : [\\(]([a-z0-9 ]+)\\)([\\s])
5692 : failed : failed : 3.064922787 (s) : (test [0-9]+)
5693 : failed : pumping failed : 108.159289467 (s) : ([A-Z0-9\\+\\-\\_\\.]*( )[A-Z0-9]+)
5694 : unparsable : unparsable : 0.078608311 (s) : r\".*?(?<=\\()[A-Za-z ]*[A-Za-z0-9 ]+[A-Za-z0-9 ]*\\).*?\"
5695 : failed : failed : 0.972453515 (s) : \"^[ \\t]+$\"
5696 : failed : failed : 1.081723157 (s) : r\"
5697 : failed : failed : 8.96740039 (s) : \"([a-zA-Z]*)\"#include <string>#include <iostream>
5698 failed : unparsable : 0 (s) : Please check your regex.
5699 : failed : failed : 0.18338389 (s) : test(?=(\\s|^))
5700 : failed : failed : 161.563356635 (s) : [a-zA-Z]{2,64}You can find more information about the REGEX Syntax at ht
5701 : failed : failed : 0.289243596 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5702 : failed : failed : 0.764765302 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5703 : failed : failed : 0.781400406 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5704 : failed : failed : 1.224971281 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5705 : failed : failed : 0.894422614 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5706 : failed : failed : 0.61123368 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5707 : failed : failed : 0.251578599 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5708 : failed : failed : 0.760257343 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5709 : failed : failed : 0.286445905 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5710 : failed : failed : 0.24861581 (s) : Matches all valid Linux absolute paths (files or folders). Will not work for relative paths that do not begin with a /, Also will only match files that have extensions consisting of 2, 3, or 4 characters. Fails with _. or - in the path.Match exampl
5711 : failed : failed : 0.178639488 (s) : import re
5712 : unparsable : unparsable : 0.067096797 (s) : ^[0-9]{9}$ or ^[0-9]{4}(\\/[0-9]
5713 : unparsable : unparsable : 0.090176732 (s) : [00/[0-9][0-9][0-9][0-9][0-9], [0-
5714 : failed : failed : 0.603355379 (s) : \\d{6}[0-9]{3}/\\d{4}
5715 : unparsable : unparsable : 0.094833178 (s) : (\\d{3})\\/(\\d{3})\\/(\\d{4}/\\d{4}/\\d
5716 : unparsable : unparsable : 0.077269457 (s) : \"([0-9]{3})([0-9]{3})([0-9]{4}
5717 : unparsable : unparsable : 0.076918382 (s) : ^(?P<PIN_prefix>\\d{3})/(?P<PIN_suffix>\\d{
5718 : failed : failed : 0.145057648 (s) : ^\\d{4}\\/\\d{2}\\/\\d{4}$
5719 failed : unparsable : 0 (s) : Please check your regex.
5720 : unparsable : unparsable : 0.084592791 (s) : ^\\d{4}\\d{3}\\d{3}[-\\/\\\\\\^\\]\\(\\)\\{\\}\\
5721 : failed : failed : 2.423639992 (s) : /
5722 failed : unparsable : 0 (s) : Please check your regex.
5723 : failed : failed : 3.103305605 (s) : \"
5724 : unparsable : unparsable : 0.067371451 (s) : (/
5725 : failed : failed : 1.634143588 (s) : \"
5726 : failed : failed : 0.205328421 (s) : /
5727 : failed : failed : 2.461005428 (s) : /
5728 : unparsable : unparsable : 0.067172178 (s) : (
5729 : failed : failed : 0.130960369 (s) : /
5730 failed : unparsable : 0 (s) : Please check your regex.
5731 : failed : pumping failed : 36.180846555 (s) : [a-zA-Z0-9]+( [a-zA-Z0-9]+)+
5732 : failed : failed : 0.878475746 (s) : \"(?i)([A-Z]\\w*)\\d[A-Z]\\w*\"
5733 : failed : failed : 0.490540148 (s) : ^[A-Z][a-z0-9]{1,32} [A-Z][a-z0-9]{1,32}$
5734 : failed : failed : 0.202444248 (s) : The final answer should be \"\\\\b\\\\w{3,4}\\\\d{4}[A-Z]?\\\\b\"
5735 : failed : failed : 5.18541745 (s) : [^A-Za-z0-9]*
5736 : failed : failed : 21.861044368 (s) : ([a-z])([1-9])([A-Z])
5737 : failed : failed : 0.138643836 (s) : ^[A-Z]
5738 : failed : failed : 3.618867508 (s) : [A-Z][0-9A-Z]+
5739 : failed : pumping failed : 567.958856943 (s) : .*\\b(?=ABC\\d*\\b).*
5740 : failed : failed : 0.149519741 (s) : ^[\\p{L}\\p{N}\\p{M}\\s]+$
5741 : failed : failed : 41.261443642 (s) : [a-z]{1,2}[0-9]{1,2}[0-9]{1,2}
5742 : failed : failed : 16.952278478 (s) : [a-z]?[1-8][a-z0-9]*
5743 : failed : failed : 0.913846783 (s) : [A-H][1-8]
5744 : failed : failed : 0.690951947 (s) : a[1-8]\\d
5745 : failed : failed : 0.181622186 (s) : ^[a-h][1-8][A-H][1-8]$
5746 : failed : failed : 1.0928969 (s) : r\"([A-H])(\\d)([A-H])
5747 : failed : failed : 0.392003204 (s) : (a - h), (1 - 8).\"\"\"
5748 : unparsable : unparsable : 0.054769558 (s) : ^[a-h]?[0-9][a-h]?[0-9][a-h]?[0-9][a-h]?[0-9][a-h]?[0-9][a-
5749 : failed : failed : 5.091982506 (s) : (a-h)([1-8])|([1-9])
5750 : failed : failed : 1.091300143 (s) : [A-H][a-h]|[1-9][0-9]
5751 : failed : failed : 0.181547746 (s) : ^[1-9]\\d{0,2}(,\\d{0,2}){1}$
5752 : failed : failed : 0.166546257 (s) : 1, 2, 3-65535
5753 : failed : failed : 2.920920012 (s) : [0-9]
5754 : failed : failed : 7.279986498 (s) : [^0-9][5|6]$
5755 : failed : failed : 0.137586548 (s) : [^1-65536]
5756 : failed : failed : 0.424774129 (s) : (\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)(\\d)
5757 : failed : failed : 2.483587912 (s) : (1|1 | 1|1)    (80|80 | 80|80 | 80|80)    (65536|65536|65536|65536|65536|65536|65536|65536|65536|65536|65536)
5758 : failed : failed : 25.690480295 (s) : ^[0-9]*$|^[a-zA-Z0-9\\-\\.]+$
5759 : failed : error init : 0.110233334 (s) : ^
5760 : unparsable : unparsable : 0.079757671 (s) : ~(0[1-9]|[1-2][0-9]|3[01])2)Find all the IP addresses that are in the specified range.
5761 : failed : failed : 0.244750132 (s) : \"0,00 \\d,00 \\d,00,00 \\d,00 \\d,\\d\\d \\d,\\d\\d \\d,\\d\\d \\d,\\d
5762 : failed : pumping failed : 2.998859583 (s) : [0-9, -]*?[, ]?[0-9, -]*?[, ]?[0-9, -]+?(\u20ac|EUR)Note that the
5763 : failed : failed : 1.084793939 (s) : \"0+\\\\d{1,3}(,\\\\d{3})* 0+\\\\.00\"
5764 : unparsable : unparsable : 0.066230728 (s) : \"0,000[0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0][0
5765 : failed : failed : 21.521425352 (s) : (0\\.[0-9]*)([Ee][+]\\d+)
5766 : failed : failed : 6.022947697 (s) : ^\\d+,?\\d+(\\.\\d+)$
5767 : failed : failed : 1.062740163 (s) : \\d{1,2}
5768 : failed : failed : 2.129737586 (s) : (\\d+),(\\s*[.-]?\\d+)?
5769 : failed : pumping failed : 156.648249459 (s) : [0-9]*\\,?[0-9]*\\.[0-9]*
5770 : failed : failed : 1.446126846 (s) : ([\u00a3\u20ac$]\\d+\\.\\d[0-9]{2}([eE][+-]\\d+)?)
5771 : unparsable : unparsable : 0.104376452 (s) : [1-12][
5772 : unparsable : unparsable : 0.086732872 (s) : ([0-9]
5773 : failed : failed : 0.142603198 (s) : /^
5774 : failed : failed : 0.634484924 (s) : \\b0*\\d
5775 : failed : failed : 1.090486202 (s) : \\d{2}\\/
5776 : unparsable : unparsable : 0.066142713 (s) : ^(?=
5777 : unparsable : unparsable : 0.066411536 (s) : [0-9][0
5778 : failed : failed : 1.525920343 (s) : /^
5779 failed : unparsable : 0 (s) : Please check your regex.
5780 : unparsable : unparsable : 0.067089884 (s) : (^[0-9
5781 : failed : pumping failed : 2.245321243 (s) : ^[0-9]+(.[0-9]+){3}$
5782 : unparsable : unparsable : 0.06332796 (s) : /^[a-f0-9]{1,
5783 failed : unparsable : 0 (s) : Please check your regex.
5784 failed : unparsable : 0 (s) : Please check your regex.
5785 : failed : failed : 0.822206806 (s) : \"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$
5786 : unparsable : unparsable : 0.057515993 (s) : (?<i>\\d{1,3}\\.){3}\\d{1,3}\\.(?<ip_v4>\\d
5787 failed : unparsable : 0 (s) : Please check your regex.
5788 : unparsable : unparsable : 0.086241253 (s) : .*\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(.*)\\.(
5789 : failed : failed : 0.951506198 (s) : r'^
5790 : unparsable : unparsable : 0.082557867 (s) : ^(1[0-9]|2[0-4][0-9]|25[0-5])\\.(1[0-9]
5791 : failed : failed : 3.11540603 (s) : \\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|255\\.255\\.255\\.0
5792 : failed : failed : 0.462889837 (s) : ^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$
5793 : unparsable : unparsable : 0.058850318 (s) : r'^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|
5794 : failed : failed : 2.006484478 (s) : \\b(0|1|2|3|4|5|6|7|8|9)\\b
5795 : failed : failed : 3.4129312 (s) : [0-9]{3}.[0-9]{3}.[0-9]{3}.[0-9]{3}
5796 : failed : failed : 2.634841675 (s) : \"^(?=.{8}$)
5797 : failed : failed : 3.71440872 (s) : \"(0|1)\\.(0|1)\\.(0|1)\\.0\"
5798 : failed : failed : 1.470480572 (s) : [0-9]{2}.[0-9]{2}.[0-9]{4}
5799 : failed : failed : 0.646070979 (s) : ^((\\d{1,3}\\.){3})(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$
5800 : unparsable : unparsable : 0.097770361 (s) : \"(^|[^127.0.0.0]*)\\.([0-9]{3}\\.[0-9]{3}\\.[0-9]{3}\\.)(1[
5801 : failed : failed : 178.190196824 (s) : [^/\\s]+/
5802 : failed : error init : 0.131444113 (s) : ^
5803 : failed : failed : 0.741518745 (s) : (\\d+\\.\\d+\\.\\d+\\.\\d+)/(\\d+)
5804 : failed : failed : 0.589880453 (s) : \"^[0-9a-f]{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.
5805 : failed : failed : 1.274403329 (s) : \"
5806 : failed : error init : 0.087400882 (s) : ^
5807 : unparsable : unparsable : 0.075225837 (s) : [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0
5808 : failed : failed : 2.391926003 (s) : /^
5809 failed : unparsable : 0 (s) : Please check your regex.
5810 : failed : failed : 0.12826526 (s) : ip_match = \"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\
5811 : unparsable : unparsable : 0.058821865 (s) : \"^[0-9]{4}-([0
5812 : failed : failed : 6.146573281 (s) : [^0-9]|[^0-9\\.]
5813 : unparsable : unparsable : 0.05142276 (s) : (\"\\\\d+?[-/.]\\\\d+[-
5814 : failed : failed : 0.684139358 (s) : \\d{2}[-/. ]\\d{4}
5815 : unparsable : unparsable : 0.068878558 (s) : ([0-9]\\d{2}\\/[0-
5816 : unparsable : unparsable : 0.079165573 (s) : \\d{1,2}[-/.]\\d{
5817 : unparsable : unparsable : 0.093899182 (s) : /[(0-9]{3}-[0-
5818 : unparsable : unparsable : 0.079107775 (s) : \"^(\\d{1,2}\\d{1,2
5819 : failed : failed : 0.837382801 (s) : \\d{4}-?\\d{2}-?
5820 : unparsable : unparsable : 0.071113587 (s) : (?<year>\\d{2})/(?<
5821 failed : unparsable : 0 (s) : Please check your regex.
5822 : failed : error init : 0.110527443 (s) : ^
5823 failed : unparsable : 0 (s) : Please check your regex.
5824 : failed : error init : 0.119036293 (s) : ^
5825 failed : unparsable : 0 (s) : Please check your regex.
5826 : failed : error init : 0.140821426 (s) : ^
5827 : unparsable : unparsable : 0.100580084 (s) : (
5828 failed : unparsable : 0 (s) : Please check your regex.
5829 failed : unparsable : 0 (s) : Please check your regex.
5830 : unparsable : unparsable : 0.070533222 (s) : (
5831 : failed : failed : 1.213927511 (s) : [0-9]\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}.
5832 : failed : failed : 0.138335268 (s) : ^\\-
5833 : failed : failed : 0.77628457 (s) : -?\\d\\d\\d?
5834 failed : unparsable : 0 (s) : Please check your regex.
5835 : failed : failed : 25.010296605 (s) : (?<!^)(?<!^)(?<!^)(?<!^)\\b
5836 : failed : failed : 0.340761523 (s) : [a-zA-Z0-9!#$%&'\u2019*+,-./=?^_`{|}~-]The \"?\" character allows any single character to match, but cannot be combined with anything else.The \"+\" character means 1 or more of the preceding
5837 : failed : failed : 0.737045451 (s) : -^\\d{1,3}$
5838 : unparsable : unparsable : 0.051259494 (s) : ^[-128-127]*$
5839 : failed : failed : 1.45644578 (s) : [0-9a-fA-F]
5840 : failed : failed : 0.728796026 (s) : ([0-9]{10})$
5841 : unparsable : unparsable : 0.058075379 (s) : a-zA-Z0-9_.+-()\
5842 : failed : failed : 14.109429173 (s) : \"0[0-9]+\"
5843 : failed : failed : 0.579717882 (s) : \"^[+-]?\\d+$\"
5844 : failed : failed : 0.306210941 (s) : - [0-9]*      # Any number of digits- -?[0-9]*   # Optional minus sign, followed by any number of digits
5845 : failed : failed : 1.649776057 (s) : ^[0-9]*(-[0-9]+)?$
5846 : unparsable : unparsable : 0.077953116 (s) : +(-\\d+)
5847 : failed : failed : 0.665700591 (s) : ^\\+?[0-9]{1,3}$
5848 : failed : failed : 1.439487692 (s) : ^[-]?[0-9]+\\\\.?[0-9]+$
5849 : failed : failed : 1.674884925 (s) : r(?<!\\d)(-32768|-10|0|\\-0)(?!\\d)
5850 : failed : failed : 0.779559103 (s) : -\\d{1,3}(-\\d{1,3})?
5851 : failed : failed : 1.665724929 (s) : [0-9]+
5852 : failed : failed : 6.041987307 (s) : (?<=\\.|\\-)\\d+(-?\\d+)?$
5853 : failed : failed : 0.221564429 (s) : ^[-+]?[0-9]{1,2}[0-9]{1,2}$
5854 : failed : failed : 1.708675928 (s) : \\b\\d{1,2}\\b
5855 : failed : failed : 0.74673533 (s) : \\d{1,2} or \\d{0,2}
5856 : failed : failed : 29.972347766 (s) : \\b(?=.*[0-9])[01]\\+[0-9]\\b
5857 failed : unparsable : 0 (s) : Please check your regex.
5858 : failed : error init : 0.128791103 (s) : ^
5859 : failed : failed : 0.508145977 (s) : (?<hex>0[0-9A-Fa-f]+)
5860 : failed : failed : 0.799833983 (s) : ~(^-?0*\\d{0,2}[0-5]\\d$)~
5861 : failed : pumping failed : 58.327320448 (s) : ([a-zA-Z0-9_\\-\\.\\+-]+)(\\s+\\d+)
5862 : failed : failed : 0.136444062 (s) : ^[0-9]{1,3}
5863 : failed : failed : 2.372137282 (s) : ^[-+]?0[1-9]|[12][0-9]|3[01]$
5864 : failed : failed : 7.646888729 (s) : ^[0-9a-zA-Z_-]*$
5865 : failed : failed : 0.171598203 (s) : ^[\\d-]*$The explanation of the expression I used 
5866 : failed : failed : 1.652035943 (s) : (\\b[-0-9]{1,2}\\b)
5867 : failed : failed : 7.026985168 (s) : \\b(?=[0-9]{1,3}(\\.[0-9]{1,2})?)\\b
5868 : failed : failed : 11.163522791 (s) : (0|[1-9]\\d*)([kK]|[Mm]|[gG]|[tT])
5869 : failed : pumping failed : 136.859127915 (s) : [0-9]+\"\"\"
5870 : failed : failed : 2.081177058 (s) : \\b(?=\\d{1,2})(?<![a-zA-Z]).*\\b
5871 : unparsable : unparsable : 0.098467503 (s) : ^(1[012]|0[1-9])[0-9]{
5872 : unparsable : unparsable : 0.076364716 (s) : (hou
5873 : unparsable : unparsable : 0.059638301 (s) : \\d{1,
5874 : unparsable : unparsable : 0.093334326 (s) : ^(1[012][0-9]|0?[1-9]
5875 : unparsable : unparsable : 0.085240452 (s) : \\d{
5876 : unparsable : unparsable : 0.097944175 (s) : ^[0-9]{
5877 : unparsable : unparsable : 0.07266591 (s) : ^(0|[1-9][0-9]|1[012])[0-9]{
5878 : unparsable : unparsable : 0.052473585 (s) : [\
5879 : unparsable : unparsable : 0.071359727 (s) : (\\d{1,2
5880 : failed : failed : 0.535552422 (s) : (You can also use a function to generate this RegEx and then use it with the re.match() function)
5881 : failed : failed : 7.283814034 (s) : [0-9]{1,2}/\\d{1,2}/\\d{4}
5882 : failed : pumping failed : 18.517264258 (s) : (.*)\\/(.*)\\/(.*)\"\"\"
5883 : failed : failed : 11.370049344 (s) : d|m|Y
5884 : failed : failed : 14.578495991 (s) : [a-z]{1,2}\\d{1,2}\\d{1,2}[ ]{1,2}\\d{1,2}
5885 : failed : failed : 0.41233457 (s) : ^(0[1-9][0-9])/(0[1-9][0-9])/[0-9]{2,}$ 2. Create a regex for this descripti
5886 : unparsable : unparsable : 0.053608947 (s) : [0-9]|[0-9]\\/[0-9]|[0-9]\\/[0-9][0-9]\\/[0-9]             [0-9]|[
5887 : unparsable : unparsable : 0.065356333 (s) : (?<!.)\\d{4}-\\d{2}-\\d{2}(?![\\
5888 : failed : failed : 1.190922968 (s) : [0-9]{2}\\/[0-9]{2}\\/[0-9]{4}\\-([0-9]{1,2})?$
5889 : failed : failed : 0.15091529 (s) : - Valid Date Format    - Invalid Date Format
5890 : failed : failed : 0.201465128 (s) : ^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$
5891 : unparsable : unparsable : 0.065716687 (s) : \"[
5892 failed : unparsable : 0 (s) : Please check your regex.
5893 failed : unparsable : 0 (s) : Please check your regex.
5894 failed : unparsable : 0 (s) : Please check your regex.
5895 failed : unparsable : 0 (s) : Please check your regex.
5896 : failed : failed : 2.605171869 (s) : 0
5897 : unparsable : unparsable : 0.059654221 (s) : \"(
5898 : unparsable : unparsable : 0.05925771 (s) : (
5899 failed : unparsable : 0 (s) : Please check your regex.
5900 failed : unparsable : 0 (s) : Please check your regex.
5901 : unparsable : unparsable : 0.095998978 (s) : \"^[0-9]+\\{[0-9]+\\}[^0-9]*$\"
5902 : unparsable : unparsable : 0.089819805 (s) : \\\\{[0-9]{3}\\\\}  //match three digits \\\\{[0-9]{2}[-\\\\w]{1}[0-9]{2
5903 : unparsable : unparsable : 0.055462313 (s) : r'\\{[0-9]{1,2}\\}\\{[0-9]{1,2}\\}'
5904 : failed : pumping failed : 226.238237489 (s) : .*/\\d{1,3}\\.\\d{1,3}/
5905 failed : unparsable : 0 (s) : Please check your regex.
5906 : failed : failed : 0.724854888 (s) : [\\d]This regex matches any digit 0-9.
5907 : unparsable : unparsable : 0.082491271 (s) : (\\d{2})(\\d{2})?\\s\\{(\\d{3})\\s(\\d{3})\\}\\s(\\d{4})\\s(\\d{4}
5908 : unparsable : unparsable : 0.094643314 (s) : \"\\\\{(\\\\d{1,2})(\\\\d{1,2})(\\\\d{1,2})\\\\}\"
5909 : unparsable : unparsable : 0.069413779 (s) : ^\({1}[0-9]+\)\{[0-9]+\}$
5910 : failed : failed : 0.211577525 (s) : ^\\d{2}\\.?\\d{2}\\.?\\d{4}$
5911 : unparsable : unparsable : 0.078397006 (s) : r\"\"?(?<!=)\"(?<name>[^\"]*)\"(?<is_disabled>
5912 : failed : failed : 0.644127905 (s) : \\B\"\\w+\"
5913 : failed : failed : 0.503260723 (s) : r\"^'([^']*)'$\"
5914 : failed : failed : 0.693085005 (s) : r\"^[^\\\"]*$\"
5915 : failed : failed : 17.612792974 (s) : r\".*\"
5916 : failed : failed : 50.860275379 (s) : ^(\\\".*?\\\")(.*)$Explanati
5917 : failed : failed : 32.377568117 (s) : \\b(?=.*\"[^\"]*\"[^\"]*)\"
5918 : failed : failed : 193.393567009 (s) : (?<=[\"\"])([^\"]+)(?=\"]|$)
5919 : failed : pumping failed : 179.619627501 (s) : [^\" ]+\"\"\"x = '\"\"Ram\"\"'y = '\"\"\\9=\\z\\C\\?\"\"\\'\\'\\'\\''
5920 : failed : failed : 0.562133002 (s) : \\w{4}\\s\\w{4}\\s
5921 : failed : failed : 0.280657962 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5922 : failed : failed : 0.287167433 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5923 : failed : failed : 0.258131592 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5924 : failed : failed : 0.248384307 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5925 : failed : failed : 0.27373599 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5926 : failed : failed : 0.218187886 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5927 : failed : failed : 0.348906373 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5928 : failed : failed : 0.331435635 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5929 : failed : failed : 0.250416347 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5930 : failed : failed : 0.283015159 (s) : This expression will allow whole dollar amounts (along with $ and,) which are 20 digit wide. So the maximum amount will be $99,999,999,999,999,999,999. No
5931 : failed : failed : 1.931731125 (s) : [\\-\\d]+
5932 : failed : failed : 0.121338278 (s) : ^\\d+$
5933 : failed : failed : 19.497142004 (s) : (?<![\\d\\s-])[\\d\\s-]{1,20}(?![\\d\\s-])No
5934 : failed : failed : 0.875262729 (s) : - \\d+
5935 : unparsable : unparsable : 0.114610798 (s) : (^\\d{0,1}\\+|\\-\\d{0,1}\\d{0,1}\\+|\\d{0,1}\\-\\d{0,1}$)(^\\d{0,1}\\+|\\-\\d{0,1}\\d{0,
5936 : failed : failed : 3.061250742 (s) : ([-+]?\\d+)
5937 : failed : failed : 0.94135084 (s) : \\(\\d*[\\+\\-\\*/](\\d*)?)
5938 : failed : pumping failed : 32.048851887 (s) : [\\d]*[-+]?\\d+
5939 : failed : failed : 1.986545717 (s) : /\\d*([+\\-]\\d+)*/g\"\"\"
5940 : failed : failed : 0.510481454 (s) : \\x2B\\d+\\x1A
5941 : failed : failed : 3.266816767 (s) : ^[0-9]*\\.[0-9]*[eE][0-9]+[^.]*$
5942 : failed : failed : 34.799423011 (s) : \\d+([.,]\\d+)+Examples- \"1,2,3,4,5,6,7,8,9\" --> \"1,
5943 failed : unparsable : 0 (s) : Please check your regex.
5944 : unparsable : unparsable : 0.101705338 (s) : [0-9]+\\.[0-9]+|[0-9]+e[+-][0-9]+|[0-9]+(\\.[0-9
5945 : failed : failed : 1.221705996 (s) : ^[-0-9]+(\\.\\d+)?
5946 : failed : failed : 0.691075918 (s) : /^[0-9]+(\\.?[0-9]*)[eE][+-]?[0-9]*
5947 failed : unparsable : 0 (s) : Please check your regex.
5948 failed : unparsable : 0 (s) : Please check your regex.
5949 : unparsable : unparsable : 0.101015989 (s) : ^[^\\d,\\.e\\s]*\\d*\\s*[^\\d,\\.e\\s]*\\d*\\s*[^\\
5950 : unparsable : unparsable : 0.099648902 (s) : ^([a-z]|[A-Z]|[0-9]|\\d\\.\\d{0,3})([eE][+-]?
5951 : unparsable : unparsable : 0.072852669 (s) : (^
5952 : unparsable : unparsable : 0.078691537 (s) : /^(?!0*[1-9][0-9]?[0-9]$)(
5953 : unparsable : unparsable : 0.051220101 (s) : ^(([1-9]\\d?|1\\d\\d|2[0-4]
5954 : unparsable : unparsable : 0.067618703 (s) : \"^(([01]?[0-9][0-9]|2[0-4][
5955 : unparsable : unparsable : 0.080650159 (s) : .*?(?=(.{1,2}\\.){3})(?=(\\d{1
5956 : failed : failed : 0.336918688 (s) : (Regex for non-matching IP Address)^[0-9]+
5957 : failed : error init : 0.108032418 (s) : (?i)
5958 : unparsable : unparsable : 0.083476804 (s) : ^((25[0-5]|2[0-4][0-9]|[01]
5959 : failed : failed : 2.432997038 (s) : /^
5960 : failed : failed : 1.295997355 (s) : r'^(\\d{1,3}\\.){3}\\d{1,3}$'
5961 : unparsable : unparsable : 0.067618142 (s) : (^|\\s)(#\\w{6}|#\\w{3})(
5962 : failed : failed : 0.207208137 (s) : ^[a-f0-9]{3}$ (three valid hexadecimal digits)
5963 : failed : failed : 0.543527643 (s) : ^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$
5964 : failed : failed : 1.499012992 (s) : \\A[0-9a-fA-F]{3}\\s|\\A[0-9a-fA-F]{3}\\z
5965 : failed : failed : 0.633706168 (s) : ([#a-f0-9]{3}|[#a-f0-9]{3}[ABC])
5966 : failed : failed : 1.519500429 (s) : \\#([A-Fa-f0-9]{3}[A-Fa-f0-9]{3}|[A-Fa-f0-9]{6})
5967 : unparsable : unparsable : 0.107497077 (s) : rgx = \"^#((0[xX][0-9a-fA-F]{2})|(1[0-9a-fA-F]{2})|(2[0-9a-fA-F]{
5968 failed : unparsable : 0 (s) : Please check your regex.
5969 : failed : timeout : 600 (s) : .*[#][0-9a-fA-F]{3}|[0-9a-fA-F]{6}.*
5970 : failed : pumping failed : 205.412777267 (s) : [a-zA-Z0-9]+#[0-9a-fA-F]{6,16}
5971 : unparsable : unparsable : 0.073615175 (s) : \\\\p{IsDigit}+If you need to do additional validation, you can insert a \\p{Punct} in the middle of the regex, and add an if-statement to check if the character is a punctuation mark.
5972 : failed : failed : 9.188293574 (s) : \"([^\"]*)\"Generate a RegEx for this description.Answ
5973 : unparsable : unparsable : 0.087301315 (s) : (htt
5974 : failed : failed : 8.110436276 (s) : \\s\"\"(.*?)\"\"
5975 : failed : failed : 0.230191 (s) : [^\\u0020-\\u007E]+
5976 : unparsable : unparsable : 0.079102255 (s) : (?<=^|\\s) (?=
5977 : failed : pumping failed : 296.264812775 (s) : [^\\w\\s]+Generate a RegEx for this description. Answ
5978 : failed : pumping failed : 146.126053767 (s) : [\\s\\\"\\n]+\"\"\"
5979 failed : unparsable : 0 (s) : Please check your regex.
5980 : failed : failed : 12.997044475 (s) : \".*?[(][)]\"
5981 : failed : failed : 0.231080573 (s) : Matches string between chars'' as in source codeMatch exampl
5982 : failed : failed : 0.21875149 (s) : Matches string between chars'' as in source codeMatch exampl
5983 : failed : failed : 0.281366788 (s) : Matches string between chars'' as in source codeMatch exampl
5984 : failed : failed : 0.258393021 (s) : Matches string between chars'' as in source codeMatch exampl
5985 : failed : failed : 0.251160127 (s) : Matches string between chars'' as in source codeMatch exampl
5986 : failed : failed : 0.251951136 (s) : Matches string between chars'' as in source codeMatch exampl
5987 : failed : failed : 0.234006974 (s) : Matches string between chars'' as in source codeMatch exampl
5988 : failed : failed : 0.208508327 (s) : Matches string between chars'' as in source codeMatch exampl
5989 : failed : failed : 0.208537432 (s) : Matches string between chars'' as in source codeMatch exampl
5990 : failed : failed : 0.245981103 (s) : Matches string between chars'' as in source codeMatch exampl
5991 : unparsable : unparsable : 0.090933858 (s) : \\d{1,
5992 : failed : failed : 0.363225416 (s) : \"^\\d{1,2}
5993 : unparsable : unparsable : 0.067454626 (s) : \"([1-9][0-9
5994 failed : unparsable : 0 (s) : Please check your regex.
5995 : unparsable : unparsable : 0.072905297 (s) : N[^@]*N[^
5996 : failed : failed : 2.786003987 (s) : - 
5997 : failed : failed : 2.338558337 (s) : (1), (2), (4)
5998 : unparsable : unparsable : 0.058733509 (s) : \\d{
5999 : unparsable : unparsable : 0.063727757 (s) : \"^([0-9]|1
6000 : unparsable : unparsable : 0.080686136 (s) : ([0-9]{1,2
6001 : failed : failed : 0.769591877 (s) : [\\d ]+
6002 : unparsable : unparsable : 0.091538498 (s) : [0-9]{8}-[0-9]{3}-[0-9]{4}-[0-9]{3}-[0-9]{4}-[0-9]{4}-[0-9]{4
6003 : failed : failed : 1.686596724 (s) : r\"^\\d{8}$\"
6004 : failed : failed : 0.115819438 (s) : ^\\d{8}$
6005 : failed : failed : 2.00353301 (s) : ([0-9]{8}[ \\t]?)+
6006 : failed : failed : 0.972826743 (s) : (\\d{8})\\d*
6007 : failed : failed : 0.769967669 (s) : \"^\\d{8}$\"
6008 : failed : failed : 0.185771754 (s) : ^[0-9]{8}$
6009 : failed : failed : 8.987285331 (s) : [01]?[0-9]{5}-[0-9]{4}-[0-9]{3}-[0-9]{2}-[0-9]{1}
6010 : failed : failed : 0.979288375 (s) : \\d{8}
6011 : failed : failed : 0.34300091 (s) : ([0-9]{7}|[0-9]{8})
6012 : failed : error init : 0.142043251 (s) : ^
6013 : failed : failed : 0.900117202 (s) : \"^[1-9][0-9] [0-9]{6}$\"
6014 : failed : failed : 0.168649079 (s) : ^[0-9]{7}[0-9]{4}$
6015 : failed : failed : 0.689016908 (s) : (at least)
6016 : failed : failed : 0.13888717 (s) : The RegEx for this description is \"^
6017 : failed : failed : 0.661758731 (s) : \\d{6,7}
6018 : failed : failed : 0.23477446 (s) : ^[0-9]{3}[0-9]{4}$ OR ^[0-9]{3}[0-9]{4}[^0-9]{3}$
6019 : unparsable : unparsable : 0.109812817 (s) : ([0-9]{3}[0-9]{3}[0-9]{2}|[0-9]{3}[0-9]{3}[0-9]{4}|[0-9]{3}[0
6020 : failed : failed : 0.222113176 (s) : ^[0-9]{1,2}\\s[0-9]{3}\\s[0-9]{4}\\s[0-9]{5}\\s[0-9]{6}\\d{2}$
6021 : failed : failed : 0.660839402 (s) : ^[^a-zA-Z0-9 ]+$
6022 : failed : failed : 0.91772796 (s) : \\b(?=\\w{1,3}\\s?)(\\w{1,3})(\\w{1,3})\\b
6023 : failed : failed : 0.355174913 (s) : \\w*
6024 : failed : failed : 0.248961777 (s) : .{1,30}
6025 : unparsable : unparsable : 0.06559022 (s) : \\b(?=
6026 : failed : failed : 66.853112341 (s) : ^\\\\s*(?=.*\\\\bword\\\\b)(?=.*\\\\bexample\\\\b)(?=.*\\\\bspace\\\\b)\\\\s*$
6027 : failed : failed : 0.640730363 (s) : \"^\\\\w+\\\\s\\\\w+$\"
6028 : failed : failed : 6.589117096 (s) : ^[a-zA-Z ]+$What is the difference between a positive and negative lookahead regex? A positive lookahead regex matches a string followed by another string that is the same as the string matched. For example, in the following regex $pattern = qr/
6029 : failed : failed : 0.120443354 (s) : [^\\w\\s]*
6030 : failed : failed : 0.492779985 (s) : ^[\\w\\s]*$
6031 : unparsable : unparsable : 0.092140604 (s) : '^(0[1-9]|1[012])/(0[1-9]|1[012])[0-9
6032 : unparsable : unparsable : 0.056488863 (s) : [\\d/][\\d/][\\d/] [\\d\\d][\\d\\
6033 : failed : failed : 0.198158124 (s) : the regex would look something like th
6034 : unparsable : unparsable : 0.074442893 (s) : \\d\\d/\\d\\d/\\d\\d \\d\
6035 : unparsable : unparsable : 0.093381143 (s) : (\\d{1,2})/(\\d{2})/(\\d{4})\\s(\\d{2
6036 : unparsable : unparsable : 0.072498547 (s) : \\b\\d{2}\\/\\d{2}\\/\\d{4}\\s\\d{
6037 : failed : failed : 0.111656144 (s) : date_time_field = \"
6038 : unparsable : unparsable : 0.098699868 (s) : r'(\\d\\d)/(\\d\\d)/(\\d\\d \\d\
6039 : unparsable : unparsable : 0.053327772 (s) : (The output can vary, but should be similar to the example given below)re.compile(r\"\\A[0-9
6040 : unparsable : unparsable : 0.103190144 (s) : (?<!\\d|[-\\/](?<!\\d|[-\\/](?!\\d))|[-\\/](
6041 : failed : failed : 0.722972989 (s) : ^(?=.{2,3}$)[a-z0-9]+$
6042 : failed : failed : 5.210525968 (s) : [a-zA-Z]{1,2}[a-zA-Z]|[a-z]{1,2}[sS]?w{0,2}[0-9]
6043 : unparsable : unparsable : 0.099504262 (s) : ^(?=
6044 : unparsable : unparsable : 0.091705861 (s) : /^(?=
6045 : failed : error init : 0.089808003 (s) : ^
6046 : failed : failed : 0.253481568 (s) : .{1,3}[^\\\\sa]
6047 : failed : failed : 46.351968002 (s) : (0[^>]+)([0-9]+)
6048 failed : unparsable : 0 (s) : Please check your regex.
6049 : failed : failed : 1.623102694 (s) : (\\w+)\\1{1,2}
6050 : failed : failed : 0.118260913 (s) : .{2,2}
6051 : unparsable : unparsable : 0.074857427 (s) : [^A-Za-z0-9_-()]
6052 : unparsable : unparsable : 0.068543872 (s) : ```pythonusername_re = re.compile(r'^[A-Za-z0-9._-]+$
6053 : unparsable : unparsable : 0.089655407 (s) : [a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[
6054 : failed : failed : 0.151839087 (s) : ^[a-zA-Z0-9](\\.\\w*)?$
6055 : failed : failed : 1.358903747 (s) : 0-9[_A-Za-z]
6056 : failed : failed : 57.031804913 (s) : (^(?!.*\\d)(^[^\\d]*)\\d{6,15}$)Explanati
6057 : failed : failed : 0.196645135 (s) : ^[a-zA-Z0-9._-]{5,15}$
6058 : unparsable : unparsable : 0.06315699 (s) : /^(?!|\\s)([a-z0-9A-Z\\.]+\\.[a-z0-9A-
6059 : failed : failed : 0.179216447 (s) : ^[\\\\w-]{5,15}$
6060 : failed : failed : 1.199978279 (s) : \\A(?=\\w{5,15})\\b
6061 : failed : failed : 0.219541437 (s) : ^[a-zA-Z0-9 ]{5,12}$
6062 : failed : failed : 0.738971403 (s) : \\b\\w{5,12}\\b
6063 : failed : failed : 8.220448646 (s) : \\b[A-Z][a-z]*[A-Z]\\b
6064 : failed : failed : 1.5138745 (s) : [a-zA-Z\\d]{6,12}
6065 : failed : failed : 0.458908513 (s) : htt
6066 : failed : failed : 0.677664482 (s) : r\"[a-zA-Z]{0,11}
6067 : failed : failed : 3.360824101 (s) : \\b[a-zA-Z0-9]{1,6}[.-]?[a-zA-Z]{1,6}\\b
6068 : failed : failed : 2.507893649 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\s]$).{5,12}$
6069 : failed : failed : 0.695019803 (s) : (at least 20 characters) ^(?=\\S)(?=.*[\\d])(?=.*[a-z])(?=.*[A-Z])(?=.{5,12})[\\w]*$\"
6070 : failed : failed : 0.150797319 (s) : ^[a-zA-Z][a-zA-Z0-9]{0,12}$
6071 : failed : failed : 3.500653593 (s) : ^\\+91-?(\\d{9})[\\s-]+\\d{9}$
6072 : unparsable : unparsable : 0.065784142 (s) : (?<code>\\+91)(?<prefix>\\d+)?(?<number>\\d{4
6073 : unparsable : unparsable : 0.089840533 (s) : [0-9]{6}[0-9]{4}[0-9]{4}[0
6074 : unparsable : unparsable : 0.087920633 (s) : +91\\d{1,8}\"[4] => \"81,4524\"
6075 : failed : failed : 0.184969193 (s) : ([+]?)(\\d{9})?([-]?)[0-9]*
6076 : failed : failed : 37.013655073 (s) : ([0-9]{10})-([0-9]{4})
6077 : unparsable : unparsable : 0.068334531 (s) : +91-?[0-9]{7}?[0-9]{7}?[0-9
6078 : failed : failed : 0.167284497 (s) : ^[+]?\\d{9}-?\\d{12}$
6079 : failed : failed : 0.243324917 (s) : ^(\\+91)?[-\\d]\\d{9}$
6080 : unparsable : unparsable : 0.077948978 (s) : ^[0-9]*([0-9]*[0-9]*[0-9])?([
6081 : unparsable : unparsable : 0.065501945 (s) : (\\\\d{1,3}d|\\\\d{1,3}h|\\\\d{1,3}m
6082 : unparsable : unparsable : 0.061776208 (s) : (^
6083 : unparsable : unparsable : 0.060297003 (s) : (explanation is provided)(\\d{1,2})(d)(\\d{1,2})(h
6084 : unparsable : unparsable : 0.080369474 (s) : (?!.*d.*\\.?d)^(?!.*h.*\\.?h)^(?!.*m.*\\.?
6085 : failed : error init : 0.09342772 (s) : ^
6086 : failed : failed : 0.158541019 (s) : ^[0-9]{2}d[0-9]{2}h[0-9]{2}
6087 : unparsable : unparsable : 0.064962557 (s) : \"^\\d{{3}\\d\\d}\\d{1}\\d{1}\\d?\\d?\\d?
6088 : failed : failed : 5.444999094 (s) : \\d+d\\d{1,2}h\\d{1,2}m
6089 : failed : failed : 0.672455041 (s) : \\d{4}d(\\d{2}h\\d{2}m)
6090 : failed : failed : 0.163210971 (s) : \\d+d\\d+h\\d+m
6091 : unparsable : unparsable : 0.084561653 (s) : [
6092 : unparsable : unparsable : 0.09841757 (s) : (
6093 : failed : failed : 1.41735554 (s) : /
6094 : failed : failed : 0.181041039 (s) : \"
6095 failed : unparsable : 0 (s) : Please check your regex.
6096 : failed : failed : 0.752454302 (s) : /
6097 failed : unparsable : 0 (s) : Please check your regex.
6098 : unparsable : unparsable : 0.084411282 (s) : {
6099 : unparsable : unparsable : 0.073424449 (s) : (
6100 : failed : failed : 1.915274093 (s) : \\
6101 : failed : failed : 0.214603144 (s) : ^(0[1-9]|1[012])
6102 : unparsable : unparsable : 0.068152691 (s) : /^\\d{1,2}\\/(\\d{
6103 failed : unparsable : 0 (s) : Please check your regex.
6104 : unparsable : unparsable : 0.082584887 (s) : [0-9]{2}/([3-
6105 : unparsable : unparsable : 0.087682337 (s) : ^(01|02|03|04|05|06
6106 : unparsable : unparsable : 0.092338133 (s) : /((0[1-9]|1[0-
6107 : unparsable : unparsable : 0.05824151 (s) : \\d{1,2}/\\d{1,
6108 : unparsable : unparsable : 0.094233597 (s) : (?<month>\\d{2})/(?
6109 : failed : error init : 0.120354197 (s) : ^
6110 : failed : failed : 0.16795458 (s) : ^[01]\\d{2}/[12]
6111 : failed : error init : 0.093824282 (s) : ^
6112 : failed : error init : 0.085701114 (s) : ^
6113 failed : unparsable : 0 (s) : Please check your regex.
6114 : unparsable : unparsable : 0.068931448 (s) : [
6115 failed : unparsable : 0 (s) : Please check your regex.
6116 : failed : error init : 0.086402495 (s) : ^
6117 failed : unparsable : 0 (s) : Please check your regex.
6118 failed : unparsable : 0 (s) : Please check your regex.
6119 : failed : error init : 0.115776037 (s) : ^
6120 : unparsable : unparsable : 0.077033507 (s) : (
6121 : failed : failed : 0.31002351 (s) : #[a-zA-Z0-9_\\.-]*?
6122 : failed : failed : 3.689841635 (s) : ^([>#]([^>]*))$
6123 : unparsable : unparsable : 0.128958245 (s) : [
6124 : failed : failed : 0.564767888 (s) : ^[#>\\(\\)]+$
6125 : failed : pumping failed : 120.576114313 (s) : [^a-zA-Z0-9]*\"\"\"import re
6126 : unparsable : unparsable : 0.103126646 (s) : \\w+[%\\-#\\(\\)\\>\\&\\=\\s]+\\w+
6127 : failed : failed : 0.392196386 (s) : ^[ \\t]*
6128 : failed : failed : 0.745366189 (s) : \\s*(#|>|[^>]|\\(|\\))
6129 : failed : failed : 10.215744935 (s) : ^\\s*\\(.*\\)\\s*$
6130 : failed : failed : 3.29558658 (s) : \"(\\\\w+)\\\\s+\\\\w+(\\\\s+\\\\w+)*\"
6131 : failed : failed : 0.191368469 (s) : 0-9 0-9
6132 : failed : failed : 0.686187959 (s) : \"^[0-9]{4}$\"
6133 : failed : failed : 10.605365173 (s) : [0-9]{4}\\.[0-9]{3}[0-9]{2}[0-9]{1}
6134 : failed : failed : 1.183763721 (s) : ([0-9]{4})
6135 : failed : failed : 0.659391976 (s) : ^\\d{4}$
6136 : failed : failed : 0.783838585 (s) : \\d{4}
6137 : unparsable : unparsable : 0.087869658 (s) : /(0\\d{0,3}0\\d{0,3}0\\d{0,3}0|0[0-9]{1}\\d{0,3}|1[0-9]{1
6138 : failed : failed : 0.140967961 (s) : ^\\d{4}$Generate a RegEx for this description. Answ
6139 : failed : failed : 1.03240419 (s) : (\\d{4})
6140 : failed : failed : 0.793237419 (s) : \\d{4}-\\d{2}-\\d{2}
6141 : failed : failed : 20.660713289 (s) : [0-9]{1,2}$
6142 : failed : failed : 0.849246393 (s) : (\\d+)(\\D){0,1}(\\d{3})(\\d{3}) (\\d{4}) (\\d+)
6143 : failed : failed : 40.523890692 (s) : [0-9]{1,3}[a-zA-Z]'''
6144 : failed : failed : 0.367020211 (s) : ^[\\d\\d]{1,3}[\\d\\d]{3}[\\d\\d]{4}$
6145 : failed : failed : 0.703594655 (s) : \"^(0|[1-9][0-9]*)(1?0*)([1-9][0-9]*)$\"
6146 : failed : failed : 0.116726955 (s) : ^[1-3][0-9]{4}$
6147 : failed : failed : 0.163084284 (s) : [0123456789]{1,16} (for 1 to 12 numbers, in any order)
6148 : failed : failed : 0.343573581 (s) : r\"^0*(0*1[0-9]{5}|[1-9]{3}[0-9]{3}|\\d{1,3}|\\d{3}\\d)\\z$\"
6149 : failed : failed : 0.169865012 (s) : \\d\\d\\d\\d
6150 : failed : failed : 1.981591764 (s) : ^[1-9][0-9]*$
6151 : unparsable : unparsable : 0.084306355 (s) : ((\\d{3}[-\\s]?\\d{3}[-\\s]?\\d{4}))|((\\d{3}[-\\s]?\\d{3}[-
6152 : unparsable : unparsable : 0.075945001 (s) : ^\\+?[0-9]{1}[0-9]{1}[0-9]{1}\\(([0-9]{3}\\-[0-9]{3}\\-[0-9
6153 : failed : failed : 0.200898749 (s) : 1-3 digits, followed by dashes, followed by 3 digits
6154 : failed : failed : 1.702019792 (s) : \\b
6155 : unparsable : unparsable : 0.072402217 (s) : ((\\(?0[1-9]|1[012]\\d|[1-9]\\d|[2-9]\\d|\\d\\d)){2}\\)?\\s*((\\(\\
6156 : failed : failed : 0.647599546 (s) : \\b\\d{3}\\D*\\d{3}\\D*\\d{3}\\b
6157 : failed : failed : 0.161151109 (s) : ^[0-9]{3}[.][0-9]{3}[.][0-9]{4}$
6158 : unparsable : unparsable : 0.116286933 (s) : ((\\S)(
6159 : unparsable : unparsable : 0.064575443 (s) : [0-9]{3}[\\- ]?[0-9]{3}[\\- ]?[0-9]{4}
6160 : failed : pumping failed : 74.652899788 (s) : \\+[0-9]{3}\\[0-9]+\\[0-9]+\\
6161 : failed : failed : 0.199383455 (s) : ^[0-9]{8}(\\.\\d{3})$
6162 : failed : failed : 0.21610966 (s) : ^(0|\\d\\d?|\\d?\\d\\d)(\\.\\d+)?$
6163 : failed : failed : 1.661261713 (s) : [^\\d]*|[0-9]\\d*[0-9]$
6164 failed : unparsable : 0 (s) : Please check your regex.
6165 : failed : failed : 0.191827708 (s) : ^[0-9]{1,3}[0-9]{3}[0-9]{2}$
6166 : failed : failed : 0.482038722 (s) : ^\\d{3}-\\d{3}-\\d{4}$|^\\d{3}-\\d{3}-\\d{3}\\.\\d{1}$
6167 : failed : failed : 0.148998787 (s) : ^[0-9]{3}[.][0-9]{3}$
6168 : failed : failed : 0.178119015 (s) : ^\\d{1,2}(\\s?(\\d\\d\\d\\d\\d|1\\d\\d\\d\\d\\d))$Explanati
6169 : failed : failed : 0.161845297 (s) : GMAT score should be between 100 and 900.
6170 : failed : failed : 1.299414484 (s) : (0| 190| 800) (\\d) (\\.\\d+)
6171 : failed : failed : 0.495757553 (s) : 6\\d{6}\\d{7}
6172 : failed : failed : 1.128274638 (s) : [^0-9] (0-9) (0-9)....(5-9) (0-9)
6173 : failed : failed : 0.290389307 (s) : [6]{6}[1-9]{7}
6174 : failed : failed : 0.193458647 (s) : r\"^6\\d{6}$\"
6175 : failed : failed : 0.167625855 (s) : ^6[0-9]{7}(-[8-9]\\d?)?$
6176 : failed : failed : 2.201187381 (s) : (6[0-9]{5})-(\\d{3})
6177 : failed : failed : 0.150204541 (s) : ^6[1-9]\\d{7}$
6178 : unparsable : unparsable : 0.105154878 (s) : (6[1-9][0-9]|[1-9][0-9]|2[0-8][
6179 : failed : failed : 0.663747329 (s) : ^[6]\\d{7}$
6180 : failed : failed : 1.479610604 (s) : \\d
6181 : failed : failed : 0.473444713 (s) : (100) (101) (102) (103)
6182 : failed : failed : 1.261358698 (s) : \\d{1,2} (0 or 1 digit)? (0 or more dashes)?
6183 : failed : failed : 0.821707421 (s) : \\d{1,99},\\d{1,99}
6184 : failed : failed : 0.109784674 (s) : [Explanation of the pattern that generates the correct RegEx output]
6185 : failed : failed : 0.317881542 (s) : (0 <= RegEx.Length <= 6)   \"\\d\\d[\\d\\-\\s]\\d\\d\"
6186 : failed : failed : 0.549010836 (s) : \"^(0|[1-9]\\d|1\\d\\d\\d|2[0-9]\\d)\\d{1,2}$\"
6187 : failed : failed : 0.288678889 (s) : r\"100[^-]{4}\"
6188 : failed : failed : 5.361508003 (s) : (\\d{1,2}|\\d{3})
6189 : failed : failed : 26.178941406 (s) : ^[1-9][0-9]|[1-9][0-9]?[0-9]$
6190 : unparsable : unparsable : 0.090234209 (s) : [10-19].{n}
6191 : failed : failed : 0.384998407 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6192 : failed : failed : 0.306096988 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6193 : failed : failed : 0.288251851 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6194 : failed : failed : 0.311541958 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6195 : failed : failed : 0.282013687 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6196 : failed : failed : 0.297709435 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6197 : failed : failed : 0.394723801 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6198 : failed : failed : 0.330617836 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6199 : failed : failed : 0.284869747 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6200 : failed : failed : 0.377350617 (s) : allows 1 to 99 in.5 increments which I originally developed for a forum postMatch exampl
6201 : failed : failed : 3.879198624 (s) : ^[0-9]+(\\.[0-9]{0,2})?$
6202 : unparsable : unparsable : 0.071827984 (s) : ^(0|[1-9][0-9]{0,2}|100
6203 : failed : failed : 0.390897397 (s) : positive(non-negative) decimal values with 2 or more floating point values and less than or equal to 24.
6204 : failed : failed : 9.582422233 (s) : ^(?=.*\\d)(?=.*[\\d\\.])0?(?=.*[1-9]\\d)\\d+
6205 : failed : failed : 0.222240373 (s) : ^\\d+\\.\\d+$
6206 : failed : pumping failed : 144.509162136 (s) : [0-9]* (with 0-9) and.0+ (with 0-9+ after.0)
6207 : failed : failed : 0.330961579 (s) : /^\\d+
6208 : failed : failed : 1.568594855 (s) : 0\\.([0-9]+)
6209 : failed : failed : 0.976556478 (s) : \"^[a-zA-Z]{2}([1-9][0-9] *|[1-9]\\d*)\\.[0-9]*$\"
6210 : failed : failed : 1.303963901 (s) : [0-9]\\.?[0-9]?[0-9]? or [0-9].[0-9]?[0-9]?[0-9]?
6211 : failed : failed : 2.98368017 (s) : foo.\\.([a-z]*|[A-Z])(\\.\\w+)?
6212 : failed : pumping failed : 154.068632203 (s) : [a-z][a-z0-9]*[.][a-z0-9]*[.]
6213 : failed : pumping failed : 55.558789761 (s) : \\w\\.\\w*\\.\\w*|\\w\\.\\w*[a-z]+[a-z]*\\.\\w*3. Create a RegEx that matches all email addresses in a given string.Answ
6214 : failed : failed : 3.474602603 (s) : [\\w.-]+
6215 : failed : failed : 1.678714396 (s) : [a-zA-Z0-9._-]+[a-zA-Z0-9]
6216 : failed : pumping failed : 50.683522557 (s) : .*\\.(\\w+)\\.(\\w+)\\.(\\w+)$
6217 : failed : failed : 0.170155946 (s) : ^[a-z][a-z0-9][a-z0-9].[a-z0-9]$
6218 : failed : pumping failed : 40.441688521 (s) : .*?(\\w+).*
6219 : failed : failed : 0.462599174 (s) : \"^\\s*[a-zA-Z]{3}\\.\\s*[a-zA-Z]{3}\\.\\s*[a-zA-Z]{3}\\s*$\"
6220 : failed : failed : 1.378027835 (s) : \\b[\\w.-]+\\b
6221 : failed : failed : 1.908161243 (s) : r'\\b\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\b'
6222 : failed : failed : 0.438677456 (s) : \"^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$\"
6223 : failed : failed : 1.316268417 (s) : ^(      [0-9]{1,3}\\.){3}[0-9]{1,3}$  | ^
6224 : failed : failed : 0.817312544 (s) : \\b[1-9]\\d?[0-9]?\\.[1-9]\\d?\\.[1-9]\\d?\\.[1-9]\\d?\\
6225 : failed : error init : 0.086698569 (s) : ^
6226 : failed : failed : 2.726127962 (s) : ^(?=.*[0-9].*)(?=.*[a-z].*)(?=.*[A-Z].*).{5,15}$
6227 : failed : failed : 5.220976267 (s) : ^(?=.*\\.\\d{1,2})
6228 : failed : failed : 0.282212318 (s) : \"^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})$\"
6229 : failed : failed : 0.9588551 (s) : \\b
6230 : failed : failed : 0.869104405 (s) : private_ip = r'\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}'
6231 : failed : failed : 0.796566924 (s) : \"^[0-9]+(.[0-9]+)?\"Examp
6232 : failed : pumping failed : 47.44530782 (s) : (?<![.][A-Za-z])[-\\d]+(?=[A-Za-z])
6233 : failed : failed : 0.103681983 (s) : ^\\d*
6234 : failed : failed : 0.56575815 (s) : \\d+(\\.\\d{1,2})Explain w
6235 : failed : failed : 0.796862096 (s) : [^0-9.]|[+-]?[0-9]+(.[0-9]+)+
6236 failed : unparsable : 0 (s) : Please check your regex.
6237 : failed : failed : 0.947577863 (s) : \"\\\\-?\\\\d+\"
6238 : failed : failed : 2.640325428 (s) : (?<=\\d)(?=\\d|\\.)
6239 : failed : pumping failed : 129.149525405 (s) : (^|[^0-9,.])?[0-9]+$
6240 : failed : failed : 7.007135673 (s) : \\d+
6241 : failed : failed : 0.872386651 (s) : (A) \\d+, (B)\\.?\\d+
6242 : failed : failed : 2.424711806 (s) : [0-9]{1,3}\\.[0-9]{1,3}|[0-9]{1,3}|\\d[\\,\\.]
6243 : failed : failed : 0.202005558 (s) : ^[0-9]{1,3}(,)?[0-9]{1,3}?$
6244 : failed : failed : 0.65940533 (s) : \\d+,\\d+ or \\d+
6245 : failed : failed : 1.419049708 (s) : \\d+\\.?\\d*
6246 : failed : failed : 39.586364113 (s) : ^[0-9]+(,[0-9]+(,[0-9]+)*)?$Generate the regex from this example.Answ
6247 : failed : failed : 2.634800749 (s) : ([0-9]{2})([,.]{1})?([0-9]{1})
6248 : failed : pumping failed : 68.795103411 (s) : ([\\d\\.]*)((,)+)
6249 : failed : failed : 0.873185295 (s) : \"[0-9]\"
6250 : failed : failed : 0.786946345 (s) : \"^[\\d.,]+$\"
6251 : failed : failed : 5.227335188 (s) : [0-9]\\.[0-9]
6252 : failed : failed : 40.780816661 (s) : (\\d+.\\d+)|(-?\\d+.\\d+)
6253 : failed : failed : 2.662551366 (s) : ^(?=.*[0-9])(?!.*[-]).*$
6254 : failed : failed : 0.456093239 (s) : \"^\\d+\\.\\d+$\"Explanati
6255 : failed : failed : 0.676836513 (s) : [0-9]{1,20}(\\.\\d{1,2})?
6256 : failed : failed : 0.793658917 (s) : [0-9]{1,3}.[0-9]{1,3}
6257 : failed : failed : 0.191034405 (s) : ^([1-9]\\d|1\\d\\d|100)\\.\\d$
6258 : failed : failed : 2.898533503 (s) : \\d+\\.\\d+
6259 : failed : failed : 0.222166686 (s) : The RegEx would be \"(^\\d+\\.?\\d*$)+(\\d+\\.?\\d*|\\d+\\.\\d*-)+$\"Exercise
6260 : failed : failed : 0.493902164 (s) : ^[0-9]+(.[0-9]*)$
6261 : failed : failed : 3.488827351 (s) : \\b(?=(\\d{1,})+(?!\\d))\\b
6262 : failed : failed : 0.119099341 (s) : ^\\d{1,3}$
6263 : failed : failed : 0.847332205 (s) : \"^[1-9][0-9]*$\"\"\"\"
6264 : failed : failed : 0.649063444 (s) : ^[1-9][0-9]{0,9}$
6265 : failed : failed : 7.056773787 (s) : ^[0-9]*[1-9][0-9]*[0-9]$
6266 : failed : failed : 22.467640607 (s) : \"\\+?[1-9][0-9]*\"
6267 : success : init : 2.311443298 (s) : ^[0-9]+(.[0-9]+)+$Generate a RegEx for this description. Answ
6268 : failed : failed : 0.753816219 (s) : (\\d{4})+
6269 : failed : failed : 0.143506257 (s) : xm/i
6270 : failed : failed : 0.555697559 (s) : (\\d+)
6271 : failed : pumping failed : 29.898973882 (s) : ^\\s*([a-z]?[\\w]*).*\\s*$
6272 : failed : failed : 15.969876292 (s) : ^.*?\\bError\\b.*$
6273 : failed : failed : 0.263364357 (s) : [^a-z][a-z]*
6274 : failed : failed : 0.7720005 (s) : r\"Error|Warning|Exception\"
6275 : unparsable : unparsable : 0.093626302 (s) : (^|\\s)([a-zA-Z0-9_\\-\\s])((?=\\s|$))|(?<=\\s|^)([a-zA-Z0-9_\\-
6276 : failed : error init : 0.134600745 (s) : ^
6277 : failed : failed : 0.860827638 (s) : /(error|warning|exception)
6278 : failed : failed : 3.145612901 (s) : [Error|Warning|Exception] (.*)
6279 : failed : failed : 1.221763223 (s) : [^\\w\\d\\s]+
6280 : failed : failed : 1.293020369 (s) : r\"\\w*Error\\w*\"
6281 : failed : pumping failed : 135.68881785 (s) : (.*)\\.?(.*)
6282 : failed : failed : 0.775456863 (s) : \"^[a-zA-Z0-9\\+!\\*\\#\\$\\%\\^&\\(\\)\\{}\\]
6283 : unparsable : unparsable : 0.08690829 (s) : (\\w{3}[\\s-]?[A-Za-z0-9\\-_\\+\\(\\)^%&@#\\$\\^
6284 : failed : pumping failed : 126.410407646 (s) : [a-zA-Z0-9@.]+  (\\d+\\.\\d+)?
6285 : unparsable : unparsable : 0.110972967 (s) : ^(?=.*[\\w])(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9
6286 : failed : failed : 0.380765312 (s) : (case of all characters) \"^[a-zA-Z][a-zA-Z0-9@#$%^&*()]+$\"
6287 : failed : failed : 141.263511055 (s) : (.{2,10})?\\W|(?<=\\W)\\W\\.?
6288 : failed : failed : 14.1590104 (s) : (?s) (?<!^)(?=[\\w])
6289 : failed : failed : 23.091833888 (s) : \"[a-zA-Z0-9_\\-]+\"
6290 : unparsable : unparsable : 0.080049416 (s) : - [a-zA-z0-9_\\-\\.]+[@] [a-zA-z0-9\\-\\.]+[.] [
6291 : failed : failed : 0.155206314 (s) : _percentage^[0-9]{0,1}_
6292 : failed : failed : 1.16868101 (s) : \\d{1,2}\\.\\d{2}
6293 : failed : failed : 0.780736494 (s) : (\\d{1,2})(\\,\\d{3})?
6294 : failed : failed : 0.219513916 (s) : The percentage format for India and Germany is $[0-9]\\d\\.?\\d{1,2}%. Maximum two digits before decimal and after decimal.
6295 : failed : failed : 22.291697159 (s) : ^[0-9]{2}([0-9][0-9]{5})|([0-9][0-9][0-9][0-9][0-9])$
6296 : failed : failed : 15.012493214 (s) : (\\d*)(\\.\\d{1,2})
6297 : failed : failed : 0.150319646 (s) : ^[0-9]*[.]?[0-9]*[,]?[0-9]*[,]?[0-9]*
6298 : failed : failed : 0.211570062 (s) : \\d{1,2}(\\.\\d{1,2})? - \"12.34\"- \"0.56\"- \"12.3\"- \"0.56\"Generate a RegEx
6299 : failed : pumping failed : 19.460489972 (s) : .*?(?<!\\d)([0-9]|[1-9][0-9]*)([.][0-9]{2})$
6300 : failed : failed : 1.596018221 (s) : (5) [0-9]{0,2}[.][0-9]{1,2}[.]
6301 : failed : failed : 0.540099654 (s) : \"\\A(?![\\d_])(?![\\d_]*$)\\w[\\w]*\\b\"
6302 : failed : failed : 0.174426491 (s) : [a-zA-Z][a-zA-Z0-9]
6303 : unparsable : unparsable : 0.084998259 (s) : ^([a-zA-Z0-9_]{1,6})(_[a-zA-Z0-9_]
6304 : unparsable : unparsable : 0.08864086 (s) : (?<!^)_[A-Z]{1,2}\\d{1,3}_[A-Z]{1,
6305 : failed : failed : 0.776939876 (s) : \\/[a-zA-Z0-9_]{1,6}
6306 : failed : failed : 0.453748755 (s) : - \"^[A-Za-z0-9_]+$\"    Answ
6307 : failed : failed : 5.921365931 (s) : ([a-zA-Z]\\d{0,6}[a-zA-Z])
6308 : failed : failed : 6.304302673 (s) : ^[a-zA-Z][a-zA-Z0-9_]*$
6309 : failed : failed : 10.233403372 (s) : [\\w_]([\\w_]|_)+
6310 : failed : failed : 0.182818142 (s) : ^[A-Za-z0-9_]{1,31}$
6311 : failed : failed : 1.44508098 (s) : /
6312 : failed : error init : 0.170071749 (s) : ^
6313 : failed : error init : 0.121893876 (s) : ^
6314 : unparsable : unparsable : 0.075222701 (s) : (
6315 : failed : error init : 0.095159128 (s) : ^
6316 failed : unparsable : 0 (s) : Please check your regex.
6317 : unparsable : unparsable : 0.093445162 (s) : [
6318 : unparsable : unparsable : 0.059930047 (s) : (
6319 : unparsable : unparsable : 0.073168159 (s) : [
6320 : failed : error init : 0.113142864 (s) : ^
6321 : unparsable : unparsable : 0.082579366 (s) : ^(?=\\d{2}\\b\\s+[A-Z]\\s+\\d{3}\\b)(?=\\d{2}\\b\\s+[A-
6322 : failed : failed : 0.145771132 (s) : streetName
6323 : failed : failed : 0.178246273 (s) : (?i)^\\d{6}\\s?[\\w\\s]+?\\s?
6324 : failed : failed : 0.134371276 (s) : r'\\b
6325 : failed : failed : 4.416855289 (s) : \\b[A-Za-z]{1,15}\\s
6326 : failed : failed : 221.288936417 (s) : [^^a-z0-9 ]{5,15} [^^a-z0-9 ]
6327 : failed : failed : 0.448124239 (s) : (Street address is optional. Use a non-capturing group to match street name, if possible) (?<=Street address )[^ ]+[, ]+ (?<=Street name )
6328 : failed : failed : 0.163880111 (s) : ^[0-9]{6,7} [A-Za-z]{1,2}\\s
6329 : failed : failed : 0.706832159 (s) : [\\d\\w]{3} [\\d\\w]{3}\\s[\\d\\w]{8}
6330 : failed : failed : 0.136351459 (s) : ^\\d{3}[-\\.\\s]?\\d{4}[-\\.\\s]?\\d{1,2}$
6331 : unparsable : unparsable : 0.100081671 (s) : \\A(?P<phone>\\d{3})\\z$
6332 : failed : failed : 0.644326958 (s) : (\\d{3})\\s(\\d{3})-(\\d{4})\"\"\"
6333 : unparsable : unparsable : 0.074166175 (s) : \\(?(\\d{3})\\)\\s*\\-\\s*\\d{3}-\\d{4}
6334 : failed : failed : 1.087639028 (s) : \\d{3}-\\d{3}-\\d{4}
6335 : failed : failed : 0.791217873 (s) : (\\(.{3}\\) \\d{3}-\\d{4})
6336 : failed : failed : 1.087129726 (s) : (\\d{3}) (\\d{3})-\\d{4}
6337 : failed : failed : 5.379953743 (s) : (2[0-9]|3[01])[0-9]{3}-[0-9]{4}
6338 : unparsable : unparsable : 0.065751752 (s) : [\\(\\[](\\d{3})[\\]]-\\d{3}-\\d{4})
6339 : failed : failed : 0.745407867 (s) : (\\d{3})\\s*-\\s*(\\d{3})-\\s*(\\d{4})
6340 : failed : failed : 0.715793164 (s) : r'(?<=\\d\\).*(?=\\d)'
6341 : failed : failed : 0.175896229 (s) : \\d-\\d{0,4}
6342 : failed : failed : 0.876241459 (s) : \\(\\d{3}\\)\\s*\\-\\s*\\d{4}-\\d{4}\\-\\d{4}
6343 : unparsable : unparsable : 0.078877153 (s) : \\(?(\\d{3})\\) \\-\\(?(\\d{3})\\)? \\-\\(?(\\d{4})\\)?
6344 : unparsable : unparsable : 0.058909479 (s) : (\\(\\d{3}\\)\\s(\\d{3})-(\\d{4})
6345 : failed : failed : 0.637816113 (s) : \\d{3}[-\\s]{2}\\d{4}
6346 : failed : failed : 2.499212497 (s) : \\b
6347 : failed : failed : 0.261813537 (s) : \"^\\d\\d{2}-\\d{3}-\\d{4}$\"
6348 : unparsable : unparsable : 0.069234524 (s) : ^\\(?(\\d{3})\\)?[-]?\\d{3}[-]?\\d{4}$
6349 : failed : failed : 0.577635538 (s) : \\d{3}(\\)-\\d{4}   Descripti
6350 : failed : pumping failed : 424.235124025 (s) : [^\\(\\)]*\\d[-\\d\\.]?[a-z]*Explanati
6351 : failed : failed : 0.140536884 (s) : ^[\\d]{3}[-.]?[\\d]{3}$
6352 : failed : failed : 0.791584518 (s) : \\d{3}-\\d{3}-\\d{4}
6353 : unparsable : unparsable : 0.10118241 (s) : \\A(?P<area_code>\\d{3}[-\\s]\\d{3}[-\\s]\\d{4})
6354 : unparsable : unparsable : 0.083263655 (s) : \\(?(\\d{3}-)?\\d{3}-)?\\d{4}
6355 : failed : failed : 0.298039773 (s) : A pattern that matches phone numbers in ###-###-#### format only with the area code of Southern California\"\"\"
6356 : unparsable : unparsable : 0.10735973 (s) : r\"\\(
6357 : failed : failed : 1.227023779 (s) : [^03]\\d{3}\\-\\d{2}\\-\\d{4}\"\"\"
6358 : unparsable : unparsable : 0.08558747 (s) : (?<!\\((\\d{3})-(\\d{3})-(\\d{4}))\\d{3}|(\\d{3})-(\\d{
6359 : failed : failed : 0.192295473 (s) : ^\\(\\d{3}\\)\\s?-?\\d{3}\\-?\\d{4}$\"
6360 : unparsable : unparsable : 0.068122895 (s) : (?<area_code>\\d\\d\\d-\\d\\d-\\d\\d)|(?<area_code>\\d\\d\\d-\\
6361 failed : unparsable : 0 (s) : Please check your regex.
6362 failed : unparsable : 0 (s) : Please check your regex.
6363 : unparsable : unparsable : 0.081751668 (s) : (
6364 failed : unparsable : 0 (s) : Please check your regex.
6365 : failed : failed : 0.554810721 (s) : '
6366 : failed : error init : 0.121090444 (s) : ^
6367 : failed : failed : 0.366639499 (s) : \\
6368 : unparsable : unparsable : 0.107655253 (s) : (
6369 : failed : error init : 0.116433566 (s) : ^
6370 : failed : failed : 3.319531281 (s) : \"
6371 : failed : failed : 0.14991543 (s) : ^(?!&amp;)
6372 : failed : failed : 0.148848275 (s) : &amp;
6373 : failed : failed : 0.116102358 (s) : \"amp\"```pythonimport re
6374 : failed : failed : 0.803288763 (s) : &amp;lt; | &amp;gt; | &amp;nbsp; | &amp;#32;
6375 : failed : failed : 0.138435275 (s) : &amp;
6376 : failed : failed : 41.668473776 (s) : regex = '(?<!amp)\\s+|(?<!nbsp)\\s+|(?<=&nbsp)\\s+|(?<=&)\\s+(?<!amp)\\s+|(?<=amp)\\s+(?<!nbsp)\\s+
6377 : failed : failed : 0.13116954 (s) : \"amp
6378 : failed : failed : 0.273545634 (s) : \"amp&nbsp;\" and \"amp&#32;\".Explanati
6379 : failed : failed : 0.376463759 (s) : &amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;amp;&amp;amp;amp;amp;amp;amp;amp;amp;
6380 : failed : failed : 0.47561445 (s) : <(sed -n '/amp/,/amp/p' <(echo \"$description\"))
6381 : failed : failed : 1.148215784 (s) : /(\\d[\\da-f]{2})
6382 : unparsable : unparsable : 0.083885819 (s) : ^#[A-Fa-f0-9]{3}[A-Fa-f0-9]{3}[A-Fa-f0-9]{3}[A-Fa-f0-9]{
6383 : failed : failed : 0.191416589 (s) : ^[a-fA-F0-9]{3}\\#[a-fA-F0-9]{3}\\#[a-fA-F0-9]{3}$
6384 : failed : failed : 0.153401288 (s) : ^#0
6385 : failed : failed : 0.22828245 (s) : ^#([0-9a-fA-F]{3,8})$
6386 : failed : failed : 1.479921685 (s) : #(?=[0-9a-fA-F]{3})[0-9a-fA-F]{3}
6387 : unparsable : unparsable : 0.096864596 (s) : #(?=([0-9a-fA-F]{2})+)(?=([0-9a-fA-F]{2})+)(?=([0-9a-fA-F]{
6388 : unparsable : unparsable : 0.088754342 (s) : #([0-9a-f]{3}
6389 : failed : failed : 19.51133979 (s) : (1).*(\\d+?)\\s.*(\\d+)\\s.*(\\d+)
6390 : unparsable : unparsable : 0.073438936 (s) : #(0[xX][0-9a-fA-F]){3}(0[xX][0-9a-fA-F]){3}#[a-fA-F0-9]{
6391 : unparsable : unparsable : 0.100615059 (s) : ^(?=[^
6392 : unparsable : unparsable : 0.087340518 (s) : ^[0-9
6393 : unparsable : unparsable : 0.074125078 (s) : \"(AB|CD|
6394 : failed : error init : 0.136245621 (s) : ^
6395 : unparsable : unparsable : 0.083443331 (s) : ^(?P<
6396 : unparsable : unparsable : 0.095707282 (s) : (\\\\d+
6397 : unparsable : unparsable : 0.073677762 (s) : (?<!
6398 : unparsable : unparsable : 0.083010202 (s) : \\d*([
6399 : unparsable : unparsable : 0.089713536 (s) : d*[a-
6400 : failed : failed : 0.236098856 (s) : /^\\*\\
6401 : unparsable : unparsable : 0.080627036 (s) : ^(?!,)(0,?1,?
6402 : failed : failed : 0.128184548 (s) : ^(?=\\d+)
6403 : unparsable : unparsable : 0.082294073 (s) : [0-9]+(,[0-9]+
6404 failed : unparsable : 0 (s) : Please check your regex.
6405 : unparsable : unparsable : 0.072121442 (s) : [1-9][0-9]{
6406 : failed : failed : 3.065530844 (s) : \\d{1,}\\d{1,},\\
6407 : unparsable : unparsable : 0.070424218 (s) : (?<![^0-9, ])(
6408 : failed : failed : 2.303788996 (s) : \\d
6409 : unparsable : unparsable : 0.068861066 (s) : (?=([0-9]|[1
6410 : unparsable : unparsable : 0.07190071 (s) : var str = \"(?=\\d\\d+(
6411 : failed : failed : 2.301600814 (s) : (\\+91)?[0-9]{19,}
6412 : unparsable : unparsable : 0.064882747 (s) : [0-9]{3}[\\s.-]?[0-9]{3}[\\s.-]?[0-9]{5}[0-9]{2}[
6413 : failed : failed : 0.174758682 (s) : ^([+91 ]\\d{3})([\\d\\s]+)$
6414 : failed : failed : 0.382226124 (s) : ^[1-9][0-9]*[0-9]$
6415 : failed : failed : 1.986647958 (s) : ^\\+91\\s?[0-9][0-9]\\s?[0-9](\\s?[0-9][0-9])?$
6416 failed : unparsable : 0 (s) : Please check your regex.
6417 : failed : failed : 0.851374323 (s) : \\+91\\d+
6418 : failed : failed : 1.017515082 (s) : r\"^\\+91\\d+$\"
6419 : failed : failed : 0.810471233 (s) : \\+91[0-9]{9}
6420 : failed : failed : 0.478014647 (s) : [+919]\\d{3}-[0-9]{3}[-\\s]?[0-9]{3}
6421 : failed : failed : 3.848478773 (s) : ([0-9]{8}|SC[0-9]{5})
6422 : failed : failed : 2.966152577 (s) : sc|[SP]$|[A-Z]{2,}
6423 : unparsable : unparsable : 0.096840942 (s) : ([0-9]{8}[SC]{6}|[0-9]{8}[SC]|[0-9]{8}[
6424 : failed : failed : 0.604862527 (s) : [^12] (0-9) 6 ([0-9]|[A-Z])Generate a RegEx for this description. Answ
6425 : failed : failed : 0.208132564 (s) : ^[a-zA-Z0-9_]{8}$
6426 : unparsable : unparsable : 0.064276925 (s) : /\\b(
6427 : failed : failed : 0.132757759 (s) : ^S?C[0-9]{6}$Description of the Reg
6428 : failed : error init : 0.086968152 (s) : ^
6429 : failed : pumping failed : 87.697112981 (s) : ([0-9]+[SC])([0-9]+)
6430 : failed : failed : 1.036711083 (s) : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,10}$ This
6431 : unparsable : unparsable : 0.067128135 (s) : \\$([0-9]{1,}(,[0-9]{0,3
6432 : unparsable : unparsable : 0.119448934 (s) : ^[0-9]{1,3},[0-9]{3}[.,
6433 : failed : failed : 2.401241972 (s) : \\d+(?=,|$)
6434 : failed : failed : 0.23212749 (s) : $0-9, \\d{1,2}, \\d{3}\\.[\\d]
6435 : failed : failed : 0.344169786 (s) : [^\\d,]|[^,.]
6436 failed : unparsable : 0 (s) : Please check your regex.
6437 : unparsable : unparsable : 0.087102173 (s) : \\$(\\d{1,3}[,.]\\d{3}[,.]\\
6438 : failed : failed : 189.110792893 (s) : \\d+[\\d\\,\\.]*\\d*
6439 : failed : failed : 0.343592356 (s) : \\$[0-9]+,
6440 : unparsable : unparsable : 0.103406238 (s) : $1.*?[0-9]+(,[0-9]+)?(,[0-
6441 : failed : error init : 0.089715259 (s) : ^
6442 : failed : failed : 0.483812749 (s) : \"^(?=.{10}$)(?!.*[^0-9])(?=.*[0-9])[0-9]{10}$\"
6443 : failed : failed : 0.768214792 (s) : [8-9]{9}
6444 : failed : failed : 1.410760889 (s) : [\\d]{10}|\\d{9}
6445 : failed : failed : 8.186288935 (s) : \\b(8[0-9]{9}|9[0-9]{9}|9[0-9]{10}|9[0-9]{11})$
6446 : failed : failed : 168.630458896 (s) : (?=.{10})(?=\\d{8})\\d{8}(?=\\d{4}|$)
6447 : failed : failed : 1.783234186 (s) : ([0-9]{10}|\\s)*
6448 : failed : failed : 0.161428367 (s) : ^(?=[0-9]{1,10}$)\\d*$
6449 : unparsable : unparsable : 0.099975524 (s) : ^(?=?.)?[0-9]{10}$This expression will match a string that has exactly 10 digits.
6450 : failed : failed : 0.409515318 (s) : 9[2345]{15}
6451 : failed : failed : 0.259523825 (s) : The pattern is \"\\\\d{3}-\\\\d{3}-\\\\d{4}\".
6452 : failed : failed : 0.157617783 (s) : (1) \\d{3}-\\d{3}-\\d{4} or (2) \\d{4}-[\\d]{2}-[\\d]{2}
6453 : failed : failed : 5.462644146 (s) : [^0-9]*
6454 : failed : failed : 0.318597031 (s) : (You can generate your own answer)
6455 : unparsable : unparsable : 0.074629251 (s) : (?<!\\d)(?P<digits>[\\d]{3})-(?!\\d)(?P<digits2>[\\d]{3})-(?!\\d)(?P<digits3>[\\d]{3})Ex
6456 : unparsable : unparsable : 0.091782424 (s) : \"(\\d{3}-\\d{3}-\\d{4}|\\d{3})[-\\(\\)\\.]?(\\d{4})[-\\(\\)\\.]?(\\d{4})[-\\(\\)\\.]?(\\d{4
6457 : failed : failed : 1.802231958 (s) : \"^
6458 : unparsable : unparsable : 0.07139299 (s) : \"^[0-9]{15}\\-[0-9]{14}\\-[0-9]{13}\\[0-9]{12}\\-[0-9]{11}\\-[0-9]{10}\\-[0-9]{9}[
6459 : failed : failed : 1.02928055 (s) : (\\d{3}-\\d{3}-\\d{4})|(\\d{4}-\\d{3}-\\d{3})
6460 : failed : failed : 0.702105922 (s) : \"^\\d{3}-\\d{3}-\\d{4}$\"
6461 : failed : failed : 0.759219312 (s) : [a-z]\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}
6462 : unparsable : unparsable : 0.141300082 (s) : ip4_range = re.compile(r\"^(19[0-9]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.([0
6463 : unparsable : unparsable : 0.09286593 (s) : ip4_address\\s+([0-9]+\\.)\\s+([0-9]+\\.)\\s+([0-9]+\\.)\\s+([0-9]+\\.)\\s+([0-9]+
6464 : failed : failed : 122.605625857 (s) : `[0-9A-Fa-f]{1,4}\\.|[0-9A-Fa-f]{1,3}\\.|[0-9A-Fa-f]{1,2}\\.\\
6465 : failed : failed : 0.393230269 (s) : \"IP address that has a. or doesn't contain a. at the end\"
6466 : unparsable : unparsable : 0.110599398 (s) : ^[0-9]{0,3}\\.[0-9]{0,3}\\.[0-9]{0,3}\\.[0-9]{0,3}$|^[0-9]{1
6467 : failed : failed : 0.278249118 (s) : \\b(25(1[0-9]){3}\\.){3}25[0-9]{1}\\b
6468 : failed : failed : 0.141129423 (s) : \\b192.
6469 : failed : failed : 1.611590739 (s) : ip4 [a-zA-Z0-9]{1,3}\\. [a-zA-Z0-9]{1,3}\\. [a-zA-Z0-9]{1,3}
6470 : failed : failed : 0.491725414 (s) : \"^[0-9a-zA-Z\\.]+$\"
6471 : failed : failed : 0.748065506 (s) : ^\\d{7}$
6472 : failed : failed : 0.73034911 (s) : [00]{7}
6473 : failed : failed : 7.52221766 (s) : [A-Z][0-9]{5}
6474 : failed : failed : 0.267353305 (s) : (^\\d{7}$)
6475 : failed : failed : 1.133492455 (s) : [0-9]{7,}
6476 : failed : failed : 0.84632934 (s) : [0-9]{6,7}
6477 : failed : failed : 0.152302814 (s) : ^\\d{7}$
6478 : failed : failed : 0.892562947 (s) : ^\\d{7}$
6479 : failed : failed : 59.633549084 (s) : [0-9]{7}$
6480 : failed : failed : 0.775346536 (s) : ^[\\d]{7}$
6481 : unparsable : unparsable : 0.068741292 (s) : [a-zA-Z]\\d[a-zA-Z\\/]\\d{2}[a-zA-Z\\/
6482 : unparsable : unparsable : 0.064233914 (s) : /^(?P<month>\\d{1,2})[-/\\s](?P<day>\\d{1,2
6483 : unparsable : unparsable : 0.056869985 (s) : (?<!\\d)\\d{1,2}\\,(?<!\\d)\\d{1,2}\\-\\d{
6484 : unparsable : unparsable : 0.064464766 (s) : (?<!\\\\d)((0?[1-9]\\\\d|1\\\\d|2\\\\d|3\\\\d|
6485 : unparsable : unparsable : 0.055054601 (s) : /([0-9]|1[0-9]|2[0-4])[/-][0-9]{4}[/-
6486 : unparsable : unparsable : 0.077780704 (s) : (any of the three) \"^([0-2]\\d|0[1-9]|[3][0-9]|3
6487 : failed : failed : 23.022387009 (s) : [^/][a-zA-Z]{3}$
6488 : unparsable : unparsable : 0.071263508 (s) : ((?=0?[1-9])[0-9]\\d{1,2}
6489 : failed : failed : 1.202818159 (s) : %m/(0?[1-9]|1[0-2]|[02])/[0-9]{4}
6490 : unparsable : unparsable : 0.071432153 (s) : (\\d{2}[-/ \\t\\d]{3}[-/ \\t\\d]{4}|[-/
6491 failed : unparsable : 0 (s) : Please check your regex.
6492 : unparsable : unparsable : 0.079484009 (s) : [
6493 failed : unparsable : 0 (s) : Please check your regex.
6494 : failed : failed : 1.61583248 (s) : \\
6495 failed : unparsable : 0 (s) : Please check your regex.
6496 : failed : error init : 0.119103088 (s) : ^
6497 failed : unparsable : 0 (s) : Please check your regex.
6498 : failed : failed : 3.759363837 (s) : \\
6499 : failed : failed : 1.464953537 (s) : /
6500 : unparsable : unparsable : 0.092024416 (s) : [
6501 : unparsable : unparsable : 0.071731223 (s) : [0-9a-zA-Z]{1,3}[0-9a-zA-Z]{1,3}[0
6502 : failed : error init : 0.081299574 (s) : ^
6503 : unparsable : unparsable : 0.085788246 (s) : \\b([1-9][0-9]|1[0-2])\\.[1-9]{1,3}\\.[1-9]{
6504 : unparsable : unparsable : 0.053532535 (s) : [a-z0-9]|[a-z0-9][a-z0-9]|[a-z0-9][0
6505 : unparsable : unparsable : 0.094974362 (s) : [0-9a-zA-Z]{2}[0-9a-zA-Z]{1}[0-9a-z
6506 : unparsable : unparsable : 0.094305081 (s) : (/^(([1-9][0-9]{0,2}|1[0-9]2[0-9]|2[0-
6507 : unparsable : unparsable : 0.102324696 (s) : \"(?<=\\\\d{1,3}\\\\.)(\\\\d{1,3}\\\\.)(\\\\d{1,3}\\\\.)(\\\\
6508 : failed : failed : 1.630220963 (s) : (r'\\b^(?!0*0+$).*')
6509 failed : unparsable : 0 (s) : Please check your regex.
6510 : failed : failed : 0.126915256 (s) : import re
6511 failed : unparsable : 0 (s) : Please check your regex.
6512 failed : unparsable : 0 (s) : Please check your regex.
6513 failed : unparsable : 0 (s) : Please check your regex.
6514 : failed : error init : 0.098346948 (s) : ^
6515 failed : unparsable : 0 (s) : Please check your regex.
6516 failed : unparsable : 0 (s) : Please check your regex.
6517 failed : unparsable : 0 (s) : Please check your regex.
6518 failed : unparsable : 0 (s) : Please check your regex.
6519 failed : unparsable : 0 (s) : Please check your regex.
6520 failed : unparsable : 0 (s) : Please check your regex.
6521 : failed : failed : 1.304142495 (s) : x[0-9]\"\"\"
6522 : failed : failed : 2.033120682 (s) : \\d{1,3}
6523 : failed : failed : 0.199598318 (s) : {3,10}```
6524 : failed : failed : 1.91340055 (s) : (\\d)\\d
6525 : failed : failed : 1.437984461 (s) : r\"\\d{1,10}\\b\"
6526 : failed : failed : 0.596188439 (s) : (0-9)(1-9)Exercise
6527 : failed : failed : 0.68184097 (s) : \"^(?!0)(?!1)(?!2)(?!3)(?!4)(?!5)(?!6)(?!7)(?!8)(?!9)(?!10)1-10$\"
6528 : failed : failed : 0.689044059 (s) : r'^[1-9]+$'
6529 : failed : failed : 41.820033672 (s) : [digit]{1,3}[0-9]|[1-9][0-9]\\d|[1-9]\\d[0-1]
6530 : failed : failed : 3.060808484 (s) : [1-10]
6531 : failed : failed : 0.14827852 (s) : ([A-Za-z])
6532 : failed : failed : 0.13792437 (s) : ^[A-Za-z]$
6533 : failed : failed : 9.843901915 (s) : B|a
6534 : failed : failed : 0.849855623 (s) : [a-zA-Z]\\Z
6535 : failed : failed : 1.641283117 (s) : .[a-zA-Z]? - one letter in the range A-Z or a-z
6536 : failed : failed : 0.704050067 (s) : [AB][a-z]\"\"\"
6537 : failed : failed : 2.472359107 (s) : (\\b[A-Z]\\w?\\b|\\b[a-z]\\w?\\b)
6538 : failed : failed : 6.201467853 (s) : [a-z]|[A-Z]
6539 : failed : failed : 1.641302463 (s) : [a-zA-Z]
6540 : failed : failed : 1.749557979 (s) : [A-Za-z]
6541 : failed : failed : 3.745141063 (s) : \"
6542 : failed : failed : 0.601635183 (s) : \"^[^\\s\\d\\.-]*$\"
6543 : unparsable : unparsable : 0.076800611 (s) : ```[^]*\\s*#\\s*```
6544 : failed : pumping failed : 169.409196403 (s) : [^\\*#]* # matches the beginning of the string (it doesn't match the beginning of a word)
6545 : unparsable : unparsable : 0.07682104 (s) : - \"# renaming some primary keys\"- /**/
6546 : failed : failed : 0.198876217 (s) : r'^\\*\\s*([\\w\\s]*)\\s*(.+)\\s*$'
6547 : failed : pumping failed : 5.094854607 (s) : (?<!\\\\d)\\*(?<!/)\\*(?<!#)\\*/(?<![^()\\\\s\\\\/])*
6548 : failed : failed : 19.935161149 (s) : \"([A-Za-z_][A-Za-z0-9_]*)\"
6549 : failed : failed : 2.677050667 (s) : [^\\s]+
6550 : failed : failed : 0.617939018 (s) : \"^[^\\s]*[^-\\s]*[^_]+$\"
6551 : failed : failed : 39.873263296 (s) : ([0-9A-Fa-f]{6}[0-9]{2}[0-9]{2})
6552 : failed : failed : 2.425394231 (s) : ^(?=.*#)(?=.*[A-Fa-f0-9])[A-Fa-f0-9]+$
6553 : failed : failed : 1.374034859 (s) : \\#[0-9A-Fa-f]{6}
6554 : failed : failed : 0.128459603 (s) : ^[a-f0-9]{6}$
6555 : unparsable : unparsable : 0.111473682 (s) : ^(#[a-fA-F0-9]{6}|[a-fA-F0-9]{3}[a-fA-F0-9]{3}[a-fA-F0-
6556 : failed : failed : 0.134024698 (s) : ^#[A-Fa-f0-9]{6}$
6557 : failed : failed : 0.514236796 (s) : ^#[0-9a-fA-F]{7}$
6558 : failed : failed : 0.152155248 (s) : ^[a-zA-Z0-9]{6}$
6559 : failed : failed : 0.160003173 (s) : ^[0-9A-Fa-f][0-9A-Fa-f]{6}$
6560 : failed : failed : 1.561134897 (s) : #(?!00)0[0-9a-fA-F]{6,}
6561 : unparsable : unparsable : 0.057575464 (s) : (
6562 : unparsable : unparsable : 0.085703428 (s) : +
6563 : failed : failed : 3.102925555 (s) : \\
6564 failed : unparsable : 0 (s) : Please check your regex.
6565 failed : unparsable : 0 (s) : Please check your regex.
6566 : failed : failed : 0.187229871 (s) : \"
6567 : failed : failed : 2.537737881 (s) : @
6568 : failed : failed : 2.78605924 (s) : \"\\
6569 failed : unparsable : 0 (s) : Please check your regex.
6570 : unparsable : unparsable : 0.081207861 (s) : [
6571 : failed : failed : 1.465673274 (s) : [0-9]{6}
6572 : failed : failed : 0.173899306 (s) : ^[0-9]*$
6573 : failed : failed : 1.813079882 (s) : [^0-9]0*2. Write a regular expression for this descripti
6574 : failed : failed : 0.396137224 (s) : \\b(?!000)([0-9]{4,5})[0-9]{3}([0-9]{2})
6575 : failed : failed : 0.481491018 (s) : Reg
6576 : failed : failed : 0.181008568 (s) : ^\\d{6}$
6577 : failed : failed : 0.126824014 (s) : ^[1-9]\\d{2}
6578 : failed : failed : 1.332911509 (s) : [^000]\\d{6}
6579 : failed : failed : 0.92815593 (s) : \\d{6}\"\"\"
6580 : failed : failed : 0.642020106 (s) : \\d{6}?
6581 : unparsable : unparsable : 0.05933261 (s) : /^[-\\p{L}\\p{M}]?[-\\p{L}\\p{M}]?\\d{2}[-\\p{L}\\p{M}]?$/  **
6582 : failed : failed : 0.61115816 (s) : ^\\d{4}[\\s-](\\d\\d\\d)$
6583 : failed : failed : 0.525464941 (s) : \"^(?!00)\\d{9} \\d{2}$\"
6584 : unparsable : unparsable : 0.106290752 (s) : ([1]\\d{2})\\s?([1]\\d{3})\\s?([1]\\d{3})\\s?([1]\\d{3})''')def postal_code(
6585 : unparsable : unparsable : 0.09413865 (s) : \"(^[a-zA-Z0-9 ]{5}[a-zA-Z0-9 ]{3}[a-zA-Z0-9 ]{3}[a-zA-Z0
6586 : failed : failed : 1.01500076 (s) : ([01]?[0-9]{3}[- ]?[0-9]{2}[0-9]{2})
6587 : unparsable : unparsable : 0.075048635 (s) : ([0-9]{3}[-.])?([0-9]{2}[-.])?([0-9]{2})[- ]?[0-9]{2}[- ]?[0-9
6588 : failed : pumping failed : 228.912586503 (s) : [^a-zA-Z0-9]*[0-9][^a-zA-Z0-9]*
6589 : failed : failed : 0.674710508 (s) : \"[0-9]{4} [A-Z][A-Z] [0-9]{2}[A-Z]?\"
6590 : failed : failed : 1.698983585 (s) : (?<!\\d)\\d{2}\\s?[A-Z]{3}
6591 : failed : failed : 0.612663964 (s) : \"^[A-Z]{3}-\\d{5}$\"
6592 : failed : failed : 1.237649547 (s) : \\d{5}-\\d{3}-\\d{4}
6593 : failed : failed : 0.21005037 (s) : H\\d{4}-\\d{5}
6594 failed : unparsable : 0 (s) : Please check your regex.
6595 : failed : failed : 0.220135778 (s) : ^[A-Z][a-z]{2}[A-Z][0-9]{8}[A-Z]$
6596 : failed : pumping failed : 31.912910363 (s) : \"(.*?)(?![A-Z]).*(?![0-9])\"
6597 : failed : failed : 0.256066501 (s) : ^[A-Z]{3}[0-9]{6}$
6598 : failed : failed : 0.944766977 (s) : [\\d]{3}[-\\s]?[\\d]{3}[-\\s]?[\\d]{4}
6599 : failed : failed : 0.577418863 (s) : \\d[A-Z]{2}\\d{8}
6600 : failed : failed : 0.416824355 (s) : \"^[A-Z0-9]{6}-[A-Z0-9]{4}-[A-Z0-9]{3}-[A-Z0-9]{2}-[A-Z0-9_]
6601 : failed : failed : 0.355382181 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6602 : failed : failed : 0.241908298 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6603 : failed : failed : 0.430422831 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6604 : failed : failed : 0.465195339 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6605 : failed : failed : 0.234703487 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6606 : failed : failed : 0.212623973 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6607 : failed : failed : 0.206177118 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6608 : failed : failed : 0.165473231 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6609 : failed : failed : 0.222632737 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6610 : failed : failed : 0.305709072 (s) : Validates US vehicle identification number (VIN). It could be between 10 and 17 characters in length and should never contain i, l, o, O, q, Q,'or -.Match exampl
6611 : failed : failed : 0.351271765 (s) : `^[\\d ]+?[a-z][\\d ]
6612 : failed : failed : 2.087505851 (s) : \\b
6613 : unparsable : unparsable : 0.116944492 (s) : (\\d{1}[\\s\\d\\S]*(
6614 : failed : failed : 3.67963444 (s) : \"^
6615 : unparsable : unparsable : 0.077432523 (s) : /(^[A-Za-z0-9]+[^
6616 : failed : failed : 1.439749832 (s) : (\\d+)\\s*[\\w\\-\\(\\)]*\\
6617 : unparsable : unparsable : 0.05438072 (s) : ^(?!.*[A-Za-z][A-Z
6618 : failed : failed : 4.290410494 (s) : [^A-Za-z0-9 ]
6619 : failed : failed : 1.035894326 (s) : /(?<address>\\d+)
6620 : failed : failed : 0.782249845 (s) : r'^\\s*[^\\W\\d\\s]*
6621 : failed : failed : 0.859915834 (s) : \"([0-9][0-9])([0-5][0-9])[0-9]$\"
6622 : failed : failed : 7.545934846 (s) : \"0700-[A-Z][0-9]{3}-1530|1130-[A-Z][0-9]{3}-2310|Closed\"
6623 : failed : failed : 0.135798705 (s) : This is an \"Open\" case.
6624 : unparsable : unparsable : 0.081196551 (s) : \"^([0-9]{1,2})([0-9]{2
6625 : unparsable : unparsable : 0.055283819 (s) : \\([0-9]|[1-2][0-9]|3[0-5][0-9]|6[0-9]\\))
6626 : unparsable : unparsable : 0.076194869 (s) : ((((0[1-9]|1[012])[0-9]|2[0-3])([0-5]?[0-9])?[0-9]|(6[0-9])([0-6]?[0-9])
6627 : failed : failed : 0.15866457 (s) : \\d{4}-\\d{2}-\\d{2}This is the explanation of the RegEx.
6628 : failed : failed : 0.851841877 (s) : \\d{6}-\\d{2}
6629 : failed : failed : 0.194923356 (s) : \"([12]\\d{2})/([0-2]\\d{2})\"Here's my co
6630 : failed : failed : 0.527541743 (s) : \\d{4}-\\d{2}-\\d{2}\\s-?\\d{2}-?\\d{2}\\s\\w{1,2}
6631 : failed : failed : 1.512889057 (s) : \"([0-9]{2})/([0-9]{2})/([0-9]{4})$\"
6632 : failed : failed : 0.702197353 (s) : \\d{2}-?\\d{2}-?\\d{4}
6633 : failed : failed : 0.816356296 (s) : \\d+-\\d+-\\d+-\\d+
6634 : unparsable : unparsable : 0.12026471 (s) : ^([0-9]{1,2}[-/][0-9]{1,2}[-/][0-
6635 : unparsable : unparsable : 0.080405983 (s) : (0[1-9].|1[012])[- /.] [0-2][0-9]//[0-
6636 : failed : failed : 0.304209679 (s) : (0-9\\\\d\\\\d)-(0-9\\\\d)-(0-9\\\\d)
6637 : unparsable : unparsable : 0.073506952 (s) : (^|[^\\w])([0-9]{2}/[0-9]{2}/[0-9
6638 : failed : failed : 0.781738779 (s) : \\d{2}\\/\\d{2}\\/\\d{4}
6639 : unparsable : unparsable : 0.098152705 (s) : [^0-9A-Za-z ]* ([0-9][0-9])-(0[0-9]|
6640 : unparsable : unparsable : 0.059174003 (s) : \\d{1,2}[/\\-\\.]\\d{1,2}[/\\-\\.]\\d{4}\\I used [
6641 : failed : failed : 0.325124986 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6642 : failed : failed : 0.313796885 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6643 : failed : failed : 0.297845479 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6644 : failed : failed : 0.349817857 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6645 : failed : failed : 0.328010281 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6646 : failed : failed : 0.39238569 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6647 : failed : failed : 0.280283672 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6648 : failed : failed : 0.322476344 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6649 : failed : failed : 0.30353128 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6650 : failed : failed : 0.222366199 (s) : Will match any web path that's supposed to start in the root (e.g. with \"/\" in front of it.)Match exampl
6651 : failed : failed : 1.709403599 (s) : \\
6652 : unparsable : unparsable : 0.060585432 (s) : (
6653 failed : unparsable : 0 (s) : Please check your regex.
6654 failed : unparsable : 0 (s) : Please check your regex.
6655 : unparsable : unparsable : 0.072126171 (s) : (
6656 failed : unparsable : 0 (s) : Please check your regex.
6657 failed : unparsable : 0 (s) : Please check your regex.
6658 : unparsable : unparsable : 0.067688624 (s) : (
6659 failed : unparsable : 0 (s) : Please check your regex.
6660 : failed : error init : 0.106452123 (s) : ^
6661 : failed : failed : 1.325086265 (s) : \"\\w+@\\w+\\.\\w+\"
6662 : unparsable : unparsable : 0.062543463 (s) : [a-zA-Z0-9._-]+@[a
6663 : failed : failed : 10.140579931 (s) : ^[^@]+@[^@]+\\.[^@]+$
6664 : unparsable : unparsable : 0.123433164 (s) : [a-zA-Z0-9_.+-]+@[
6665 : unparsable : unparsable : 0.073345862 (s) : ^(([a-zA-Z0-9]+[._-
6666 : unparsable : unparsable : 0.08663545 (s) : [^a-zA-Z0-9.-]+@[
6667 : unparsable : unparsable : 0.075650861 (s) : [^a-zA-Z0-9_-.]+
6668 : unparsable : unparsable : 0.096146264 (s) : [A-z0-9\\.-]+@(\\w+\\.[
6669 : failed : failed : 0.803055927 (s) : /^[a-zA-Z0-9._-]+@
6670 : unparsable : unparsable : 0.076641804 (s) : (abc|abd|a2b_cd3-2fg.
6671 : failed : failed : 0.158503769 (s) : ^(?=.\\d*$)[\\d.,]+(?!\\.$)$
6672 : failed : failed : 0.172356711 (s) : \"^[1-9][0-9]*\\.[0-9]*$\" would match numbers with at least one digit on either side of the decimal point.
6673 : failed : failed : 0.238279513 (s) : \"\\d+\\.\\d+\"
6674 : failed : failed : 26.252617766 (s) : (?<![0-9])\\.?(?<![0-9])[0-9]+.?[0-9]*
6675 : failed : failed : 0.747433175 (s) : ^[0-9]*\\.[0-9]+$
6676 : failed : failed : 0.172708949 (s) : ^(\\\\d\\\\d?)\\\\.(\\\\d\\\\d?)$
6677 : failed : failed : 6.137151595 (s) : (\\d{1,2}\\.\\d{2})
6678 : failed : failed : 0.802246184 (s) : \\.([a-zA-Z0-9_]+)
6679 : failed : failed : 0.586001561 (s) : [0-9]+.[0-9]*
6680 : failed : failed : 0.324536175 (s) : \\d 2. In the following sentence, create a RegEx that matches any words that start with \"a\", end with \"z\", and have between two and six characters. Ignore capitalization. - The quick brown fox jumps over the lazy Dog. Answ
6681 : failed : failed : 0.252707571 (s) : ^(?=\\d{1,4} (,|\\. )?$)
6682 : failed : failed : 2.71015254 (s) : \\d{1,3}
6683 : failed : failed : 0.339062256 (s) : Matches numbers. May include decimals, thousands separators, and sign. Match exampl
6684 : failed : failed : 0.239322002 (s) : ^[-+]?[0-9]{1,3}(,|\\.)[0-9]{3}(,|\\.)$
6685 : failed : failed : 26.37813713 (s) : (^\\d\\d,?\\d.*?\\d\\d?)
6686 : failed : failed : 0.278634268 (s) : \\d{1,3}\\.\\d{3}- Match numbers with an optional decimal. May include commas as a thousands separator. May include negative signs.Match exampl
6687 : unparsable : unparsable : 0.094441576 (s) : \\d{,4}(\\.\\d{,2})?
6688 : failed : failed : 0.102098042 (s) : [^\\d,.]
6689 : unparsable : unparsable : 0.059436204 (s) : (regex) (\\d+\\.\\d+|\\d{1,3}.\\d{3}|\\d{1,3}.\\d{,3}|\\d{1,3}.\\d{,3},\\d
6690 : failed : failed : 0.589412739 (s) : \"^[0-9]{1,3}(,|\\.)[0-9]{3,}(.0)?$\"3. Example
6691 : failed : failed : 1.223426813 (s) : (?!^)\\d{9}$
6692 : failed : failed : 0.139766394 (s) : (?<!\\d)(9\\d{9}9)?
6693 : failed : failed : 0.199558252 (s) : ^9[0-9]{8}$
6694 : failed : failed : 8.143867335 (s) : (?<!^)(9(?=[0-9]))(9(?=[0-9]))(9(?=[0-9]))
6695 : unparsable : unparsable : 0.063196825 (s) : ^(?=.{10,}$)(?=.{9}[^6]{1}$)(?=.{9}[^0]{1}$)(?
6696 : failed : failed : 1.793499461 (s) : ([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{3})
6697 : failed : failed : 0.144295272 (s) : ^9\\d{9}$
6698 : failed : failed : 0.4764648 (s) : r'^\\d{9}$'
6699 : failed : failed : 0.148922824 (s) : ^[0-9]{9}
6700 : failed : failed : 0.575592618 (s) : \\[\\d{1,5}\\].{1,10}
6701 : failed : failed : 21.480950232 (s) : [a-z]{2}\\D\\d
6702 : failed : failed : 8.762337235 (s) : [^A-Z]\\\\w+[A-Z]
6703 : failed : failed : 0.151330697 (s) : ^[a-zA-Z]{2}\\s?[0]$
6704 : failed : failed : 0.135717193 (s) : ^[a-zA-Z0-9]{1}\\s[a-zA-Z0-9]{1}$
6705 : failed : failed : 15.381623431 (s) : ([A-Z]{3})-[A-Z]{2}$
6706 : failed : failed : 0.146494214 (s) : \"NM\"
6707 : failed : failed : 0.143824612 (s) : ^[a-z]{2}
6708 : failed : failed : 0.120889708 (s) : [RegEx]
6709 : failed : failed : 0.152352127 (s) : \\b[A-Fa-f]{2}[A-Fa-f]\\B (i.e., 2 uppercase, 1 lowercase letters, 1 space)
6710 : unparsable : unparsable : 0.072331865 (s) : [Reg
6711 : failed : failed : 0.318675517 (s) : YYYYMMDD-\\d{3}-\\d{4}-\\d
6712 : unparsable : unparsable : 0.10068507 (s) : ^[0-9]{8}-[0-9]{2}-[0-
6713 : unparsable : unparsable : 0.056923085 (s) : ^(19|20)\\d{9}-(1\\d{2})-(\\d
6714 : failed : failed : 0.125320353 (s) : YYMMDD-99-9999-0A-5567
6715 : unparsable : unparsable : 0.070577064 (s) : /^[0-9]{8}-[0-9]{2}-[0
6716 : unparsable : unparsable : 0.06740329 (s) : [012-0-9]{5}-[012-9]{2}[
6717 : unparsable : unparsable : 0.061007842 (s) : \\b(\\d{4}-\\d{2}-\\d{2}\\-
6718 : unparsable : unparsable : 0.074927058 (s) : YYYYMMDD-99-9999[0-9]{3}[A-
6719 : unparsable : unparsable : 0.080155805 (s) : [\\d]{4}|[0-9]{2}[0-9
6720 : failed : failed : 1.696684807 (s) : [0-9]{4}[-]?[0-9]{2}
6721 failed : unparsable : 0 (s) : Please check your regex.
6722 : failed : failed : 2.048977621 (s) : \\b(V|E)\\d{1,2}\\.(\\d{1,2})\\b
6723 : failed : failed : 0.175710222 (s) : E\\d\\d.\\d\\d
6724 : failed : failed : 6.200790797 (s) : E123.?[0-9]? | V123.?[0-9]?
6725 : failed : failed : 3.598289482 (s) : - E\\d{3}\\.\\d{1,2}- V\\d{3}\\.\\d{1,2}|\\
6726 : failed : failed : 0.678308696 (s) : ^E\\d{1,2}\\.\\d{1,2}$
6727 : failed : failed : 0.179993911 (s) : ^[Ee]\\d{1,3}\\.(\\d{1,2})$
6728 : failed : failed : 3.06588716 (s) : [123]\\d\\d\\d(\\.(\\d{1,2}))?\"\"\"
6729 : failed : failed : 0.531151482 (s) : ^[E1][0-9]\\.[0-9][0-9]$
6730 : unparsable : unparsable : 0.062240066 (s) : \\d+\\.\\d{,2}$
6731 : failed : failed : 2.40936433 (s) : \\d\\d[A-Z]\\d[A-Z]\\d
6732 : failed : failed : 1.048735787 (s) : \\d{4}[A-Z]
6733 : failed : failed : 0.12092263 (s) : CPT_REGEX
6734 : failed : failed : 0.202202597 (s) : ^[0-9A-F]{5}$
6735 : failed : failed : 0.191127538 (s) : [A-Z][0-9]{4}[0-9] 3. Write a RegEx to match a phone number that is divided into 10 parts, separated by dots. Answer
6736 : failed : failed : 0.258390706 (s) : (1 - 4) followed by (a - z) or (0 - 9) followed by (0 - 5)
6737 : failed : failed : 14.504569122 (s) : [a-z][a-z0-9][0-9]
6738 : failed : failed : 0.12855968 (s) : ^[A-Z][0-9]{1,4}$
6739 : failed : failed : 3.504783715 (s) : (?<=\\w)(?=\\d)(?=\\D)\\d(?=\\W)
6740 : failed : failed : 14.834247592 (s) : [A-Z][0-9]{2}
6741 : failed : failed : 0.193145552 (s) : ^[\\d_-]{4,10}$
6742 : failed : failed : 5.338686641 (s) : \\b[a-zA-Z0-9._.-]{4,10}\\
6743 : failed : failed : 0.131715621 (s) : ^[a-zA-Z0-9._.-]{4,10}
6744 : failed : failed : 0.190288851 (s) : ^[0-9a-zA-Z._.-]{1,10}$
6745 : unparsable : unparsable : 0.100926281 (s) : [a-zA-Z][a-zA-Z0-9_.-]{
6746 : unparsable : unparsable : 0.091623747 (s) : [a-zA-Z0-9][a-zA-Z0-9._
6747 : failed : failed : 0.744475644 (s) : \"^[a-zA-Z0-9_.-]+$\"
6748 : failed : failed : 0.171726192 (s) : [^0-9a-zA-Z\\._.-]
6749 : unparsable : unparsable : 0.077824175 (s) : (^(?=.*[a-zA-Z])(?=.*[~!
6750 : unparsable : unparsable : 0.072107817 (s) : ^[0-9]\\d[a-zA-Z._.-]{0,
6751 : failed : failed : 4.702929358 (s) : [1-9]\\
6752 : unparsable : unparsable : 0.077189238 (s) : \"^[01-9]\\d\
6753 : unparsable : unparsable : 0.075731181 (s) : ^(\\d{1,2
6754 : unparsable : unparsable : 0.086516207 (s) : /^([01]\\d|2[0-3
6755 : unparsable : unparsable : 0.079205808 (s) : ^(0[1-9]|1[012])[0-9]{
6756 : unparsable : unparsable : 0.099226032 (s) : (0, 1), (1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10
6757 : unparsable : unparsable : 0.073768742 (s) : \"\\d{1,
6758 failed : unparsable : 0 (s) : Please check your regex.
6759 : unparsable : unparsable : 0.047579804 (s) : \\d{
6760 : unparsable : unparsable : 0.085383359 (s) : ^(0[1-9]|1[0-2
6761 : unparsable : unparsable : 0.063567558 (s) : (?<!\\d*[,.])(?<!\\d*[.][,.])(?!\\d+[,.])(?!\\.\\d+)(?!$)How do I test and apply this RegEx in
6762 : failed : failed : 1.26764412 (s) : \"0-9,\\d{1,2}([,.]\\d{0,2})*\"
6763 : failed : failed : 0.221808415 (s) : ^(\\d+)(,\\s*\\d+)?$
6764 : failed : failed : 15.848604198 (s) : [0-9\\.]{3}I like th
6765 : failed : failed : 0.312403339 (s) : ^0*(\\d{1,2}|1[0-9]\\d|100[0-9])$
6766 failed : unparsable : 0 (s) : Please check your regex.
6767 : failed : failed : 1.643941488 (s) : (\\d{3,3})(\\,\\d{3})?
6768 : failed : failed : 0.63186732 (s) : r'^
6769 : failed : failed : 19.620673581 (s) : .{1,3}[,]?\\d+.?\\d?|\\d{1,3}.\\d+\"\"\"
6770 : failed : failed : 0.608689533 (s) : ^\\d{4}-\\d{3}-\\d{2}(,\\d{3})?$
6771 failed : unparsable : 0 (s) : Please check your regex.
6772 : failed : failed : 3.128884492 (s) : \\d{1,100}
6773 : failed : failed : 0.398762673 (s) : [0-9]+[0-9]*
6774 : failed : failed : 0.74328611 (s) : [1-9][0-9]*[0-9]
6775 : failed : failed : 0.288169748 (s) : [1-9][0-9]*\"\\d*\"I'm trying to solve a problem where I am trying to find all the strings that contain a \"3\" and the rest of the numbers are equal to zero. So for example, \"21\" returns true, \"
6776 : failed : failed : 1.142782185 (s) : \\d+
6777 : unparsable : unparsable : 0.105252671 (s) : (0 or more numbers, possibly with leading zeros and/or multiple zeros, must be greater than 0)1[0-9]*1[0-9]{1}1[0-9]{2}1[0-9]{
6778 : failed : failed : 0.867564115 (s) : ^[1-9](\\d*)?$
6779 : failed : failed : 0.877779294 (s) : \"^([1-9]|[1-9][0-9]|1[0-9]{2}|[1-9]\\d{1,2}|[1-9]\\d{1,3})$\"
6780 failed : unparsable : 0 (s) : Please check your regex.
6781 : failed : failed : 0.17032919 (s) : \\d{3}-\\d{3}-\\d{4} |
6782 : unparsable : unparsable : 0.071365188 (s) : ^\\(?[0-9]{1,3}\\)?[-0
6783 : unparsable : unparsable : 0.079950721 (s) : /^\\+?\\d{3}[-\\s]?\\d{
6784 : unparsable : unparsable : 0.094355005 (s) : [0-9]{3}[6-9][0-9]{
6785 : unparsable : unparsable : 0.077376328 (s) : \\d{3}[-\\s]\\d{3}[-\\
6786 : unparsable : unparsable : 0.063992813 (s) : ([0-9]{3})-([0-9]{3})-([
6787 failed : unparsable : 0 (s) : Please check your regex.
6788 : unparsable : unparsable : 0.081436429 (s) : (?is)(^\\+?[1-9]\\d{3}(-
6789 : unparsable : unparsable : 0.072997821 (s) : ^\\+\\d{3}\\-\\d{3}\\-\\d{
6790 : unparsable : unparsable : 0.067099963 (s) : (^\\+\\d{3}\\s\\d{3}\\-\\d
6791 : failed : failed : 15.154654286 (s) : [1-9][0-9]?%
6792 : failed : failed : 0.156042197 (s) : (\\d%\\d)?
6793 : failed : failed : 1.355053578 (s) : [0-9][0-9.[0-9]]|\\.
6794 : failed : failed : 3.69114392 (s) : [0-9]%
6795 : failed : error init : 0.148715547 (s) : (?<!%)
6796 : failed : failed : 0.513358333 (s) : ^(\\d{1,2})(\\.\\d{1,2})?%$
6797 : failed : failed : 1.039166415 (s) : r\"\\d{0,2}%\"
6798 : failed : failed : 7.289664314 (s) : [0-9]{1}\\\\%
6799 : failed : failed : 0.297234857 (s) : ^0*\\d*[%]$
6800 : failed : failed : 4.727053205 (s) : 0?%[.]?
6801 : failed : failed : 0.427486291 (s) : To generate a RegEx for this description, the pattern should match the format of a date in XX.YY.ZZ format.
6802 : failed : failed : 0.240431336 (s) : ^(\\d{2})\\.(\\d{2})\\.(\\d{4})$
6803 : unparsable : unparsable : 0.074138303 (s) : ((\\d{2})-(\\d{2})-(\\d{4})
6804 : failed : failed : 3.231575453 (s) : \\d{1,2}\\.\\d{1,2}\\.\\d{2,4}
6805 : failed : failed : 0.920302023 (s) : (1) /
6806 : failed : failed : 0.258316278 (s) : ^\\d{1,2}\\.\\d{1,2}\\.\\d{1,2}$
6807 : failed : failed : 0.365162608 (s) : ^\\d{1,2}\\.(\\d{1,2}\\.){1,3}\\d{1,2}$
6808 : failed : failed : 0.215144024 (s) : ^(0[1-9]|[12][0-9]|3[01])\\.\\.(0[1-9]|1[012])\\.\\.([0-9]{4})
6809 : failed : failed : 0.534318695 (s) : \\d{1,2}\\.\\d{1,2}\\.\\d{4}---
6810 : failed : failed : 7.189629379 (s) : [0-9]{1,2}\\.\\d{1,2}\\.\\d{1,3}
6811 : unparsable : unparsable : 0.088782766 (s) : [
6812 : failed : failed : 3.167886448 (s) : /
6813 : unparsable : unparsable : 0.083962512 (s) : [
6814 : failed : error init : 0.109810363 (s) : ^
6815 : failed : failed : 0.181781183 (s) : /
6816 : unparsable : unparsable : 0.065675108 (s) : (
6817 : failed : failed : 0.298734521 (s) : /
6818 : failed : failed : 0.149267419 (s) : /
6819 : failed : error init : 0.10332191 (s) : ^
6820 failed : unparsable : 0 (s) : Please check your regex.
6821 failed : unparsable : 0 (s) : Please check your regex.
6822 : unparsable : unparsable : 0.088335188 (s) : (
6823 : failed : failed : 0.491173052 (s) : \\
6824 failed : unparsable : 0 (s) : Please check your regex.
6825 : unparsable : unparsable : 0.069595238 (s) : [
6826 : unparsable : unparsable : 0.068736223 (s) : (
6827 failed : unparsable : 0 (s) : Please check your regex.
6828 : unparsable : unparsable : 0.070748415 (s) : [
6829 : failed : error init : 0.099301233 (s) : ^
6830 failed : unparsable : 0 (s) : Please check your regex.
6831 : unparsable : unparsable : 0.107612363 (s) : (?P<yyYYMM
6832 : unparsable : unparsable : 0.095677967 (s) : /^[2-9][12][
6833 : unparsable : unparsable : 0.078636574 (s) : \\d{4}-(\\d{
6834 : failed : failed : 0.651828834 (s) : \\d{4}/\\d
6835 : unparsable : unparsable : 0.056563382 (s) : (excel)^\\d{
6836 : unparsable : unparsable : 0.07321687 (s) : [0-9]0?[
6837 : failed : failed : 0.150558483 (s) : regex = lambda
6838 : unparsable : unparsable : 0.06754771 (s) : (0[1-9]|1
6839 : unparsable : unparsable : 0.093366656 (s) : \\d{4}/\\d{
6840 : unparsable : unparsable : 0.076808135 (s) : \\d{4}-\\d{
6841 : unparsable : unparsable : 0.052537204 (s) : \\d{4}/\\d{
6842 : unparsable : unparsable : 0.099645195 (s) : \\d{4}/\\d{1
6843 : unparsable : unparsable : 0.088966007 (s) : /^(0[1-9]
6844 : unparsable : unparsable : 0.103461923 (s) : (\\d\\d/\\d\\d
6845 : failed : failed : 0.740634963 (s) : \\d{1,2} /\\d
6846 : unparsable : unparsable : 0.072118326 (s) : ((?P<year>\\d{4
6847 : unparsable : unparsable : 0.104137635 (s) : \\d{4}[-/][1
6848 : unparsable : unparsable : 0.069433606 (s) : [0-9]{4}-[
6849 : unparsable : unparsable : 0.062238864 (s) : \"^[12][0-9]{
6850 : unparsable : unparsable : 0.101694467 (s) : \"^(?P<yyy>
6851 : unparsable : unparsable : 0.080521138 (s) : (
6852 : failed : error init : 0.098476641 (s) : ^
6853 : failed : error init : 0.126331573 (s) : ^
6854 : failed : error init : 0.111727537 (s) : ^
6855 failed : unparsable : 0 (s) : Please check your regex.
6856 : failed : failed : 1.898735329 (s) : r
6857 failed : unparsable : 0 (s) : Please check your regex.
6858 : failed : failed : 0.166343167 (s) : \\
6859 failed : unparsable : 0 (s) : Please check your regex.
6860 failed : unparsable : 0 (s) : Please check your regex.
6861 : failed : failed : 2.38281653 (s) : (0,3)\\.?(\\d*)\\,?(0|[1-9]\\d*)?
6862 : failed : failed : 1.378611737 (s) : \\b\\d{1,2}[,.]\\d{3}\\b
6863 : failed : failed : 0.180761055 (s) : ^(1[1-9]|0)\\d{3}[,.]\\d{3}$
6864 : failed : failed : 0.797042443 (s) : 1-9[0-9]{0,3}\\.[0-9]{0,2},1[47][0-9]{1,2}
6865 : failed : failed : 1.385045056 (s) : \"^(0,)?\\d{3}(\\.\\d{1,2})?$\"
6866 : failed : failed : 3.271705938 (s) : (?<!0)\\d*
6867 : failed : failed : 10.392899677 (s) : \\d+(-?\\d+)?$
6868 : unparsable : unparsable : 0.088476773 (s) : [0-9]{1}[0-9]?[0-9]{1}[0-9]?[0-9]?[0-9]?[0-9]?([0-9
6869 : failed : failed : 1.02031712 (s) : \\b(?<!\\.)(?!0)(\\b[01578]\\b|\\b0,033\\b)\\b
6870 : failed : failed : 0.199295972 (s) : ^(0(\\d+)\\.)?(\\d+)(,(\\d+))?$
6871 : failed : failed : 49.807390643 (s) : [a-zA-Z0-9]([\\w\\-\\=\\[\\]]*[a-zA-Z0-9])*
6872 : failed : failed : 0.341971927 (s) : ^[a-zA-Z0-9][a-zA-Z0-9_-]{0,25}$ \"\"\"
6873 : failed : failed : 2.595148437 (s) : (?<![-a-zA-Z0-9\\.=\\*&^%$])[-a-zA-Z0-9_]{6,20}
6874 : failed : failed : 2.504564774 (s) : [a-zA-Z0-9_.-]*
6875 : failed : failed : 5.276227897 (s) : ^[a-zA-Z0-9]+$
6876 : unparsable : unparsable : 0.094071604 (s) : [^a-zA-Z0-9\\-\\=\\,\\.\\;\\/\\?\\(\\)\\*\\+\\-\\^\\$
6877 : unparsable : unparsable : 0.066814189 (s) : [0-9]{1,4}(?=\\s+[A-Za-z]{1}[A-Za-z0-9]{4}\\s+[0
6878 failed : unparsable : 0 (s) : Please check your regex.
6879 : failed : failed : 2.960888655 (s) : .*[a-zA-Z]*
6880 : unparsable : unparsable : 0.087271509 (s) : [^\\s-=]+
6881 : failed : failed : 0.801787706 (s) : \\d{3}
6882 : unparsable : unparsable : 0.04656141 (s) : \"(^
6883 : unparsable : unparsable : 0.076630804 (s) : '^[0-9]{3}-?[0-9]{3
6884 : failed : failed : 13.003683398 (s) : (?<!\\\\d)([1-9]\\\\d?)\\\\d
6885 : unparsable : unparsable : 0.057602976 (s) : ^[0-9]{4}-[0-9]{4}-[0
6886 : failed : failed : 0.746905007 (s) : \\d{3}-\\d{3}-\\d{3}
6887 : failed : failed : 0.157850938 (s) : \\d{3}-\\d{3}-\\d{3}
6888 : unparsable : unparsable : 0.073594236 (s) : \\b(\\d{1,2}-\\d{1,2}-\\
6889 : unparsable : unparsable : 0.062938211 (s) : \\D*[0-9]{4}\\-\\D*[0-9
6890 : unparsable : unparsable : 0.081145545 (s) : (^[0-9]{3}[- ][0-9]
6891 : failed : error init : 0.138901747 (s) : ^
6892 : unparsable : unparsable : 0.070807505 (s) : (
6893 : failed : error init : 0.156280141 (s) : ^
6894 : failed : error init : 0.114223895 (s) : ^
6895 : failed : error init : 0.150154547 (s) : ^
6896 : failed : error init : 0.17383238 (s) : ^
6897 failed : unparsable : 0 (s) : Please check your regex.
6898 : unparsable : unparsable : 0.079465654 (s) : [\"
6899 : failed : error init : 0.135697766 (s) : ^
6900 : failed : error init : 0.123131079 (s) : ^
6901 : failed : pumping failed : 193.819711669 (s) : [0-9]*\\.[0-9]*
6902 : failed : failed : 0.558407576 (s) : ^0+([1-9][0-9]*)$
6903 : failed : pumping failed : 85.595843032 (s) : [0-9]+\\.?[0-9]*
6904 : failed : failed : 0.472486301 (s) : ^[0-9]*[1-9][0-9]*$
6905 : failed : failed : 1.150212859 (s) : ^[+-]?[0-9]+\\.?[0-9]*$
6906 : failed : failed : 0.506663785 (s) : r'^
6907 : failed : failed : 0.806786332 (s) : \"^[0-9]{1,3}\\.?[0-9]{1,3}$\"
6908 : failed : failed : 0.108740231 (s) : ^[+-]?0?[1-9][0-9]?$
6909 : failed : pumping failed : 18.250125252 (s) : \\+?[0-9]*\\.?[0-9]+
6910 failed : unparsable : 0 (s) : Please check your regex.
6911 failed : unparsable : 0 (s) : Please check your regex.
6912 : failed : error init : 0.102975703 (s) : ^
6913 : failed : failed : 2.350395189 (s) : /
6914 : failed : error init : 0.096415797 (s) : ^
6915 : failed : failed : 0.466941062 (s) : SAS
6916 : failed : error init : 0.109168653 (s) : ^
6917 : failed : error init : 0.098295983 (s) : ^
6918 : failed : error init : 0.105986933 (s) : ^
6919 : failed : error init : 0.110866056 (s) : ^
6920 : failed : error init : 0.113066551 (s) : ^
6921 failed : unparsable : 0 (s) : Please check your regex.
6922 : failed : failed : 0.805260699 (s) : !
6923 failed : unparsable : 0 (s) : Please check your regex.
6924 : failed : error init : 0.086352482 (s) : ^
6925 : unparsable : unparsable : 0.069368024 (s) : (
6926 failed : unparsable : 0 (s) : Please check your regex.
6927 failed : unparsable : 0 (s) : Please check your regex.
6928 : unparsable : unparsable : 0.08875882 (s) : (
6929 : unparsable : unparsable : 0.061716517 (s) : (
6930 : failed : failed : 1.400969571 (s) : \\
6931 : unparsable : unparsable : 0.057924507 (s) : [hou
6932 : unparsable : unparsable : 0.08250616 (s) : ([0-9]{1,
6933 : unparsable : unparsable : 0.09584524 (s) : (0|1[0-9]|2[0-3
6934 : unparsable : unparsable : 0.076263297 (s) : ```pythonimport redef validate_time_format(time_st
6935 : unparsable : unparsable : 0.066474103 (s) : [^\\s]([01]?[0-9]|2[0-3
6936 : unparsable : unparsable : 0.072022938 (s) : ^\\d{1,
6937 : unparsable : unparsable : 0.058862029 (s) : [0-9]{1,2}[a-zA-Z]{1,
6938 : unparsable : unparsable : 0.070635343 (s) : (?P<hours>\\d+)
6939 : unparsable : unparsable : 0.060888719 (s) : ((?<![0-9])[0-9]|3[0-1]
6940 : unparsable : unparsable : 0.085649828 (s) : [1-2]{2}[0-9]{2
6941 failed : unparsable : 0 (s) : Please check your regex.
6942 : unparsable : unparsable : 0.054020888 (s) : [
6943 : failed : failed : 0.116175013 (s) : \"
6944 : failed : error init : 0.105276545 (s) : ^
6945 : failed : failed : 0.192856131 (s) : >
6946 failed : unparsable : 0 (s) : Please check your regex.
6947 failed : unparsable : 0 (s) : Please check your regex.
6948 : unparsable : unparsable : 0.078036732 (s) : [
6949 : failed : failed : 0.802259227 (s) : >
6950 : unparsable : unparsable : 0.05038532 (s) : [
6951 failed : unparsable : 0 (s) : Please check your regex.
6952 failed : unparsable : 0 (s) : Please check your regex.
6953 : unparsable : unparsable : 0.07272493 (s) : [
6954 : unparsable : unparsable : 0.051028933 (s) : ([
6955 : failed : error init : 0.115607822 (s) : ^
6956 failed : unparsable : 0 (s) : Please check your regex.
6957 failed : unparsable : 0 (s) : Please check your regex.
6958 failed : unparsable : 0 (s) : Please check your regex.
6959 : unparsable : unparsable : 0.059896734 (s) : [
6960 : failed : failed : 2.160712853 (s) : \\
6961 : unparsable : unparsable : 0.060588879 (s) : ^(?i)^[0-9]{2
6962 : unparsable : unparsable : 0.064161438 (s) : ^[A-Z][a-z]?[a-z]?[A-Za-z]?\\s*(Day)? (mo|sun|mon|tue|wed|thu|
6963 : failed : failed : 1.792854243 (s) : ^[a-zA-Z ]+$
6964 failed : unparsable : 0 (s) : Please check your regex.
6965 : failed : failed : 36.605325091 (s) : [a-z]|[A-Z][a-z]+|[a-z][A-Z][a-z]+|[A-Z][A-Z][a-z]+
6966 : unparsable : unparsable : 0.084735548 (s) : \"^(?i)Sun|(?i)Mon|(?i)Tue|(?i)Wed|(?i)Thu|(?i)Fri|(?i)Sat|(?i
6967 : failed : failed : 0.683122757 (s) : \"^[0-9]{2}\\s[a-zA-Z]{1}([a-zA-Z]?)+$\"
6968 : failed : failed : 0.693247719 (s) : \\b((mon|tue|wed|thu|fri|sat|sun|weekday)\\b|\\D)Regex explanati
6969 : failed : failed : 2.087746731 (s) : \"(?i)
6970 : failed : failed : 1.136992069 (s) : \\b(\\w+?)('[aeiou]|[aeiou]h|[aeiou]r|[aeiou]l)\\b
6971 : failed : failed : 0.864621101 (s) : \\d{7,9}
6972 : failed : failed : 1.446407921 (s) : \\d{7,9}
6973 : unparsable : unparsable : 0.102429872 (s) : ^[0-9]{7}[0-9]{8}{0-9]{3}[0-9]{4}$
6974 failed : unparsable : 0 (s) : Please check your regex.
6975 : unparsable : unparsable : 0.100814562 (s) : Matches mobile numbers that start with a 7,8,9 and have a total of 10 digits [78]?[89]?[89]?[89]?[89]?[89]?[
6976 : failed : failed : 0.141550931 (s) : ^[1-9][0-9]{6}[0-9]$
6977 : failed : pumping failed : 43.86880761 (s) : (?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[$-_@.&+]{15})
6978 failed : unparsable : 0 (s) : Please check your regex.
6979 : failed : failed : 21.311997915 (s) : [^1-9][0-9]*[1-9]Descripti
6980 : failed : failed : 7.229182135 (s) : The pattern is [a-zA-Z]+[0-9]{1,9}
6981 failed : unparsable : 0 (s) : Please check your regex.
6982 : failed : error init : 0.150470268 (s) : ^
6983 : unparsable : unparsable : 0.102100216 (s) : (
6984 : unparsable : unparsable : 0.054705498 (s) : +
6985 : unparsable : unparsable : 0.084446367 (s) : (\"
6986 : failed : error init : 0.110327229 (s) : ^
6987 : unparsable : unparsable : 0.05004287 (s) : (
6988 failed : unparsable : 0 (s) : Please check your regex.
6989 : failed : failed : 0.168569169 (s) : r
6990 : unparsable : unparsable : 0.055637891 (s) : +
6991 : failed : failed : 0.738912112 (s) : 0-9\\\\/0-9\\\\/0-9\\\\/0-9|a-zA-Z_\\\\-
6992 : failed : failed : 1.071275763 (s) : - \\d{1,2}\\/\\d{1,2}\\/\\d{4}
6993 : unparsable : unparsable : 0.071639361 (s) : ^(0[1-9]|1[012])\\/(0[1-9]|[12][0-
6994 : failed : pumping failed : 50.717820948 (s) : [a-z]+[0-9]{3}/[a-z]+[0-9]{3}/
6995 : unparsable : unparsable : 0.125023598 (s) : ([0-9]|[1-9][0-9]|30)-([0-9][1-9])-(
6996 : failed : failed : 2.421047845 (s) : /[0-9]{2}/[0-9]{2}/[0-9]{4}
6997 : failed : failed : 2.852659228 (s) : @\"\\d\\d{2}/\\d{2}/\\d{4}|\\d{2}/
6998 : failed : failed : 1.07616272 (s) : [\\d]{2}[-/.][0-9]{3}[\\d]{2}
6999 : unparsable : unparsable : 0.064753385 (s) : ^([0-9]{1,2})([0-9]{1,2})([0-
7000 : unparsable : unparsable : 0.096286135 (s) : [0-2][0-9][0-9][0-9][0-9][0-9][0-9
7001 : unparsable : unparsable : 0.097960927 (s) : ^(?=
7002 : failed : failed : 0.282813112 (s) : [a-zA-Z0-9]\\d{3}[a-zA-Z]{2}I'm looking for a regexp that matches any string representation of a phone number with or without the french international dialling code
7003 : failed : failed : 0.352913394 (s) : htt
7004 : failed : failed : 0.589225539 (s) : (PHONE_NUMBER_REGEX)
7005 : unparsable : unparsable : 0.071500551 (s) : (\\+[0-9]{1,3}[\\- ]?[0-9]{1,3}[\\- ][0-9]{1,3}[\\- ]?[0-9]{1,3})
7006 : failed : failed : 0.375617767 (s) : \"^[0-9]{3}[0-9]{3}[0-9]{4}[0-9]{3}$\"Explanati
7007 : failed : failed : 1.606973405 (s) : [+3-6-3-6-3-6-3-3-6-6-6]
7008 : failed : failed : 0.167620926 (s) : ^[\\+]?\\d{3}\\s[\\+]?\\d{2}[\\+]?\\d{4}
7009 : failed : failed : 0.893953497 (s) : \\+[0-9]{3}[-.][0-9]{3}[-.][0-9]{4}
7010 : failed : failed : 1.05112794 (s) : [(\\+33).* 034](?=[a-z])(?=\\d{3})(?=\\d{4})(?=\\d{3}\\d{3}\\d{3})
7011 : failed : failed : 3.812048977 (s) : \\d+(\\.\\d+)?$
7012 : failed : failed : 0.146200835 (s) : ^[0-9](\\.[0-9])?$
7013 : failed : failed : 0.282135785 (s) : \"^(?=.*\\d)(?=.*[.\\d])[0-9]+(\\.[0-9]{1,2})?.$\"In the above example, we use the positive lookahead assertions to ensure that the string contains at least one digit and
7014 failed : unparsable : 0 (s) : Please check your regex.
7015 : failed : failed : 0.186703447 (s) : ^[1-9][0-9]?\\.[0-9]{3}$
7016 : failed : failed : 0.210572797 (s) : ^\\d+\\.\\d+$
7017 : failed : failed : 1.413693502 (s) : [0-9]\\d{1,}
7018 : failed : failed : 80.88466488 (s) : [-\\d.]*\"\"\"
7019 : failed : failed : 2.767993912 (s) : \\b
7020 : failed : pumping failed : 48.120287982 (s) : [^\\d]*([0-9]{1,3})\\.([0-9]{1,2})\\.([0-9]{1,2})$
7021 : failed : failed : 0.934244172 (s) : \\d{2}-\\
7022 : unparsable : unparsable : 0.078209285 (s) : (\\d{1,2
7023 : failed : error init : 0.091915774 (s) : (?m)
7024 failed : unparsable : 0 (s) : Please check your regex.
7025 : failed : failed : 0.12862396 (s) : 0[1-9]|
7026 : unparsable : unparsable : 0.084978141 (s) : \"(\\d{1
7027 : failed : failed : 0.126823022 (s) : Date
7028 : unparsable : unparsable : 0.092613999 (s) : (dd)[.-/](
7029 : unparsable : unparsable : 0.072047374 (s) : (dd)[.-/](MM
7030 : unparsable : unparsable : 0.084920053 (s) : (^[0-9][
7031 : unparsable : unparsable : 0.092023756 (s) : \"([1-9]
7032 : unparsable : unparsable : 0.06261681 (s) : ^[1234][
7033 : unparsable : unparsable : 0.062332419 (s) : /([0-9
7034 : unparsable : unparsable : 0.07372485 (s) : \"^[0-9
7035 : unparsable : unparsable : 0.055094064 (s) : [0-9
7036 : unparsable : unparsable : 0.071760206 (s) : (\\d{8}
7037 : unparsable : unparsable : 0.058304578 (s) : \"^[0-9
7038 : failed : failed : 0.702850935 (s) : -[0-9]
7039 : unparsable : unparsable : 0.088631151 (s) : [^-]+[A
7040 : unparsable : unparsable : 0.077608592 (s) : (([A-Z]
7041 : unparsable : unparsable : 0.061022149 (s) : (
7042 : failed : error init : 0.116441742 (s) : ^
7043 : failed : failed : 0.207903176 (s) : -
7044 failed : unparsable : 0 (s) : Please check your regex.
7045 : failed : failed : 2.695202728 (s) : \\
7046 : failed : failed : 0.209993234 (s) : \\
7047 : unparsable : unparsable : 0.087759883 (s) : [
7048 : unparsable : unparsable : 0.061454196 (s) : (
7049 failed : unparsable : 0 (s) : Please check your regex.
7050 : failed : error init : 0.101027571 (s) : ^
7051 : failed : failed : 10.599542195 (s) : [0-9]{3}/[0-9]{2}/[0-9]{4}-\\d{2}-\\d{2}
7052 : failed : failed : 0.294993757 (s) : a range of 4 to 9 digits in length.
7053 : failed : failed : 0.492398152 (s) : \\d{2}\\s\\d{2}\\s\\d{4}
7054 : unparsable : unparsable : 0.078898854 (s) : (\\d{4}-\\d{2}-\\d{2}|20\\d\\d|20\\d-20\\d|20\\d
7055 : failed : failed : 0.337528058 (s) : /
7056 : unparsable : unparsable : 0.081091705 (s) : (0{1,2}[0-9]{2,3}[-\\/]0[0-9]{2,3}[-\\/]19[0
7057 : failed : failed : 19.053825073 (s) : ^0|[1-9]?[0-9]?[0-9]
7058 : failed : failed : 0.62312287 (s) : \\d{4}-\\d{2}-\\d{2}
7059 : failed : failed : 0.225669205 (s) : \\d{2}/\\d{2}/\\d{4}
7060 : failed : failed : 17.832818515 (s) : [0-9]{2}/[0-9]{2}/[0-9]{4}
7061 : failed : failed : 0.214998463 (s) : r'^\\d{6}$
7062 : failed : failed : 0.23405839 (s) : ^(\\\\d{6}\\\\d{1,2}\\\\d{1,3}\\\\d{1,3}\\\\d{1,3}\\\\d{1,3}\\\\d{1,3}\\\\d{1,4}|\\\\d{5}){3}
7063 : failed : failed : 0.770218639 (s) : \"^(\\d{6}|[A-Z]\\d{3})\\s(\\d{4})\\s(\\d{2})$\"
7064 : failed : failed : 0.560103848 (s) : ^[0-9]{6}$
7065 : failed : failed : 0.306926799 (s) : (a-z)(\\\\d|\\\\D)\\\\d{5}-\\\\d{4}
7066 : failed : failed : 0.133358432 (s) : RegEx for this descripti
7067 : failed : failed : 0.652300556 (s) : \"^[0-9]{4}[0-1]{2}$\"
7068 : failed : failed : 0.951412242 (s) : \\b\\d{6}\\b
7069 : failed : failed : 0.465096694 (s) : r'^[0-9]{6}$'
7070 : failed : failed : 0.708053222 (s) : (1) ^.*\\\\d{5}
7071 : unparsable : unparsable : 0.097675253 (s) : (0?[1-9]|1[012])?(0?[1-9]|1[012])?[-/](0?[
7072 : failed : failed : 0.248436725 (s) : \\d{4}\\-\\d{2}-\\d{2} (year, month and day).
7073 : failed : pumping failed : 40.75458374 (s) : (.*)-(.*)-(.*)
7074 : unparsable : unparsable : 0.063262528 (s) : /(19[0-9]|20[0-9]|21[0-9]|22[0-2])-(5[0-9]
7075 : failed : failed : 0.801707396 (s) : (\\d{4})-(\\d{2})-(\\d{2})
7076 : failed : failed : 1.296172673 (s) : (\\d{1,2})-(\\d{2})-\\d{4}
7077 : unparsable : unparsable : 0.08414849 (s) : (
7078 : failed : failed : 0.218359387 (s) : year should be 4 digits, month should be 2 digits, day should be 2 digits
7079 : failed : failed : 0.533381432 (s) : \\b(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})\\
7080 : failed : failed : 0.799477185 (s) : \\d{4}-\\d{2}-\\d{2}(\\s|-|\\.)\\d{2}
7081 : failed : failed : 0.374364905 (s) : (\\d\\s\\d)
7082 : failed : failed : 0.653343256 (s) : A9[A-Z][A-Z\\s]
7083 : unparsable : unparsable : 0.060505333 (s) : [A-Z]\\d{2} [A-
7084 failed : unparsable : 0 (s) : Please check your regex.
7085 : failed : failed : 1.600137694 (s) : [AB]\\d{2}[AB]
7086 : unparsable : unparsable : 0.079973294 (s) : (EC1A 2BB)|(WyMM 8YE
7087 : unparsable : unparsable : 0.062551758 (s) : \\b(EC1A|E[1-9]
7088 : unparsable : unparsable : 0.06879365 (s) : ^[A-Z]{1}[1-9
7089 : unparsable : unparsable : 0.107427697 (s) : (([A-Z]\\d+[A
7090 : unparsable : unparsable : 0.067201272 (s) : (\\d{1,3}\\s\\d{1
7091 : unparsable : unparsable : 0.081205307 (s) : \"D(?<digit>[0-9])(?<-letter>[a-z])\"
7092 : failed : failed : 0.268979326 (s) : r\"^(\\\\d-{3}-\\\\d{2})(\\\\D|$)\"
7093 : failed : pumping failed : 48.203997983 (s) : [\\d-]+[A-Z]?[A-Z][-\\d]?
7094 : unparsable : unparsable : 0.063494261 (s) : ([A-Z]\\d{3})-([A-Z]{2})-(\\d{3})\\-(\\d{4})-([A-Z]{2})([A-Z]{4}|[A-Z]{2}
7095 : failed : failed : 0.538957138 (s) : /^(D|F).(\\d{3})-(A|S)?$/.
7096 : failed : failed : 0.292914459 (s) : (D\\d-\\d\\d\\d)([A-Z]\\d-\\d\\d\\d)([A-Z]\\d\\d)\\d{2}[A-Z]\"\"\"
7097 : failed : failed : 0.580414154 (s) : d{6}[a-zA-Z]{2}
7098 : failed : failed : 0.800892542 (s) : ^\\d{3}-\\d{2}-\\d{3}$
7099 : failed : failed : 0.675801548 (s) : \\d{3}-[\\s\\d]{2}[\\s-]\\d{3}
7100 : unparsable : unparsable : 0.098174697 (s) : (D|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z)[-_
7101 : unparsable : unparsable : 0.079040209 (s) : (^
7102 : failed : failed : 0.323789228 (s) : \"(?i)
7103 : failed : failed : 0.591082481 (s) : \"
7104 : unparsable : unparsable : 0.071561475 (s) : ^(?!.*[.][^a-zA-Z0-9])(?!.*[.][^a-zA-
7105 : failed : failed : 6.720213529 (s) : [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]
7106 : failed : error init : 0.131805799 (s) : ^
7107 failed : unparsable : 0 (s) : Please check your regex.
7108 : failed : failed : 0.83842494 (s) : \\d\\.\\d\\.\\d\\.\\d\\/\\d\\d\\/\\d\\d\\/\\d\\d\\/\\d\\
7109 failed : unparsable : 0 (s) : Please check your regex.
7110 : failed : failed : 0.117866937 (s) : [^0-9A-Fa-f]
7111 : unparsable : unparsable : 0.080974185 (s) : ^((?=.{7,10}$)(?=
7112 : unparsable : unparsable : 0.093830263 (s) : ^[A-Za-z0-9]{2
7113 : unparsable : unparsable : 0.075577594 (s) : [\\s\\(\\)\\[\\]\\{\\}\\,\\
7114 : unparsable : unparsable : 0.054159668 (s) : r'^(?=.*[A-Z][a-
7115 : unparsable : unparsable : 0.080897011 (s) : ([A-Z][A-Z0-9]{0
7116 : unparsable : unparsable : 0.062309917 (s) : (((\\w{2})
7117 : unparsable : unparsable : 0.067226269 (s) : ^(?=.*\\\\d)(?=.*[a
7118 : failed : failed : 1.445680812 (s) : [A-Z]\\d+[A-Z]
7119 : unparsable : unparsable : 0.059205351 (s) : ^(\\A[A-Z]{4}\\d{
7120 : unparsable : unparsable : 0.079794388 (s) : [a-zA-Z]{4,6}(
7121 : unparsable : unparsable : 0.060662998 (s) : \"\\b[a-zA-
7122 : unparsable : unparsable : 0.1186658 (s) : \"^[A-Za-
7123 : failed : failed : 1.320609825 (s) : [a-z]{2}
7124 : unparsable : unparsable : 0.085306155 (s) : [a-z][a-z
7125 : unparsable : unparsable : 0.071228793 (s) : /^JW[0-9
7126 : unparsable : unparsable : 0.142752347 (s) : ^[a-zA-Z
7127 : failed : error init : 0.095461103 (s) : ^
7128 : unparsable : unparsable : 0.069524066 (s) : ^(?=.*[a-
7129 : unparsable : unparsable : 0.078674515 (s) : [(?!N)(?!M)(?!
7130 : failed : failed : 0.911286416 (s) : \\b\\w{2}\\d
7131 : unparsable : unparsable : 0.117801374 (s) : /^(?!.*[Aa])(?!.*[Bb
7132 : unparsable : unparsable : 0.090188253 (s) : /(^[^GB]*$|[^GB]*GB
7133 failed : unparsable : 0 (s) : Please check your regex.
7134 : unparsable : unparsable : 0.095388206 (s) : (?!GB)(AA|AB|BA|BC|B0|
7135 : failed : pumping failed : 40.014644357 (s) : [^`]+(?=GB)
7136 : failed : error init : 0.13664609 (s) : (?<![0-9A-Z])
7137 : failed : failed : 0.53874979 (s) : \"^[A-Za-z0-9]{9}
7138 : unparsable : unparsable : 0.057504993 (s) : ^(\\w+)(?=
7139 : unparsable : unparsable : 0.070460045 (s) : (?!^[\\W_](\\w+)
7140 : unparsable : unparsable : 0.077197413 (s) : ^[a-zA-Z0-9]+(\\.[
7141 : unparsable : unparsable : 0.069478431 (s) : \\d{5
7142 : unparsable : unparsable : 0.070871124 (s) : [^ATC
7143 : unparsable : unparsable : 0.062992363 (s) : [^A-
7144 : unparsable : unparsable : 0.08590808 (s) : ^[a-
7145 : unparsable : unparsable : 0.107524508 (s) : \"^(?
7146 : unparsable : unparsable : 0.061149847 (s) : [^a-
7147 : unparsable : unparsable : 0.065053456 (s) : \\b([0
7148 : unparsable : unparsable : 0.074978784 (s) : ^[a
7149 : unparsable : unparsable : 0.058852652 (s) : .*(?
7150 : unparsable : unparsable : 0.080143842 (s) : (?i)(
7151 : failed : failed : 0.151497509 (s) : var regex = /(?<year>\\d{4})/g;
7152 : unparsable : unparsable : 0.075060698 (s) : \"(\\d{4})/(\\d{1,2})(/\\d{
7153 : unparsable : unparsable : 0.109098492 (s) : jalali[0-9]{4}/[0-9]{2
7154 : failed : failed : 0.463319181 (s) : (\\d{4})/(\\d{2})/(\\d{2})
7155 : unparsable : unparsable : 0.068996679 (s) : (YYYY)\\/[0-9]{1,2}\\/[0
7156 : failed : failed : 0.829685139 (s) : \\d{4}\\/\\d{2}\\/\\d{2}
7157 : unparsable : unparsable : 0.072797787 (s) : ^[0-9]{4}[0-9]{2}/[
7158 : unparsable : unparsable : 0.081243699 (s) : [0-9]{4}-[0-9]{2}-[0-
7159 : unparsable : unparsable : 0.053600803 (s) : [0-9]{4}-[0-9]{2}-[0-
7160 : unparsable : unparsable : 0.097701952 (s) : (?<!\\S\\d)\\d{4}/([0-9
7161 : failed : failed : 34.50539546 (s) : [A-Za-z]{4}-[0-9]{2}-[0-9]{2}
7162 : failed : failed : 1.132563447 (s) : (Example) (?i)(^(0[1-9]|1[012])-(0[1-9]|1[012]|[3-9]))\\s\\d+$
7163 : failed : failed : 0.715922456 (s) : \\d{4}-\\d{2}-\\d{2}
7164 failed : unparsable : 0 (s) : Please check your regex.
7165 : failed : failed : 0.153104573 (s) : \\d\\d/\\d\\d/\\d\\d
7166 : failed : failed : 0.127332615 (s) : ^\\d{4}-\\d{2}-\\d{2}$
7167 : failed : pumping failed : 191.628312138 (s) : [A-Za-z]+\\s[0-9]+\\s[0-9]+\\.[0-9]+
7168 : failed : failed : 0.571280235 (s) : \\d{4}-\\d{2}-\\d{2}
7169 : failed : failed : 0.512089039 (s) : \\b[0-9]{4}-[0-9]{2}-[0-9]{2}\\b
7170 : failed : failed : 0.739161508 (s) : (\\d{4})-(\\d{2})-(\\d{2})
7171 : failed : pumping failed : 25.046409277 (s) : .*(facebook|twitter|youtube|imgur).*
7172 : unparsable : unparsable : 0.084213362 (s) : .*?\\s((http
7173 : unparsable : unparsable : 0.099189885 (s) : \"^[a-zA-Z0-9_.-]+\\.[a-zA-Z0-9_-.]+$\"
7174 : failed : failed : 0.162603615 (s) : Matches email, text, or social media
7175 : failed : failed : 0.518696234 (s) : @[^a-zA-Z0-9]
7176 : failed : failed : 0.695481486 (s) : \"^(facebook|twitter|youtube)$\"
7177 : unparsable : unparsable : 0.107838446 (s) : \"^[a-zA-Z0-9@#^%!&*()+\\-_\\'{}^\\[\\]\\/\\\\
7178 : failed : failed : 2.560679217 (s) : [\\d\\W]+
7179 : failed : failed : 0.27582174 (s) : \"^facebook[\\-\\_]+twitter[\\-\\_]+youtube[\\-\\_]+[^\\*\\d]+[\\*\\d\\_]*$\"
7180 : failed : failed : 0.781536922 (s) : (\\w+)[^a-zA-Z]
7181 : failed : failed : 0.286371735 (s) : (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})
7182 : unparsable : unparsable : 0.086079861 (s) : (.*?)\\b(?=(
7183 : failed : failed : 8.121912985 (s) : ^[a-zA-Z0-9\\-\\.]*(\\.|\\-)[a-zA-Z0-9\\-\\.]*$
7184 : failed : failed : 0.266417184 (s) : r\"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$\"
7185 : unparsable : unparsable : 0.077666871 (s) : (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(\\d{1,3}\\.
7186 : unparsable : unparsable : 0.062872087 (s) : ([a-zA-Z0-9\\._\\-]{1,}[a-zA-Z0-9\\-]{1,}[a-zA-Z0
7187 : failed : failed : 0.479111259 (s) : ^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$
7188 : failed : failed : 3.520844305 (s) : \\b[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\
7189 : failed : failed : 0.328573083 (s) : r\"^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$\"
7190 : failed : failed : 8.594017873 (s) : [0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}
7191 : unparsable : unparsable : 0.100867611 (s) : ^[1-2][0-9]\\.[0-9]{
7192 failed : unparsable : 0 (s) : Please check your regex.
7193 : failed : failed : 0.168333719 (s) : ^[0-9]{2}\\.[0-9]{2}$
7194 : unparsable : unparsable : 0.079766878 (s) : (time)\\.(
7195 : failed : failed : 0.551514107 (s) : \"^[0-9]{1,2}\\\\.[0-9]{1,2}\\\\s\\\\S{1,30}$\"
7196 : failed : failed : 0.621702484 (s) : [\\d]{0,2}\\.?[\\d]{0,2}
7197 : unparsable : unparsable : 0.07612094 (s) : \"(?i)\\b\\d{
7198 : unparsable : unparsable : 0.063668216 (s) : \\d{1,
7199 : unparsable : unparsable : 0.105865817 (s) : ^([0-9]{2}|2[0-3
7200 : unparsable : unparsable : 0.059567799 (s) : [0-9]{
7201 : failed : failed : 0.172139626 (s) : ^[A-Z0-9 ]{5,10}$
7202 : failed : failed : 0.112241829 (s) : ^[\\d]{5}\\s[\\d]{5}$
7203 : failed : failed : 0.270364195 (s) : ^\\d{5}\\s\\d{5}\\s\\d{5}\\d{5}$
7204 : failed : failed : 0.182744835 (s) : ^\\d{5}[A-Z]{5}$
7205 : unparsable : unparsable : 0.090725928 (s) : (\\d{1,5}
7206 : failed : failed : 7.690999266 (s) : (\\d{1,5} ){1,9}Generate a RegEx for this description. Answ
7207 : failed : error init : 0.129959107 (s) : (?<![\\w\\d])
7208 : failed : failed : 0.228671498 (s) : \"^[0-9]{5}\\s[0-9]{4}$\"
7209 : failed : failed : 4.668108891 (s) : (?=.[a-z])(?=.)(?=\\s)[0-9]{10}
7210 : failed : failed : 87.539674593 (s) : [0123456789]{5}\u2009(?=\\\\s[0123456789])
7211 : failed : error init : 0.110169093 (s) : ^
7212 : failed : failed : 2.308607936 (s) : -?\\d+
7213 : failed : failed : 0.207114541 (s) : ^[1-12]$
7214 : failed : failed : 0.574478956 (s) : \"^(?!0)(?!1)(?!2)(?!3)(?!4)(?!5)(?!6)(?!7)(?!8)(?!9)(?!10)(?!11)(?!12)$\"
7215 : failed : failed : 0.767249306 (s) : 0[1-9]|1[012]
7216 : failed : failed : 8.804600588 (s) : \"1|2|12\"
7217 : failed : failed : 0.992845004 (s) : r'^[1-12]$|^13$'
7218 : failed : failed : 0.984534795 (s) : [1-9][0-9]|1[012]
7219 : failed : failed : 0.136498694 (s) : ^(1|2|12)$
7220 : failed : failed : 0.438896075 (s) : rx = re.compile(r'^\\d{1,2}\\s$')
7221 : failed : failed : 0.339077274 (s) : (regex)  (\\d{2}|\\d{3})(-)?\\d+
7222 : failed : failed : 0.153002994 (s) : [^0-9]
7223 : failed : failed : 1.137760626 (s) : [A9]\\d{3}$
7224 : failed : failed : 0.173091415 (s) : ^([1-9]\\d{3}|10)\\-(\\d{2}-\\d{3})$
7225 : failed : failed : 0.614301175 (s) : [0-9]{3,3}
7226 : failed : failed : 0.839399973 (s) : \"^[0-9]{3}-[0-9]{4}$\"
7227 : failed : failed : 0.233868655 (s) : [^-\\d]
7228 : failed : failed : 0.138399469 (s) : ^\\d{3}$
7229 : failed : failed : 0.586363518 (s) : ^[1-9][0-9]{0,2}$
7230 : failed : failed : 0.300019454 (s) : Match any 3 digit number between 0 and 9, followed by the string \"000\" or \"01\".
7231 : failed : failed : 0.159523936 (s) : ^[GB]?[0-9]{9}$
7232 : failed : failed : 1.018815232 (s) : (\\d{2})
7233 : failed : failed : 18.869109924 (s) : \".*^GB(.+)$\"
7234 : failed : failed : 0.47218651 (s) : [GB]\\d{9}$
7235 : unparsable : unparsable : 0.06708782 (s) : ^([A-Z]{1,2})(\\d{0,9}
7236 : failed : failed : 75.298867284 (s) : \\A(GB|GB.*?)\\B\\z
7237 : failed : failed : 0.991519585 (s) : [a-zA-Z0-9 ]+
7238 : failed : failed : 0.168023309 (s) : ^(?![A-Z]$)(?!\\d$)^(?![A-Z]$)^(?![A-Z]\\d)^(?![A-Z]\\d\\d)^
7239 : failed : failed : 1.2620177 (s) : \"(?<!GB)([A-Z0-9]{11})(?!GB)\".
7240 : failed : failed : 0.186021171 (s) : \"^\\D+([\\d\\s-]*)\\D+(\\d+)$\"
7241 : failed : failed : 57.49332044 (s) : [0-9]{8}[A-Za-z]
7242 : failed : failed : 1.059426367 (s) : (\\d{8})(\\w)\\1
7243 : failed : failed : 63.24344812 (s) : [0-9]{8}[A-Z]
7244 : failed : failed : 0.191570928 (s) : ^\\d{8}[R](?=\\d{8})
7245 : failed : failed : 27.41186174 (s) : [A-Z0-9]{8}\\R[A-Z0-9]
7246 : unparsable : unparsable : 0.080849471 (s) : (1).{8}[A-Z][a-z]+|(2) [A-Z][A-Za-z0-9]{4} [A-Za-z0
7247 : failed : failed : 0.907750063 (s) : ^[0-9]{8}\\w{1}$
7248 : failed : failed : 0.652397327 (s) : [\\d]{8}\\w[A-Z]
7249 : failed : failed : 0.174360958 (s) : ^\\d{8}[A-Z]$
7250 : failed : failed : 0.171329951 (s) : [(1) ^[0-9]{8}[a-zA-Z][a-zA-Z]$]
7251 : failed : failed : 4.266478235 (s) : (\\\\d{1,2}[A-Z][A-Z0-9]{1,}[0-9A-Z]{2,})
7252 : unparsable : unparsable : 0.095744152 (s) : .+?(?=
7253 : failed : failed : 1.18105666 (s) : [^0-9]A[0-9]{2}[^0-9]
7254 : unparsable : unparsable : 0.096337601 (s) : ^([A-Z]\\d{1,2}[A-Z\\d]{1,2}[A-Z\\d]{1,
7255 : failed : failed : 8.214861199 (s) : [ACD][A-D][8-9]
7256 : unparsable : unparsable : 0.068957005 (s) : ^[a-f0-9][a-f0-9]{5}[a-f0-9]{3}[a-f0-
7257 : unparsable : unparsable : 0.092184656 (s) : (\"(^(?=.*[A-Z])|(?=.*[A-Z][A-Z])|(?=.*[A-Z][
7258 : failed : failed : 0.410637677 (s) : [^A-Za-z0-9]
7259 : failed : error init : 0.122324681 (s) : (.*?)
7260 : failed : failed : 30.707003108 (s) : (?<![A-Z])(?<![0-9])([A-Z]{4})(?![0-9])
7261 : failed : failed : 0.160925878 (s) : A-0,B-1,A-6,A-10,B-1
7262 : unparsable : unparsable : 0.069374035 (s) : ([A-9])\\d*([A-9])\\d*'''
7263 : failed : failed : 62.173104061 (s) : (^|[^A-Z])A[0-9A-HJ-NP-Z]*([A-Z]|$)
7264 : failed : failed : 1.863499186 (s) : The pattern should be [A0-A9]|[Aa]0-A9
7265 : unparsable : unparsable : 0.084576421 (s) : \"A(?P<num>\\d)0(?P<char>\\D)M*\"
7266 : failed : failed : 0.130802814 (s) : ^[a-z]{1}[0-9][0-9] [a-z]{1}$
7267 : failed : failed : 0.516240452 (s) : [^0-9]
7268 : unparsable : unparsable : 0.081390413 (s) : ^A(?P<MinSize>0)?(?P<MaxSize>10)?$
7269 : failed : failed : 1.145821307 (s) : ^A[1-9]\\d|B[1-9]\\d$Generate a RegEx for this description. Answ
7270 : failed : failed : 0.171578036 (s) : ([A-Z]\\d?)*
7271 : failed : failed : 0.571181741 (s) : \"^[0-9]*[02468]$\"    My co
7272 : failed : failed : 0.454774884 (s) : ^\\d{0,2}\\d{0,3}\\d{0,4}$
7273 : failed : failed : 0.54311939 (s) : [ \\d]{2,}
7274 : failed : failed : 0.215819888 (s) : The following regex should wo
7275 : unparsable : unparsable : 0.067239314 (s) : (^[^\\s]*
7276 : failed : failed : 1.46018939 (s) : [a string which matches this pattern]
7277 : failed : pumping failed : 191.781273241 (s) : [\\d\\d]{1,}[02468]\"\"\"
7278 : failed : error init : 0.105298126 (s) : ^
7279 : failed : failed : 3.179250586 (s) : [1-9][0-9]|[1-9][0-9][0-9]|[1-9]{3}
7280 : failed : failed : 0.802996406 (s) : \"^[1-9][0-9]*$\"
7281 : failed : failed : 21.199786314 (s) : [01-9]\\d*|[1-9]\\d*\\.?\\d*|100Descripti
7282 : failed : failed : 102.553400543 (s) : [0-9]{1,3}.[0-9]{3} or [0-9]{1,3}
7283 : failed : failed : 1.138813103 (s) : \\d+\\.?\\d*
7284 : failed : failed : 6.683534827 (s) : \\d+(\\.\\d{1,2})
7285 : failed : failed : 0.16236054 (s) : ^[0-9,.]+$5. Create a Python regex that matches a string that starts with 'a' or 'A', ends with 'e' or 'E', and has any number of characters in between. Answ
7286 : failed : failed : 0.241127047 (s) : ^-?\\d*\\.?\\d+$
7287 : failed : failed : 0.974738187 (s) : [0-9\\.]{1,2}\\.?[0-9]{0,1}
7288 : failed : failed : 0.741223413 (s) : \"^[0-9]+(.[0-9]+)?$\"
7289 : failed : failed : 1.008359582 (s) : \\d{1,3}
7290 : unparsable : unparsable : 0.0817472 (s) : \\-?.9|[1-9][0-9]*[.]9[1-9]{,3}
7291 : failed : failed : 2.104417852 (s) : ^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)^(?!.*[$@!])[a-zA-Z\\d]+$
7292 : failed : failed : 2.024829038 (s) : ^(?!.*[0-9])(?!.*[A-Z])(?!.*[a-z])[a-zA-Z0-9!@#$%^&*]{8,}$
7293 : failed : failed : 1.821589603 (s) : ^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z]).{6,15}$
7294 : failed : failed : 0.574531364 (s) : \"^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#]).{12}$\"
7295 : failed : failed : 0.144173815 (s) : ^[a-zA-Z0-9@#$@!\\$%\\^\\&\\*\\(\\)_]+$\"\"\"
7296 : failed : failed : 3.214366496 (s) : ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[^\\d\\W]+$
7297 : failed : failed : 1.673832238 (s) : ^[a-z0-9#@!$&*()_+-={}|\\[\\]\\\\\\^\\$]{3,}$
7298 : failed : failed : 1.109417439 (s) : (1) ^([^a-zA-Z]?)([a-zA-Z]{3})$
7299 : unparsable : unparsable : 0.079183517 (s) : |(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#\\$@!\\@!\\$\\@!\\$@!\\$
7300 : failed : failed : 14.148145885 (s) : ^[A-Za-z0-9!@#\\$@\\^&\\*\\(\\)\\-_=+\\[\\]\\\\{}]*$.
7301 failed : unparsable : 0 (s) : Please check your regex.
7302 : unparsable : unparsable : 0.077051781 (s) : (
7303 failed : unparsable : 0 (s) : Please check your regex.
7304 failed : unparsable : 0 (s) : Please check your regex.
7305 failed : unparsable : 0 (s) : Please check your regex.
7306 failed : unparsable : 0 (s) : Please check your regex.
7307 : unparsable : unparsable : 0.054982065 (s) : (
7308 failed : unparsable : 0 (s) : Please check your regex.
7309 : unparsable : unparsable : 0.09115455 (s) : \"(
7310 : failed : failed : 1.530801009 (s) : <
7311 : unparsable : unparsable : 0.088366997 (s) : [0-9]{2}\\|[0-9]?[0-9]{3}\\|([0-9
7312 : failed : failed : 0.871273089 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
7313 : failed : failed : 0.584656326 (s) : [6]\\d{1,2}/[1-9]\\d{1,2}/[1-9]
7314 : failed : failed : 0.715203341 (s) : \\d{2}\\/\\d{2}\\/\\d{4}
7315 : failed : failed : 0.196819541 (s) : ^\\d{1,2}\\s*\\/\\d{1,2}\\s*\\/\\d{4}$
7316 : unparsable : unparsable : 0.087860922 (s) : .*(?<month>[01]\\d){2}(?<day>\\d)/(?<year>[\\d
7317 : failed : failed : 0.898011985 (s) : (\\d{2}\\/\\d{2}\\/\\d{4})(-(\\d{1}|000))
7318 failed : unparsable : 0 (s) : Please check your regex.
7319 : unparsable : unparsable : 0.070578817 (s) : /^(0[1-9]|1[0-2])\\/(0[1-9]|[12
7320 : unparsable : unparsable : 0.07135552 (s) : ((0|[1-9]\\d{0,2})\\/(0|[1-9]\\d{0,
7321 : unparsable : unparsable : 0.060439399 (s) : \
7322 : unparsable : unparsable : 0.057769137 (s) : ^\\d{1,
7323 : unparsable : unparsable : 0.074924112 (s) : \"^(?P<H>\\d
7324 : failed : failed : 2.508388624 (s) : [0-9]\\\\
7325 : unparsable : unparsable : 0.074142572 (s) : \
7326 : unparsable : unparsable : 0.103433369 (s) : \"^(?P<hours>[01][0-9]|2[0-3
7327 : unparsable : unparsable : 0.07519042 (s) : \"^([0-9]{1,2
7328 : unparsable : unparsable : 0.079957524 (s) : ^[0-
7329 failed : unparsable : 0 (s) : Please check your regex.
7330 : unparsable : unparsable : 0.05846153 (s) : [0-9]{
7331 : unparsable : unparsable : 0.064382161 (s) : *  
7332 : failed : failed : 0.090976487 (s) : ^hh
7333 failed : unparsable : 0 (s) : Please check your regex.
7334 : unparsable : unparsable : 0.098127829 (s) : (\\d\
7335 : unparsable : unparsable : 0.0780942 (s) : '^\
7336 : unparsable : unparsable : 0.049529781 (s) : ^\\d{1,
7337 : unparsable : unparsable : 0.054877149 (s) : ^(?P<hr>\\d
7338 : unparsable : unparsable : 0.064552269 (s) : var reg = /^(?=.*\\d)(?=
7339 : failed : failed : 0.178894967 (s) : [1-9][0-9][0-9]|  0[1-9]|  1[012]|  2[0-9]{2}|  3[0-1]|
7340 : unparsable : unparsable : 0.053251148 (s) : \\d\
7341 : failed : failed : 0.770136726 (s) : \\d\\.\\d{0,9}
7342 : failed : failed : 2.503329755 (s) : ^[\\+(-]?[3-9]\\d*(\\.\\d+)?|2[\\d.]+$
7343 : failed : failed : 0.108502918 (s) : ^[-0-9]\\d{3}\\.([0-9]*)([eE][-+]?[0-9]+)$
7344 : failed : pumping failed : 40.965968375 (s) : ([0-9]+)\\.?[0-9]*e[-+][0-9]+
7345 : failed : failed : 0.163236769 (s) : ^[0-9]*
7346 : failed : failed : 0.753524164 (s) : \"^[-+]?[0-9]+\\.[0-9]*$\"
7347 : failed : failed : 0.18312738 (s) : #Match all numbers
7348 : unparsable : unparsable : 0.093059392 (s) : (.
7349 : failed : failed : 0.687249895 (s) : \"(?i)^[\\+\\-]?[0-9]*[\\.]?[0-9]+$\"Soluti
7350 : failed : failed : 4.948182299 (s) : -([a-zA-Z]+[\\d]*[\\.])?$
7351 : failed : failed : 0.163188108 (s) : /^\\d{1,2}\\d
7352 : unparsable : unparsable : 0.063154465 (s) : \\(\\b\\d{1,2}\\
7353 : failed : failed : 2.76321131 (s) : [0-9]{1,2}
7354 : failed : failed : 0.10982516 (s) : ^\\d{2}[-\\/.]
7355 : unparsable : unparsable : 0.097223628 (s) : \"^(\\d{1,2}\\/
7356 : failed : failed : 0.671697885 (s) : /^\\d{2}-\\d
7357 : unparsable : unparsable : 0.07906233 (s) : /^(0|[1-9]
7358 : unparsable : unparsable : 0.068011297 (s) : \"^([0-1][0-9
7359 : failed : failed : 0.391827416 (s) : ^\\d{1,2}\\
7360 : unparsable : unparsable : 0.083976679 (s) : \\d{1,2}([-/
7361 : failed : failed : 0.156035675 (s) : ```pythonimport re
7362 failed : unparsable : 0 (s) : Please check your regex.
7363 : failed : failed : 0.191722781 (s) : 1st/2nd/3rd/4th/5th/6th/7th/8th/9th/10th/11th/12th/13th/14th/
7364 : unparsable : unparsable : 0.08160805 (s) : ^(0[1-9]|1[0-2])\\/(0[1-9]|[12][0-9]|3[01])\\/([0-3][
7365 : failed : failed : 2.259920109 (s) : (at least one digit)\\d{1}/(\\d{1})/\\d{4}|(\\d{1})\\d{1}/\\d{1}/\\
7366 : unparsable : unparsable : 0.066420532 (s) : /^(0?[1-9]|1[012])/(0?[1-9]|[12][0-9]|3[012])/([1-9
7367 : failed : failed : 0.287286386 (s) : ^\\d{1,2}/\\d{1,2}/\\d{4}$
7368 : failed : failed : 0.217413087 (s) : ^01[0-9]{1,2}/[0-9]{1,2}/\\d{4}$
7369 : failed : failed : 0.207003503 (s) : ^([0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4})$
7370 : failed : failed : 0.606006336 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
7371 : failed : pumping failed : 148.764626657 (s) : ([0-9]+-)?([0-9]{4})-([0-9]{4})$
7372 : failed : error init : 0.085043604 (s) : ^
7373 : failed : failed : 4.129824651 (s) : (?<!\\d\\d\\d\\d)-(?<!\\d\\d\\d\\d-\\d\\d)
7374 : unparsable : unparsable : 0.080216047 (s) : (^|[^0-9])([0-9]{4}[-]?[0-9][-]?[0-9]{4
7375 : failed : failed : 0.219691928 (s) : /^.*\\s(\\d{2})(-(\\d{2}))?(\\s|-)?(\\d{2})(-(\\d{2}))
7376 : failed : failed : 2.717129065 (s) : 0[3-9]|[1-9]?[0-9]{2}
7377 : failed : failed : 26.341406001 (s) : [0-9]{4}-([0-9]{2})([0-9]{2})([0-9]{2})
7378 : failed : failed : 0.403269881 (s) : '\\b
7379 : unparsable : unparsable : 0.052566619 (s) : (?<![0-9])[0-9]{4}-?[0-9]{2}-?[0-9]{2
7380 : failed : failed : 44.609721895 (s) : [0-9]{4}-[0-9]{2}-([0-9]+[-.]){2}[0-9]{4}
7381 : failed : failed : 3.98230423 (s) : (.*)
7382 : failed : failed : 3.819207702 (s) : ^\\+989.*\\d{5}\\-.*\\d{5}$
7383 : failed : failed : 0.272972231 (s) : \"^[+89]\\d+$\"3. Write a RegEx pattern to extract email addresses from a dataset of social media posts. Answ
7384 : failed : failed : 80.228221469 (s) : -(?<!\\+)\\d\\d\\d\\d-\\d\\d-\\d\\d\\d\\d
7385 : unparsable : unparsable : 0.103025667 (s) : (\\+[9])\\d{9}Exampletext = \"+9890923444 text text+9890923444 text\"pattern = re.compile('(\\+[9])\\d{9
7386 : unparsable : unparsable : 0.053293718 (s) : +
7387 : failed : failed : 0.773574292 (s) : r'^(\\+988)?[1-9]\\d{10}$'
7388 : failed : failed : 0.154977696 (s) : ^[+89]\\d{9}[-\\s]?\\d{4}$
7389 : failed : failed : 0.284023294 (s) : \"^\\+[0-9]{9}[0-9]{9}[0-9]{9}$\"
7390 : failed : failed : 0.284831175 (s) : ^[ +89]?[0-9]{8}[ -]?[0-9]{4}[ +98]?[0-9]{2}[ -]?[0-9]
7391 : failed : failed : 1.061674931 (s) : ^[0-9]{1,3}\\.[0-9]{1,3}[0-9]{1,4}$
7392 : failed : failed : 15.058887853 (s) : (101|201|...) * 0-9 \\b
7393 : failed : failed : 2.156928036 (s) : \\b[1-9][0-9]{0,2}\\b
7394 : failed : failed : 0.312043867 (s) : \"000([1-9][0-9]?)\"
7395 : failed : failed : 0.209337938 (s) : ^[0-9][0-9][0-9][0-9][0-9]$
7396 : failed : failed : 1.183637034 (s) : \\d{3,10}
7397 : failed : failed : 0.835522393 (s) : [0-9]{3}
7398 : failed : failed : 0.301657777 (s) : \\d{1,3}([0-9]{1,3})([0-9]{0})? 3. Create a RegEx to match words that start with \"c\" or \"C\". Answ
7399 : unparsable : unparsable : 0.0713767 (s) : [0-9]{0,3}[0-9]{0,3}{0-9}{0-9}[0-9](?!00)
7400 : failed : failed : 0.902846265 (s) : (\\d+)(\\s\\d+)?
7401 : failed : pumping failed : 34.699976375 (s) : [^#]{3,30}[^\\d]{3,7}\"\"\"from random import randintfrom re
7402 : failed : failed : 0.176277061 (s) : ^([0-9]{14}){1}[^#]$
7403 : failed : failed : 0.205388012 (s) : ^(.{7})(.{7})(.{7})$
7404 : failed : failed : 1.911906246 (s) : ^[^0-9]*
7405 : unparsable : unparsable : 0.089944267 (s) : (0-9a-fA-F)#(0-9a-fA-F)#(0-9a-
7406 : unparsable : unparsable : 0.073384523 (s) : ^[^#\\d]*(?=\\d{16})(?=\\d{16}$)(?=^[
7407 : unparsable : unparsable : 0.081053644 (s) : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{
7408 : unparsable : unparsable : 0.084601688 (s) : ( \\d{8}
7409 : failed : failed : 0.122355089 (s) : ^([0-9]{8}[0-9]{3}[0-9]{3})$
7410 : failed : failed : 0.163689215 (s) : 0-9\\\\d{9}\\\\d{5}\\\\d{9}\\\\d{5}\\\\d{9}\\\\
7411 failed : unparsable : 0 (s) : Please check your regex.
7412 : failed : error init : 0.109331988 (s) : ^|^[A-Za-z]{3}[0-9]{3}[0-9]{3}[0-9]
7413 : unparsable : unparsable : 0.064077963 (s) : (.*?E\\s){^(?=(\\d\\d\\d\\d\\d\\d\\d)[\\d\\d\\d\\d\\d]
7414 : unparsable : unparsable : 0.072452932 (s) : ([0-9]{4}[NSW][0-9]{3}[E][0-9]{3}[S])([0-9
7415 : unparsable : unparsable : 0.065889259 (s) : (\"(([0-9A-F]{4}[0-9A-F]|[0-9A-F]{5}[0-9
7416 : unparsable : unparsable : 0.079581671 (s) : ^(?=^.{36})  [[^\\d\\d]|(?<!E)(?<!S)(?<!N)
7417 : failed : failed : 3.238822894 (s) : ^[^A-Z]*  
7418 : unparsable : unparsable : 0.078266853 (s) : (?i)\\b([0-9]{2}[Ee][0-9]{2}[Ss][0-9]{2})([
7419 : unparsable : unparsable : 0.063255255 (s) : q = \"^[0-9]{4}[A-Z]{3}[0-9]{3,4}[S]{1}[
7420 : failed : failed : 0.154058797 (s) : \"\\d\\dN\\d\\dE\\d\\dQ\\d\\d\"
7421 : failed : failed : 0.175636874 (s) : Raw prom
7422 : failed : failed : 0.185295053 (s) : Raw prom
7423 : failed : failed : 0.185584635 (s) : Raw prom
7424 : failed : failed : 0.147550749 (s) : Raw prom
7425 : failed : failed : 0.110966655 (s) : Raw prom
7426 : failed : failed : 0.172293783 (s) : Raw prom
7427 : failed : failed : 0.11397553 (s) : Raw prom
7428 : failed : failed : 0.126321745 (s) : Raw prom
7429 : failed : failed : 0.132697146 (s) : Raw prom
7430 : failed : failed : 0.140259135 (s) : Raw prom
7431 : failed : failed : 1.068845879 (s) : r\"([0-9]{2}-([1-9]{2})-([0-9]{4}))\"
7432 : unparsable : unparsable : 0.084274265 (s) : \\b(0?[1-9]|1[0-2])-(3[0-9]|[12][0-9])-(19|20
7433 : failed : failed : 7.330252105 (s) : [DD][-\\/MM-YYYY]
7434 : failed : failed : 59.711536633 (s) : (\\d+)-(\\d+)-(\\d+)-(.+)\"\"\"
7435 : unparsable : unparsable : 0.08247957 (s) : my_date_re = '^([0-2]|3[01])-([0-2]|3[01]|[0-9]|
7436 : failed : failed : 0.680243684 (s) : (0\\d-1\\d-\\d\\d)
7437 : failed : failed : 0.190405589 (s) : ^[0-9]\\d{2}\\-[0-9]\\d{2}\\-[0-9]\\d{4}$ I am learning
7438 failed : unparsable : 0 (s) : Please check your regex.
7439 : failed : failed : 0.162374968 (s) : ^\\d{2}-\\d{2}-\\d{4}$
7440 : failed : failed : 19.227963806 (s) : [a-zA-Z][a-zA-Z0-9]{3}[a-zA-Z]How would you check if
7441 : failed : failed : 0.474683499 (s) : r\"[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?
7442 : failed : failed : 29.737673243 (s) : ^[0-9]+(.[0-9]+)?$
7443 : failed : failed : 2.483480782 (s) : f[0-9]*\\.?[0-9]
7444 : failed : failed : 0.343078645 (s) : ^\\d+\\.\\d+$
7445 : failed : failed : 1.513706746 (s) : \\d{1,3}
7446 : failed : failed : 13.344867501 (s) : ^.*\\d*\\.\\d+$
7447 : failed : failed : 1.919330999 (s) : \\d+\\.(\\d+)\\s*
7448 : unparsable : unparsable : 0.106505113 (s) : ^(?P<sign> [+-]?(?P<exp>\\d+[eE][+-]\\d+))$
7449 : failed : failed : 0.498359399 (s) : \\d+\\.\\d+[eE][+\\-]\\d+
7450 : failed : failed : 0.76445402 (s) : \\d\\.?\\d\\b
7451 : failed : failed : 1.255732659 (s) : (?<=^|\\s)\\d+(\\.\\d+)?(?=\\s|$)Explanati
7452 : failed : failed : 0.842708309 (s) : [a-zA-Z0-9_]{3,20}[a-zA-Z0-9]
7453 : failed : failed : 0.809526736 (s) : \\d{4}-\\d{2}-\\d{2}
7454 : failed : failed : 2.430620944 (s) : (\\w+)
7455 : failed : failed : 2.223817565 (s) : [+-]?\\d+(\\.\\d+)?
7456 : failed : failed : 0.467151867 (s) : r'\\+\\-\\d-\\d-\\d'
7457 : unparsable : unparsable : 0.090148539 (s) : ^[0-9]{1,8}[a-zA-Z][0-9]{1,8}[a-zA-Z0-9\\-.]*$
7458 : failed : failed : 14.29524021 (s) : \"|expression|\"
7459 : failed : failed : 6.489847142 (s) : [+-]?\\d+ [ ]?\\d* [ ]?
7460 : failed : pumping failed : 38.475397316 (s) : .*\\d*\\s?[-+]\\s?\\d*\\.
7461 : failed : failed : 56.869305113 (s) : [0-9]{0,6}\\.([0-9]{0,6})\\.?[0-9]{0,6}
7462 : failed : failed : 0.171466917 (s) : ^[a-z][A-Z][a-z0-9]{1,4}$  Explanati
7463 : failed : failed : 1.421320593 (s) : \\b[JWRjw.]{1,4}\\b
7464 : unparsable : unparsable : 0.111153003 (s) : 1|[J-Z]?[A-Z][a-z]?[.]{0,1}?[a-z]{0,1}?[a
7465 : failed : failed : 9.876711372 (s) : .{1,4}|[a-zA-Z].*?[a-zA-Z]
7466 : failed : failed : 0.975634554 (s) : \"^[a-z][a-z0-9.]{1,4}$\"
7467 : unparsable : unparsable : 0.081524543 (s) : J(0|[a-z])[0-9]{0,2}|[a-z][0-9]{0,2}[.]?[a
7468 : failed : failed : 0.246290122 (s) : ^[a-z][a-z0-9_.]*$
7469 : failed : failed : 0.128390013 (s) : [^a-zA-Z0-9]
7470 : failed : failed : 47.481394706 (s) : [a-z]{1,4}[.][a-z]{1,4}
7471 : failed : error init : 0.150763346 (s) : ^
7472 failed : unparsable : 0 (s) : Please check your regex.
7473 : failed : error init : 0.122760086 (s) : ^
7474 : failed : failed : 0.154485887 (s) : \"
7475 : unparsable : unparsable : 0.088267572 (s) : (
7476 : failed : error init : 0.100338472 (s) : ^
7477 : unparsable : unparsable : 0.084258837 (s) : ([
7478 : failed : error init : 0.097141344 (s) : ^
7479 failed : unparsable : 0 (s) : Please check your regex.
7480 failed : unparsable : 0 (s) : Please check your regex.
7481 : failed : failed : 0.1946847 (s) : \\d{4}-\\d{4}-\\d{4}-\\d{4}\\bI tried this, but it's wrong.  I've added
7482 : failed : failed : 1.265485535 (s) : troy credit card ([0-9]{16}|2)\\d+$
7483 : unparsable : unparsable : 0.108848103 (s) : (\\d{16})(\\s\\d{4})(\\s\\d{4})(\\s\\d{4})(\\s\\d{4})(
7484 : unparsable : unparsable : 0.113610348 (s) : [0-9]{16}[-\\s]?[0-9]{16}[-\\s]?[0-9]{16}[-
7485 : unparsable : unparsable : 0.082677449 (s) : ^\\d{16}(
7486 : failed : failed : 0.903671117 (s) : \\b[-\\d]{4}[ -\\d]{4}\\b
7487 : unparsable : unparsable : 0.076255552 (s) : /^(?=^[0-9]{16}$)(?=.*[a-zA-Z]{2}$)(?=.*[A-Z
7488 : failed : failed : 13.458198967 (s) : [0-9]{4}-[0-9]{4}-[0-9]{3}-[0-9]{3}
7489 : failed : failed : 0.694449405 (s) : \\9792[13]\\1[11]\\1[11]
7490 : failed : failed : 0.162788611 (s) : ^[a-z]{5} [a-z]{5}$My soluti
7491 : unparsable : unparsable : 0.053998025 (s) : ^[^\\s]*YES[^\\s]*[^\\s]*[^
7492 : failed : failed : 0.371396253 (s) : YES.
7493 : unparsable : unparsable : 0.057621721 (s) : [^ nO ]|^ nO [^ nO ]|^ nO [^ n
7494 : unparsable : unparsable : 0.079937266 (s) : ^(?!
7495 : failed : failed : 27.926916175 (s) : [^YES]+
7496 : failed : failed : 0.392991262 (s) : NO
7497 : failed : failed : 1.846008632 (s) : (?<!\\w)NO(?!\\w)\rDescripti
7498 : failed : failed : 0.136709949 (s) : ^YES$
7499 : failed : failed : 0.231242836 (s) : (YES)|(Yes)|(YEs)|(yEs)|(yeS)|(No)|
7500 : unparsable : unparsable : 0.076514827 (s) : ^(?=.*[a-zA-Z])(?=.*[0-9]
7501 : failed : error init : 0.102232433 (s) : ^
7502 : failed : error init : 0.140533559 (s) : ^
7503 : unparsable : unparsable : 0.102133429 (s) : [
7504 : failed : error init : 0.10750939 (s) : ^
7505 : failed : failed : 0.149671104 (s) : /
7506 : failed : failed : 3.918187354 (s) : \\
7507 : unparsable : unparsable : 0.064860907 (s) : [
7508 : failed : error init : 0.098146574 (s) : ^
7509 failed : unparsable : 0 (s) : Please check your regex.
7510 : failed : failed : 2.032767682 (s) : 01
7511 : failed : failed : 1.654890611 (s) : [0-9]+
7512 : failed : failed : 0.163386028 (s) : ^[1-9][0-9]{0,9}$
7513 : failed : failed : 0.540059088 (s) : ^\\+?\\d{0,1}\\d{0,1}\\d{0,5}\\d{0,5}$
7514 : failed : failed : 0.535533947 (s) : \"^[0-9]{1,10}$\"Explanati
7515 : failed : failed : 0.444462783 (s) : r'^[1-9]\\d{0,9}(\\.\\d+)?$'
7516 : failed : failed : 0.351895742 (s) : [\"[0-9]{1,10}\"]
7517 : failed : pumping failed : 60.572656157 (s) : ^[\\d]+(\\.[\\d]+)$
7518 : failed : failed : 1.576274325 (s) : \\s*\\d{1,2}[.]\\s*\\d{10}
7519 : failed : failed : 0.108084566 (s) : ^[0-9]{1,10}$
7520 : failed : failed : 0.169296639 (s) : ^\\d{1,10}$
7521 : failed : error init : 0.108211362 (s) : (3[0-3])[0-9]{11}\"  The [0-3] means that the first three digits are allowed, the {11} means that the next 11 digits must also be digits.
7522 : unparsable : unparsable : 0.089939949 (s) : ^03[0-3][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-
7523 : failed : failed : 3.600530833 (s) : ^[0-9]{4}(?!.*\\s)
7524 : failed : failed : 0.171580179 (s) : ^03[0-9][0-9][0-9]{21}$
7525 : failed : failed : 0.728017691 (s) : [0-9]{3,11}
7526 : failed : failed : 0.763741958 (s) : \\d{3}[0-5]\\d{6}
7527 : failed : failed : 1.085785112 (s) : ^[^-\\d]+$
7528 : failed : failed : 0.200133768 (s) : ^\\d{3}\\d{4}\\d{1}\\d*$
7529 : failed : failed : 0.671979782 (s) : \\d{3}\\\\d{3}\\\\d{5}[^\\\\d]
7530 : failed : failed : 0.736463824 (s) : 03[3-3]\\d{4}
7531 : unparsable : unparsable : 0.051809192 (s) : (^(1?\\d{3})(0?\\d{2})(1?\\d{2})(2?
7532 : unparsable : unparsable : 0.056556298 (s) : ^(\\d\\d\\d\\d\\d)(\\d\\d)(\\d\\d)(\\d\\d)(\\d
7533 : unparsable : unparsable : 0.10078157 (s) : dateTime = re.compile(r\"^(\\d{4})(\\d{2})(\\d{2})(
7534 : unparsable : unparsable : 0.072375367 (s) : (\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{
7535 : failed : failed : 0.152132967 (s) : ^(\\d{4})(\\d{2})(\\d{2})[^T]$
7536 : unparsable : unparsable : 0.060842222 (s) : \"^(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{
7537 : unparsable : unparsable : 0.082155414 (s) : [a-z]{3}[0-9]{4}[0-9]{2}[0-
7538 : failed : failed : 0.255256116 (s) : YYYYMMDDHHMMSS+
7539 : unparsable : unparsable : 0.068889549 (s) : [\\d]{4}[-][\\d]{2}[-][\\d]{2}[-][
7540 : failed : failed : 0.691254452 (s) : \\d{4}[0-9]{0,2}\\d{2}[0-9]{4}
7541 : failed : failed : 0.768886378 (s) : [\\d]{4}-[\\d]{4}-[\\d]
7542 : failed : failed : 0.673464208 (s) : ((\\d{6})-(\\d{6}))
7543 : unparsable : unparsable : 0.095575055 (s) : ^[4-9]{3} (\\d{3}-\\
7544 : failed : failed : 0.321291969 (s) : ^[0-9]{3}[0-9]{3}-
7545 : unparsable : unparsable : 0.08330853 (s) : /^(10|11|12)\\d{3}\\-\\d{3
7546 : unparsable : unparsable : 0.088061857 (s) : ^(    \\d{3}-\\d{4}|
7547 : unparsable : unparsable : 0.075251875 (s) : (([3-9][0-9])( )([3-9][0
7548 : unparsable : unparsable : 0.071655681 (s) : (?<![0-9])(?=
7549 : unparsable : unparsable : 0.061385068 (s) : \"^3[4-5][1-2][0-9][0-
7550 : unparsable : unparsable : 0.070889368 (s) : ^(?=(\\d{3}){3}).*((\\d
7551 failed : unparsable : 0 (s) : Please check your regex.
7552 failed : unparsable : 0 (s) : Please check your regex.
7553 : failed : error init : 0.099162012 (s) : ^
7554 : failed : failed : 1.17738793 (s) : \"
7555 : unparsable : unparsable : 0.086128442 (s) : (
7556 : failed : failed : 0.147007553 (s) : \"
7557 failed : unparsable : 0 (s) : Please check your regex.
7558 : unparsable : unparsable : 0.056432196 (s) : (
7559 : failed : failed : 1.881228746 (s) : \"
7560 : unparsable : unparsable : 0.054165118 (s) : (
7561 : failed : failed : 2.937850318 (s) : ^.*(ing)$
7562 : failed : failed : 0.338623806 (s) : \"ing(?=\\s).\"
7563 : failed : failed : 0.687773563 (s) : \"(\\w+)ing.*(\\w).\"
7564 : failed : failed : 0.262541358 (s) : r\"^[a-zA-Z]+ing(.*)$\"
7565 : failed : failed : 30.858737972 (s) : r\"reading.*ing$\"
7566 : failed : failed : 200.145963813 (s) : [a-zA-Z0-9 ]*ing
7567 : failed : pumping failed : 89.945230672 (s) : [^a-zA-Z0-9]*ing$
7568 : failed : failed : 0.191503592 (s) : (example) \".*ing.*\" 3. Create a RegEx that matches any word that begins with \"cat\" or \"dog\". Answ
7569 : failed : failed : 0.173932487 (s) : ing$
7570 : failed : failed : 0.43219265 (s) : [add your answer here]
7571 : failed : failed : 9.00248419 (s) : e[a-zA-Z]{1,2}[A-Za-z0-9=]*Generate a RegEx for this description. Answ
7572 : unparsable : unparsable : 0.062566577 (s) : \"=E3=9C=80\" \"\"\"pattern = re.compile(r'=([0-9A-Fa-f]{3})=([0-9A-Fa
7573 : failed : failed : 0.204387091 (s) : ^[a-f0-9]{4}[a-f0-9]{4}[a-f0-9]{4}$
7574 : failed : failed : 0.323906618 (s) : \\b\\w+\\b
7575 : failed : pumping failed : 56.711064095 (s) : .*(?==(H[A-Fa-f])).*
7576 : failed : failed : 1.156813661 (s) : ([A-Fa-f]{2})\\s ([0-9]{4})([0-9]{2})?
7577 : failed : failed : 1.570053794 (s) : [A-Za-z0-9]{3}[A-Za-z0-9]{3}[A-Za-z0-9]
7578 : unparsable : unparsable : 0.0815865 (s) : [0-9A-Fa-f]{4}[0-9AB-Fa-f]=[0-9A-Fa-f]{4}[0-9AB-Fa-
7579 : failed : failed : 12.996137319 (s) : (\\w+)=([\\w\\s]+)=([\\w\\s]+)
7580 : failed : failed : 0.189677428 (s) : ^[a-zA-Z0-9]{3}[-0-9]{3}[a-zA-Z0-9]{3}$
7581 : failed : failed : 23.321376876 (s) : [0-9]{3}[A-Z]{4}[0-9]{4}[A-Z]{2}
7582 : unparsable : unparsable : 0.081519214 (s) : (?i)(?=.*[1-9])[1-9]{9} (?=.*[0-9])[0-9]{
7583 : failed : failed : 0.599006888 (s) : ^[0-9]{8}-[0-9]{4}$|^[0-9]{3}-[0-9]
7584 : failed : failed : 2.400837566 (s) : (?=^[A-Za-z0-9]{8}$)
7585 : failed : failed : 0.642554653 (s) : ~[0-9]{5}-[0-9]{3}-[0-9]{4}~
7586 : failed : failed : 0.258300578 (s) : (\\d{3})-(\\d{3})-(\\d{4})-(\\d{2})-(\\d{4})
7587 : unparsable : unparsable : 0.094268342 (s) : * (.*)$* *
7588 : unparsable : unparsable : 0.062565194 (s) : ^[A-Z][0-9]{8}-([A-Z]{3}[0-9]{4}[0-9]
7589 : failed : failed : 0.250002383 (s) : ^[0-9]{9}(-[0-9]{4})$
7590 : failed : failed : 1.061204662 (s) : \"^[A-Z]{3}[0-9]{3}[0-9]{3}$\"
7591 : failed : failed : 35.458114257 (s) : [a-z][0-9]{2}\\-[0-9]{2}\\-\\d{2}|[0-9]{4}\\-[0-9]{4}\\-\\d{4}
7592 : failed : failed : 0.552982081 (s) : \"^(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])\\/([0-9]{2}|[1-9])$\"
7593 : failed : failed : 0.704958886 (s) : \\d{1,2}/\\d{1,2}/\\d{4}
7594 : failed : failed : 0.250671894 (s) : ^(20[1-9]|[2-9]\\d)\\/(0[1-9]|1[012])(0[1-9]|1[012])$
7595 : failed : failed : 0.945262174 (s) : [\\d-]{1,2}[-/ \\d]{1,2}[-/ \\d]{1,2}[-/ \\d]{1,2}
7596 : failed : failed : 0.931201132 (s) : \\d{1,2}\\/\\d{2,}\\/\\d{4}|\\d{1,2}\\/\\d{1,2}\\/\\d{1,2}
7597 : failed : failed : 11.73892297 (s) : .{2}(?<=\\\\d{1,2})[0-9]{4}(?=^\\\\d{4}$)
7598 : unparsable : unparsable : 0.121053545 (s) : (?<year>\\d{4}-\\d{2}-\\d{2}), (?<month> \\d{2}), (?<day> \\d{2}), (?<hour> \\d{2}), (?<minute
7599 : failed : failed : 1.444874204 (s) : \"\\d{1,2}/\\d{1,2}\"
7600 : failed : failed : 0.684479053 (s) : \\d{1,2}[./]\\d{2}\\-\\d{2}
7601 : failed : failed : 0.197613255 (s) : .{1,5}(?!\\d)
7602 : unparsable : unparsable : 0.06434953 (s) : (?<![a-zA-Z0-9])([0]{5})(?![a-zA-Z0-9])In the regex, (?<![a-z
7603 : failed : error init : 0.112713781 (s) : ^
7604 : failed : failed : 1.105253694 (s) : (\\d{5})(?!\\1)
7605 : failed : failed : 0.12765039 (s) : xxx-xxx-xxxx-xxx-xxxx-xx
7606 : failed : failed : 4.123039614 (s) : ^[^0]*
7607 : failed : error init : 0.122328028 (s) : ^
7608 : failed : failed : 1.156775509 (s) : [0-9][0-9]?[0-9][0-9][0-9][0-9]
7609 : unparsable : unparsable : 0.069894408 (s) : /[10-9][0-9][0-9]|[0-9]{3}([0-9]{2}[0-9]|[0-9]{2}[0-
7610 : failed : failed : 0.173045439 (s) : ^\\d{5}
7611 : failed : failed : 0.42174785 (s) : (^[A-D]{2})\\d{6}$
7612 : failed : failed : 0.14586672 (s) : ^[A-D]{1}[0-9]{2}[A-D]$
7613 : failed : failed : 0.200296522 (s) : ^[A-D][0-9]{4}(-[0-9]{4})?$
7614 : failed : failed : 0.765131346 (s) : .[0-9][0-9][0-9]
7615 : unparsable : unparsable : 0.0607182 (s) : ^([A-Z][A-Z][0-9]{4})([0-9]{3})([A-Z][
7616 : unparsable : unparsable : 0.091585265 (s) : (^[A-Z]{2}[0-9]{2}\\s[A-Z]{2}[0-9]
7617 : failed : failed : 0.202366353 (s) : (^[A-D]{4}[0-9]{2}[A-D]{2})$
7618 : unparsable : unparsable : 0.075515708 (s) : ^[A-Z][0-9]{4}([0-9][A-Z]{3})?[0-9]{
7619 : unparsable : unparsable : 0.066913504 (s) : [0-9]{3}[AB][0-9]{3}[CZ][0-9]{3}[0-9
7620 : failed : failed : 0.169664457 (s) : ^\\d{3}-\\d{4}[A-D]$